

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 29 18:07:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   104                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   105                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   106                           	psect	pa_nodes0,global,class=CODE,delta=1
   107  0000                     
   108                           ; Version 2.32
   109                           ; Generated 02/02/2021 GMT
   110                           ; 
   111                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution. Publication is not required when
   125                           ;        this file is used in an embedded application.
   126                           ; 
   127                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   128                           ;        software without specific prior written permission.
   129                           ; 
   130                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   131                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   132                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   133                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   134                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   135                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   136                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   137                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   138                           ; 
   139                           ; 
   140                           ; Code-generator required, PIC18F4321 Definitions
   141                           ; 
   142                           ; SFR Addresses
   143  0000                     
   144                           	psect	idataCOMRAM
   145  001927                     __pidataCOMRAM:
   146                           	callstack 0
   147                           
   148                           ;initializer for _lletraInici
   149  001927  41                 	db	65
   150  001928  44                 	db	68
   151  001929  47                 	db	71
   152  00192A  4A                 	db	74
   153  00192B  4D                 	db	77
   154  00192C  50                 	db	80
   155  00192D  54                 	db	84
   156  00192E  57                 	db	87
   157  00192F  00                 	db	0
   158                           
   159                           ;initializer for _convertir
   160  001930  FA                 	db	250
   161                           
   162                           ;initializer for _direccio
   163  001931  FF                 	db	255
   164                           
   165                           ;initializer for _usuariActualSIO
   166  001932  FF                 	db	255
   167                           
   168                           ;initializer for _usuariActual
   169  001933  FF                 	db	255
   170                           
   171                           ;initializer for _delUser
   172  001934  FF                 	db	255
   173                           
   174                           ;initializer for _ultimaTecla
   175  001935  FF                 	db	255
   176                           
   177                           ;initializer for _timerSMS
   178  001936  FF                 	db	255
   179                           
   180                           ;initializer for _novaTecla
   181  001937  FF                 	db	255
   182                           
   183                           ;initializer for _lletraASCII
   184  001938  FF                 	db	255
   185                           
   186                           ;initializer for GLCDMotor@max2
   187  001939  0F                 	db	15
   188                           
   189                           ;initializer for GLCDMotor@max1
   190  00193A  0F                 	db	15
   191                           
   192                           ;initializer for _novaLletra
   193  00193B  FF                 	db	255
   194                           
   195                           ;initializer for _NovaTecla
   196  00193C  FF                 	db	255
   197                           
   198                           ;initializer for _tempsJugant
   199  00193D  30                 	db	48
   200  00193E  30                 	db	48
   201  00193F  3A                 	db	58
   202  001940  30                 	db	48
   203  001941  30                 	db	48
   204  001942  00                 	db	0
   205                           
   206                           ;initializer for _string
   207  001943  30                 	db	48
   208  001944  30                 	db	48
   209  001945  3A                 	db	58
   210  001946  30                 	db	48
   211  001947  30                 	db	48
   212  001948  00                 	db	0
   213                           
   214                           ;initializer for _stringScore
   215  001949  30                 	db	48
   216  00194A  30                 	db	48
   217  00194B  30                 	db	48
   218  00194C  00                 	db	0
   219                           
   220                           	psect	idataBANK0
   221  001900                     __pidataBANK0:
   222                           	callstack 0
   223                           
   224                           ;initializer for _enterNewName
   225  001900  45                 	db	69
   226  001901  6E                 	db	110
   227  001902  74                 	db	116
   228  001903  65                 	db	101
   229  001904  72                 	db	114
   230  001905  20                 	db	32
   231  001906  4E                 	db	78
   232  001907  65                 	db	101
   233  001908  77                 	db	119
   234  001909  20                 	db	32
   235  00190A  4E                 	db	78
   236  00190B  61                 	db	97
   237  00190C  6D                 	db	109
   238  00190D  65                 	db	101
   239  00190E  00                 	db	0
   240                           
   241                           ;initializer for _teclaPremuda
   242  00190F  01                 	db	1
   243  001910  02                 	db	2
   244  001911  03                 	db	3
   245  001912  04                 	db	4
   246  001913  05                 	db	5
   247  001914  06                 	db	6
   248  001915  07                 	db	7
   249  001916  08                 	db	8
   250  001917  09                 	db	9
   251  001918  0A                 	db	10
   252  001919  00                 	db	0
   253  00191A  0B                 	db	11
   254                           
   255                           ;initializer for _highScore
   256  00191B  48                 	db	72
   257  00191C  69                 	db	105
   258  00191D  67                 	db	103
   259  00191E  68                 	db	104
   260  00191F  20                 	db	32
   261  001920  73                 	db	115
   262  001921  63                 	db	99
   263  001922  6F                 	db	111
   264  001923  72                 	db	114
   265  001924  65                 	db	101
   266  001925  3A                 	db	58
   267  001926  00                 	db	0
   268                           
   269                           	psect	mediumconst
   270  001CCA                     __pmediumconst:
   271                           	callstack 0
   272  001CCA  00                 	db	0
   273  001CCB                     _menu:
   274                           	callstack 0
   275  001CCB  31                 	db	49
   276  001CCC  2E                 	db	46
   277  001CCD  20                 	db	32
   278  001CCE  4E                 	db	78
   279  001CCF  65                 	db	101
   280  001CD0  77                 	db	119
   281  001CD1  20                 	db	32
   282  001CD2  67                 	db	103
   283  001CD3  61                 	db	97
   284  001CD4  6D                 	db	109
   285  001CD5  65                 	db	101
   286  001CD6  00                 	db	0
   287  001CD7  00                 	db	0
   288  001CD8  00                 	db	0
   289  001CD9  00                 	db	0
   290  001CDA  00                 	db	0
   291  001CDB  00                 	db	0
   292  001CDC  00                 	db	0
   293  001CDD  00                 	db	0
   294  001CDE  00                 	db	0
   295  001CDF  00                 	db	0
   296  001CE0  00                 	db	0
   297  001CE1  32                 	db	50
   298  001CE2  2E                 	db	46
   299  001CE3  20                 	db	32
   300  001CE4  53                 	db	83
   301  001CE5  68                 	db	104
   302  001CE6  6F                 	db	111
   303  001CE7  77                 	db	119
   304  001CE8  20                 	db	32
   305  001CE9  74                 	db	116
   306  001CEA  6F                 	db	111
   307  001CEB  70                 	db	112
   308  001CEC  20                 	db	32
   309  001CED  35                 	db	53
   310  001CEE  20                 	db	32
   311  001CEF  73                 	db	115
   312  001CF0  63                 	db	99
   313  001CF1  6F                 	db	111
   314  001CF2  72                 	db	114
   315  001CF3  65                 	db	101
   316  001CF4  73                 	db	115
   317  001CF5  20                 	db	32
   318  001CF6  00                 	db	0
   319  001CF7  33                 	db	51
   320  001CF8  2E                 	db	46
   321  001CF9  20                 	db	32
   322  001CFA  53                 	db	83
   323  001CFB  68                 	db	104
   324  001CFC  6F                 	db	111
   325  001CFD  77                 	db	119
   326  001CFE  20                 	db	32
   327  001CFF  75                 	db	117
   328  001D00  73                 	db	115
   329  001D01  65                 	db	101
   330  001D02  72                 	db	114
   331  001D03  73                 	db	115
   332  001D04  00                 	db	0
   333  001D05  00                 	db	0
   334  001D06  00                 	db	0
   335  001D07  00                 	db	0
   336  001D08  00                 	db	0
   337  001D09  00                 	db	0
   338  001D0A  00                 	db	0
   339  001D0B  00                 	db	0
   340  001D0C  00                 	db	0
   341  001D0D  34                 	db	52
   342  001D0E  2E                 	db	46
   343  001D0F  20                 	db	32
   344  001D10  4D                 	db	77
   345  001D11  6F                 	db	111
   346  001D12  64                 	db	100
   347  001D13  69                 	db	105
   348  001D14  66                 	db	102
   349  001D15  79                 	db	121
   350  001D16  20                 	db	32
   351  001D17  75                 	db	117
   352  001D18  73                 	db	115
   353  001D19  65                 	db	101
   354  001D1A  72                 	db	114
   355  001D1B  73                 	db	115
   356  001D1C  00                 	db	0
   357  001D1D  00                 	db	0
   358  001D1E  00                 	db	0
   359  001D1F  00                 	db	0
   360  001D20  00                 	db	0
   361  001D21  00                 	db	0
   362  001D22  00                 	db	0
   363  001D23  35                 	db	53
   364  001D24  2E                 	db	46
   365  001D25  20                 	db	32
   366  001D26  53                 	db	83
   367  001D27  68                 	db	104
   368  001D28  6F                 	db	111
   369  001D29  77                 	db	119
   370  001D2A  20                 	db	32
   371  001D2B  74                 	db	116
   372  001D2C  69                 	db	105
   373  001D2D  6D                 	db	109
   374  001D2E  65                 	db	101
   375  001D2F  00                 	db	0
   376  001D30  00                 	db	0
   377  001D31  00                 	db	0
   378  001D32  00                 	db	0
   379  001D33  00                 	db	0
   380  001D34  00                 	db	0
   381  001D35  00                 	db	0
   382  001D36  00                 	db	0
   383  001D37  00                 	db	0
   384  001D38  00                 	db	0
   385  001D39  36                 	db	54
   386  001D3A  2E                 	db	46
   387  001D3B  20                 	db	32
   388  001D3C  4D                 	db	77
   389  001D3D  6F                 	db	111
   390  001D3E  64                 	db	100
   391  001D3F  69                 	db	105
   392  001D40  66                 	db	102
   393  001D41  79                 	db	121
   394  001D42  20                 	db	32
   395  001D43  74                 	db	116
   396  001D44  69                 	db	105
   397  001D45  6D                 	db	109
   398  001D46  65                 	db	101
   399  001D47  00                 	db	0
   400  001D48  00                 	db	0
   401  001D49  00                 	db	0
   402  001D4A  00                 	db	0
   403  001D4B  00                 	db	0
   404  001D4C  00                 	db	0
   405  001D4D  00                 	db	0
   406  001D4E  00                 	db	0
   407  001D4F                     __end_of_menu:
   408                           	callstack 0
   409  001D4F                     _stringText:
   410                           	callstack 0
   411  001D4F  54                 	db	84
   412  001D50  20                 	db	32
   413  001D51  30                 	db	48
   414  001D52  30                 	db	48
   415  001D53  3A                 	db	58
   416  001D54  30                 	db	48
   417  001D55  30                 	db	48
   418  001D56  20                 	db	32
   419  001D57  7C                 	db	124
   420  001D58  20                 	db	32
   421  001D59  53                 	db	83
   422  001D5A  20                 	db	32
   423  001D5B  30                 	db	48
   424  001D5C  30                 	db	48
   425  001D5D  30                 	db	48
   426  001D5E  00                 	db	0
   427  001D5F                     __end_of_stringText:
   428                           	callstack 0
   429  001D5F                     _deleteUser:
   430                           	callstack 0
   431  001D5F  44                 	db	68
   432  001D60  65                 	db	101
   433  001D61  6C                 	db	108
   434  001D62  65                 	db	101
   435  001D63  74                 	db	116
   436  001D64  65                 	db	101
   437  001D65  20                 	db	32
   438  001D66  55                 	db	85
   439  001D67  73                 	db	115
   440  001D68  65                 	db	101
   441  001D69  72                 	db	114
   442  001D6A  00                 	db	0
   443  001D6B                     __end_of_deleteUser:
   444                           	callstack 0
   445  001D6B                     _Score:
   446                           	callstack 0
   447  001D6B  53                 	db	83
   448  001D6C  63                 	db	99
   449  001D6D  6F                 	db	111
   450  001D6E  72                 	db	114
   451  001D6F  65                 	db	101
   452  001D70  3A                 	db	58
   453  001D71  00                 	db	0
   454  001D72                     __end_of_Score:
   455                           	callstack 0
   456  0000                     _PORTDbits	set	3971
   457  0000                     _PORTCbits	set	3970
   458  0000                     _LATDbits	set	3980
   459  0000                     _LATCbits	set	3979
   460  0000                     _TRISDbits	set	3989
   461  0000                     _TRISCbits	set	3988
   462  0000                     _LATD	set	3980
   463  0000                     _TRISD	set	3989
   464  0000                     _TRISC	set	3988
   465  0000                     _LATBbits	set	3978
   466  0000                     _TRISB	set	3987
   467  0000                     _TRISA	set	3986
   468  0000                     _RCREG	set	4014
   469  0000                     _PIR1bits	set	3998
   470  0000                     _TXREG	set	4013
   471  0000                     _TXSTAbits	set	4012
   472  0000                     _ADCON0bits	set	4034
   473  0000                     _ADRESH	set	4036
   474  0000                     _ADCON2	set	4032
   475  0000                     _ADCON1	set	4033
   476  0000                     _ADCON0	set	4034
   477  0000                     _RCONbits	set	4048
   478  0000                     _SPBRG	set	4015
   479  0000                     _SPBRGH	set	4016
   480  0000                     _BAUDCON	set	4024
   481  0000                     _RCSTA	set	4011
   482  0000                     _TXSTA	set	4012
   483  0000                     _T0CONbits	set	4053
   484  0000                     _TMR0L	set	4054
   485  0000                     _TMR0H	set	4055
   486  0000                     _T0CON	set	4053
   487  0000                     _INTCONbits	set	4082
   488  001D72                     STR_1:
   489  001D72  45                 	db	69	;'E'
   490  001D73  6E                 	db	110	;'n'
   491  001D74  74                 	db	116	;'t'
   492  001D75  65                 	db	101	;'e'
   493  001D76  72                 	db	114	;'r'
   494  001D77  20                 	db	32
   495  001D78  6E                 	db	110	;'n'
   496  001D79  65                 	db	101	;'e'
   497  001D7A  77                 	db	119	;'w'
   498  001D7B  20                 	db	32
   499  001D7C  74                 	db	116	;'t'
   500  001D7D  69                 	db	105	;'i'
   501  001D7E  6D                 	db	109	;'m'
   502  001D7F  65                 	db	101	;'e'
   503  001D80  00                 	db	0
   504  001D81                     STR_4:
   505  001D81  31                 	db	49	;'1'
   506  001D82  2E                 	db	46
   507  001D83  20                 	db	32
   508  001D84  53                 	db	83	;'S'
   509  001D85  65                 	db	101	;'e'
   510  001D86  6C                 	db	108	;'l'
   511  001D87  65                 	db	101	;'e'
   512  001D88  63                 	db	99	;'c'
   513  001D89  74                 	db	116	;'t'
   514  001D8A  20                 	db	32
   515  001D8B  55                 	db	85	;'U'
   516  001D8C  73                 	db	115	;'s'
   517  001D8D  65                 	db	101	;'e'
   518  001D8E  72                 	db	114	;'r'
   519  001D8F  00                 	db	0
   520  001D90                     STR_2:
   521  001D90  43                 	db	67	;'C'
   522  001D91  75                 	db	117	;'u'
   523  001D92  72                 	db	114	;'r'
   524  001D93  72                 	db	114	;'r'
   525  001D94  65                 	db	101	;'e'
   526  001D95  6E                 	db	110	;'n'
   527  001D96  74                 	db	116	;'t'
   528  001D97  20                 	db	32
   529  001D98  54                 	db	84	;'T'
   530  001D99  69                 	db	105	;'i'
   531  001D9A  6D                 	db	109	;'m'
   532  001D9B  65                 	db	101	;'e'
   533  001D9C  00                 	db	0
   534  001D9D                     STR_5:
   535  001D9D  45                 	db	69	;'E'
   536  001D9E  6E                 	db	110	;'n'
   537  001D9F  74                 	db	116	;'t'
   538  001DA0  65                 	db	101	;'e'
   539  001DA1  72                 	db	114	;'r'
   540  001DA2  20                 	db	32
   541  001DA3  6E                 	db	110	;'n'
   542  001DA4  61                 	db	97	;'a'
   543  001DA5  6D                 	db	109	;'m'
   544  001DA6  65                 	db	101	;'e'
   545  001DA7  3A                 	db	58	;':'
   546  001DA8  00                 	db	0
   547  001DA9                     STR_6:
   548  001DA9  32                 	db	50	;'2'
   549  001DAA  2E                 	db	46
   550  001DAB  20                 	db	32
   551  001DAC  4E                 	db	78	;'N'
   552  001DAD  65                 	db	101	;'e'
   553  001DAE  77                 	db	119	;'w'
   554  001DAF  20                 	db	32
   555  001DB0  55                 	db	85	;'U'
   556  001DB1  73                 	db	115	;'s'
   557  001DB2  65                 	db	101	;'e'
   558  001DB3  72                 	db	114	;'r'
   559  001DB4  00                 	db	0
   560  001DB5                     STR_3:
   561  001DB5  28                 	db	40
   562  001DB6  48                 	db	72	;'H'
   563  001DB7  48                 	db	72	;'H'
   564  001DB8  3A                 	db	58	;':'
   565  001DB9  4D                 	db	77	;'M'
   566  001DBA  4D                 	db	77	;'M'
   567  001DBB  29                 	db	41
   568  001DBC  3A                 	db	58	;':'
   569  001DBD  20                 	db	32
   570  001DBE  00                 	db	0
   571  001DBF  00                 	db	0	; dummy byte at the end
   572  0000                     
   573                           ; #config settings
   574                           
   575                           	psect	cinit
   576  0014B4                     __pcinit:
   577                           	callstack 0
   578  0014B4                     start_initialization:
   579                           	callstack 0
   580  0014B4                     __initialization:
   581                           	callstack 0
   582                           
   583                           ; Initialize objects allocated to BANK0 (39 bytes)
   584                           ; load TBLPTR registers with __pidataBANK0
   585  0014B4  0E00               	movlw	low __pidataBANK0
   586  0014B6  6EF6               	movwf	tblptrl,c
   587  0014B8  0E19               	movlw	high __pidataBANK0
   588  0014BA  6EF7               	movwf	tblptrh,c
   589  0014BC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   590  0014BE  6EF8               	movwf	tblptru,c
   591  0014C0  EE00  F080         	lfsr	0,__pdataBANK0
   592  0014C4  EE10 F027          	lfsr	1,39
   593  0014C8                     copy_data0:
   594  0014C8  0009               	tblrd		*+
   595  0014CA  CFF5 FFEE          	movff	tablat,postinc0
   596  0014CE  50E5               	movf	postdec1,w,c
   597  0014D0  50E1               	movf	fsr1l,w,c
   598  0014D2  E1FA               	bnz	copy_data0
   599                           
   600                           ; Initialize objects allocated to COMRAM (38 bytes)
   601                           ; load TBLPTR registers with __pidataCOMRAM
   602  0014D4  0E27               	movlw	low __pidataCOMRAM
   603  0014D6  6EF6               	movwf	tblptrl,c
   604  0014D8  0E19               	movlw	high __pidataCOMRAM
   605  0014DA  6EF7               	movwf	tblptrh,c
   606  0014DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   607  0014DE  6EF8               	movwf	tblptru,c
   608  0014E0  EE00  F035         	lfsr	0,__pdataCOMRAM
   609  0014E4  EE10 F026          	lfsr	1,38
   610  0014E8                     copy_data1:
   611  0014E8  0009               	tblrd		*+
   612  0014EA  CFF5 FFEE          	movff	tablat,postinc0
   613  0014EE  50E5               	movf	postdec1,w,c
   614  0014F0  50E1               	movf	fsr1l,w,c
   615  0014F2  E1FA               	bnz	copy_data1
   616                           
   617                           ; Clear objects allocated to BANK1 (240 bytes)
   618  0014F4  EE01  F000         	lfsr	0,__pbssBANK1
   619  0014F8  0EF0               	movlw	240
   620  0014FA                     clear_0:
   621  0014FA  6AEE               	clrf	postinc0,c
   622  0014FC  06E8               	decf	wreg,f,c
   623  0014FE  E1FD               	bnz	clear_0
   624                           
   625                           ; Clear objects allocated to BANK0 (24 bytes)
   626  001500  EE00  F0A7         	lfsr	0,__pbssBANK0
   627  001504  0E18               	movlw	24
   628  001506                     clear_1:
   629  001506  6AEE               	clrf	postinc0,c
   630  001508  06E8               	decf	wreg,f,c
   631  00150A  E1FD               	bnz	clear_1
   632                           
   633                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   634  00150C  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   635  00150E  6A78               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   636                           
   637                           ; Clear objects allocated to COMRAM (52 bytes)
   638  001510  EE00  F001         	lfsr	0,__pbssCOMRAM
   639  001514  0E34               	movlw	52
   640  001516                     clear_2:
   641  001516  6AEE               	clrf	postinc0,c
   642  001518  06E8               	decf	wreg,f,c
   643  00151A  E1FD               	bnz	clear_2
   644  00151C                     end_of_initialization:
   645                           	callstack 0
   646  00151C                     __end_of__initialization:
   647                           	callstack 0
   648  00151C  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   649  00151E  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   650  001520  0E00               	movlw	low (__Lmediumconst shr (0+16))
   651  001522  6EF8               	movwf	tblptru,c
   652  001524  0100               	movlb	0
   653  001526  EFFB  F00A         	goto	_main	;jump to C main() function
   654                           
   655                           	psect	bitbssCOMRAM
   656  0003C0                     __pbitbssCOMRAM:
   657                           	callstack 0
   658  0003C0                     _createUser:
   659                           	callstack 0
   660  0003C0                     	ds	1
   661  0003C1                     _setSMSon:
   662                           	callstack 0
   663  0003C1                     	ds	1
   664  0003C2                     _nouSegon:
   665                           	callstack 0
   666  0003C2                     	ds	1
   667  0003C3                     _nouMinut:
   668                           	callstack 0
   669  0003C3                     	ds	1
   670  0003C4                     _newString:
   671                           	callstack 0
   672  0003C4                     	ds	1
   673  0003C5                     _ferMenu:
   674                           	callstack 0
   675  0003C5                     	ds	1
   676  0003C6                     _posFletxa:
   677                           	callstack 0
   678  0003C6                     	ds	1
   679  0003C7                     _reproduir:
   680                           	callstack 0
   681  0003C7                     	ds	1
   682  0003C8                     _nou_s:
   683                           	callstack 0
   684  0003C8                     	ds	1
   685                           
   686                           	psect	bssCOMRAM
   687  000001                     __pbssCOMRAM:
   688                           	callstack 0
   689  000001                     _userPtr:
   690                           	callstack 0
   691  000001                     	ds	2
   692  000003                     _h_Tics:
   693                           	callstack 0
   694  000003                     	ds	2
   695  000005                     _s_ptr:
   696                           	callstack 0
   697  000005                     	ds	2
   698  000007                     CtoA@state:
   699                           	callstack 0
   700  000007                     	ds	1
   701  000008                     SIOMotor@state:
   702                           	callstack 0
   703  000008                     	ds	1
   704  000009                     _rebut:
   705                           	callstack 0
   706  000009                     	ds	1
   707  00000A                     JMotor@state:
   708                           	callstack 0
   709  00000A                     	ds	1
   710  00000B                     _novaDireccio:
   711                           	callstack 0
   712  00000B                     	ds	1
   713  00000C                     UMotorUsuaris@state:
   714                           	callstack 0
   715  00000C                     	ds	1
   716  00000D                     _numUsuaris:
   717                           	callstack 0
   718  00000D                     	ds	1
   719  00000E                     AdMotor@state:
   720                           	callstack 0
   721  00000E                     	ds	1
   722  00000F                     _ultimaTeclaAD:
   723                           	callstack 0
   724  00000F                     	ds	1
   725  000010                     SMotor@state:
   726                           	callstack 0
   727  000010                     	ds	1
   728  000011                     _sumaPulsacions:
   729                           	callstack 0
   730  000011                     	ds	1
   731  000012                     HHoraMotor@state:
   732                           	callstack 0
   733  000012                     	ds	1
   734  000013                     _timerHora:
   735                           	callstack 0
   736  000013                     	ds	1
   737  000014                     _segons:
   738                           	callstack 0
   739  000014                     	ds	1
   740  000015                     GLCDMotor@length2:
   741                           	callstack 0
   742  000015                     	ds	1
   743  000016                     GLCDMotor@length1:
   744                           	callstack 0
   745  000016                     	ds	1
   746  000017                     GLCDMotor@k2:
   747                           	callstack 0
   748  000017                     	ds	1
   749  000018                     GLCDMotor@k1:
   750                           	callstack 0
   751  000018                     	ds	1
   752  000019                     GLCDMotor@min2:
   753                           	callstack 0
   754  000019                     	ds	1
   755  00001A                     GLCDMotor@min1:
   756                           	callstack 0
   757  00001A                     	ds	1
   758  00001B                     GLCDMotor@j:
   759                           	callstack 0
   760  00001B                     	ds	1
   761  00001C                     GLCDMotor@state:
   762                           	callstack 0
   763  00001C                     	ds	1
   764  00001D                     _timerGLCD:
   765                           	callstack 0
   766  00001D                     	ds	1
   767  00001E                     TeTeclat@files:
   768                           	callstack 0
   769  00001E                     	ds	1
   770  00001F                     TeTeclat@cols:
   771                           	callstack 0
   772  00001F                     	ds	1
   773  000020                     TeTeclat@state:
   774                           	callstack 0
   775  000020                     	ds	1
   776  000021                     _tiTeclat:
   777                           	callstack 0
   778  000021                     	ds	1
   779  000022                     MTMenu@state:
   780                           	callstack 0
   781  000022                     	ds	1
   782  000023                     _timerMenu:
   783                           	callstack 0
   784  000023                     	ds	1
   785  000024                     _pos:
   786                           	callstack 0
   787  000024                     	ds	1
   788  000025                     _menuDalt:
   789                           	callstack 0
   790  000025                     	ds	1
   791  000026                     AlTAltaveu@state:
   792                           	callstack 0
   793  000026                     	ds	1
   794  000027                     _timer_durada:
   795                           	callstack 0
   796  000027                     	ds	1
   797  000028                     _nota:
   798                           	callstack 0
   799  000028                     	ds	1
   800  000029                     _timer_nota:
   801                           	callstack 0
   802  000029                     	ds	1
   803  00002A                     _counter:
   804                           	callstack 0
   805  00002A                     	ds	1
   806  00002B                     _Timer:
   807                           	callstack 0
   808  00002B                     	ds	1
   809  00002C                     _ColumnAct:
   810                           	callstack 0
   811  00002C                     	ds	1
   812  00002D                     _RowAct:
   813                           	callstack 0
   814  00002D                     	ds	1
   815  00002E                     _Columns:
   816                           	callstack 0
   817  00002E                     	ds	1
   818  00002F                     _Rows:
   819                           	callstack 0
   820  00002F                     	ds	1
   821  000030                     _horaTmp:
   822                           	callstack 0
   823  000030                     	ds	5
   824                           
   825                           	psect	dataCOMRAM
   826  000035                     __pdataCOMRAM:
   827                           	callstack 0
   828  000035                     _lletraInici:
   829                           	callstack 0
   830  000035                     	ds	9
   831  00003E                     _convertir:
   832                           	callstack 0
   833  00003E                     	ds	1
   834  00003F                     _direccio:
   835                           	callstack 0
   836  00003F                     	ds	1
   837  000040                     _usuariActualSIO:
   838                           	callstack 0
   839  000040                     	ds	1
   840  000041                     _usuariActual:
   841                           	callstack 0
   842  000041                     	ds	1
   843  000042                     _delUser:
   844                           	callstack 0
   845  000042                     	ds	1
   846  000043                     _ultimaTecla:
   847                           	callstack 0
   848  000043                     	ds	1
   849  000044                     _timerSMS:
   850                           	callstack 0
   851  000044                     	ds	1
   852  000045                     _novaTecla:
   853                           	callstack 0
   854  000045                     	ds	1
   855  000046                     _lletraASCII:
   856                           	callstack 0
   857  000046                     	ds	1
   858  000047                     GLCDMotor@max2:
   859                           	callstack 0
   860  000047                     	ds	1
   861  000048                     GLCDMotor@max1:
   862                           	callstack 0
   863  000048                     	ds	1
   864  000049                     _novaLletra:
   865                           	callstack 0
   866  000049                     	ds	1
   867  00004A                     _NovaTecla:
   868                           	callstack 0
   869  00004A                     	ds	1
   870  00004B                     _tempsJugant:
   871                           	callstack 0
   872  00004B                     	ds	6
   873  000051                     _string:
   874                           	callstack 0
   875  000051                     	ds	6
   876  000057                     _stringScore:
   877                           	callstack 0
   878  000057                     	ds	4
   879                           
   880                           	psect	bssBANK0
   881  0000A7                     __pbssBANK0:
   882                           	callstack 0
   883  0000A7                     _s_Timers:
   884                           	callstack 0
   885  0000A7                     	ds	24
   886                           
   887                           	psect	dataBANK0
   888  000080                     __pdataBANK0:
   889                           	callstack 0
   890  000080                     _enterNewName:
   891                           	callstack 0
   892  000080                     	ds	15
   893  00008F                     _teclaPremuda:
   894                           	callstack 0
   895  00008F                     	ds	12
   896  00009B                     _highScore:
   897                           	callstack 0
   898  00009B                     	ds	12
   899                           
   900                           	psect	bssBANK1
   901  000100                     __pbssBANK1:
   902                           	callstack 0
   903  000100                     _usuaris:
   904                           	callstack 0
   905  000100                     	ds	240
   906                           
   907                           	psect	cstackCOMRAM
   908  00005B                     __pcstackCOMRAM:
   909                           	callstack 0
   910  00005B                     
   911                           ; 1 bytes @ 0x0
   912  00005B                     	ds	1
   913  00005C                     ??_high_rsi:
   914                           
   915                           ; 1 bytes @ 0x1
   916  00005C                     	ds	4
   917  000060                     ??_CtoA:
   918  000060                     ??_EscriuPrimeraOrdre:
   919  000060                     ??_UAfegirLletraUsername:
   920  000060                     ??_CantaPartAlta:
   921  000060                     ??_CantaPartBaixa:
   922  000060                     ?_TiGetTics:
   923                           	callstack 0
   924  000060                     ?_UgetUserName:
   925                           	callstack 0
   926  000060                     ?___wmul:
   927                           	callstack 0
   928  000060                     TiResetTics@Handle:
   929                           	callstack 0
   930  000060                     MsetNovaTecla@tecla:
   931                           	callstack 0
   932  000060                     MNovaLletra@lletra:
   933                           	callstack 0
   934  000060                     GLCDMostraMenu@num:
   935                           	callstack 0
   936  000060                     HActualitzarHora@nova:
   937                           	callstack 0
   938  000060                     SsetNovaTecla@tecla:
   939                           	callstack 0
   940  000060                     UgetScore@quin:
   941                           	callstack 0
   942  000060                     UchangeScore@score:
   943                           	callstack 0
   944  000060                     UdelUser@index:
   945                           	callstack 0
   946  000060                     UeditUsername@pos:
   947                           	callstack 0
   948  000060                     JJuguem@usuari:
   949                           	callstack 0
   950  000060                     JnovaTecla@direccio:
   951                           	callstack 0
   952  000060                     SIONovaDireccio@num:
   953                           	callstack 0
   954  000060                     SIOStartGame@usuari:
   955                           	callstack 0
   956  000060                     CToAConverteix@numero:
   957                           	callstack 0
   958  000060                     ___wmul@multiplier:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x5
   962  000060                     	ds	1
   963  000061                     ??_AdMotor:
   964  000061                     CantaPartAlta@c:
   965                           	callstack 0
   966  000061                     CantaPartBaixa@c:
   967                           	callstack 0
   968  000061                     EscriuPrimeraOrdre@ordre:
   969                           	callstack 0
   970  000061                     UeditUsername@novaLletra:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x6
   974  000061                     	ds	1
   975  000062                     ??_TiGetTics:
   976  000062                     ??_UeditUsername:
   977  000062                     CantaIR@IR:
   978                           	callstack 0
   979  000062                     CantaData@Data:
   980                           	callstack 0
   981  000062                     UgetUserName@quin:
   982                           	callstack 0
   983  000062                     UAfegirLletraUsername@lletra:
   984                           	callstack 0
   985  000062                     ___wmul@multiplicand:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x7
   989  000062                     	ds	1
   990  000063                     LcNewString@new_s:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x8
   994  000063                     	ds	1
   995  000064                     TiGetTics@Handle:
   996                           	callstack 0
   997  000064                     UeditUsername@menuDalt:
   998                           	callstack 0
   999  000064                     ___wmul@product:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x9
  1003  000064                     	ds	1
  1004  000065                     TiGetTics@actual:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0xA
  1008  000065                     	ds	1
  1009  000066                     ??_UMotorUsuaris:
  1010                           
  1011                           ; 1 bytes @ 0xB
  1012  000066                     	ds	1
  1013  000067                     ??_AlTAltaveu:
  1014  000067                     ??_HHoraMotor:
  1015  000067                     ??_TeTeclat:
  1016  000067                     ??_SMotor:
  1017  000067                     WaitForBusy@Busy:
  1018                           	callstack 0
  1019  000067                     Espera@ms:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0xC
  1023  000067                     	ds	1
  1024  000068                     LcGotoXY@Row:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0xD
  1028  000068                     	ds	1
  1029  000069                     ??_Espera:
  1030  000069                     ??_LcGotoXY:
  1031                           
  1032                           ; 1 bytes @ 0xE
  1033  000069                     	ds	1
  1034  00006A                     Espera@Timer:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0xF
  1038  00006A                     	ds	1
  1039  00006B                     LcInit@columns:
  1040                           	callstack 0
  1041  00006B                     _LcGotoXY$499:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x10
  1045  00006B                     	ds	1
  1046  00006C                     LcInit@rows:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x11
  1050  00006C                     	ds	1
  1051  00006D                     LcInit@i:
  1052                           	callstack 0
  1053  00006D                     LcGotoXY@Fisics:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x12
  1057  00006D                     	ds	2
  1058  00006F                     LcGotoXY@Column:
  1059                           	callstack 0
  1060                           
  1061                           ; 1 bytes @ 0x14
  1062  00006F                     	ds	1
  1063  000070                     ??_JMotor:
  1064  000070                     LcPutChar@c:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x15
  1068  000070                     	ds	1
  1069  000071                     ??_GLCDMotor:
  1070  000071                     ??_MTMenu:
  1071  000071                     ??_SIOMotor:
  1072  000071                     
  1073                           ; 1 bytes @ 0x16
  1074  000071                     	ds	7
  1075  000078                     
  1076                           ; 1 bytes @ 0x1D
  1077 ;;
  1078 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1079 ;;
  1080 ;; *************** function _main *****************
  1081 ;; Defined at:
  1082 ;;		line 69 in file "main.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1
  1096 ;;      Params:         0       0       0
  1097 ;;      Locals:         0       0       0
  1098 ;;      Temps:          0       0       0
  1099 ;;      Totals:         0       0       0
  1100 ;;Total ram usage:        0 bytes
  1101 ;; Hardware stack levels required when called: 9
  1102 ;; This function calls:
  1103 ;;		_AdInit
  1104 ;;		_AdMotor
  1105 ;;		_AlInit
  1106 ;;		_AlTAltaveu
  1107 ;;		_CtoA
  1108 ;;		_GLCDInit
  1109 ;;		_GLCDMotor
  1110 ;;		_HHoraMotor
  1111 ;;		_HInit
  1112 ;;		_JMotor
  1113 ;;		_LcInit
  1114 ;;		_LcLCD
  1115 ;;		_MTMenu
  1116 ;;		_Minit
  1117 ;;		_SIOMotor
  1118 ;;		_SMotor
  1119 ;;		_Sinit
  1120 ;;		_TeInit
  1121 ;;		_TeTeclat
  1122 ;;		_TiInitTimer
  1123 ;;		_UMotorUsuaris
  1124 ;;		_init_eusart
  1125 ;;		_init_ports
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text0
  1132  0015F6                     __ptext0:
  1133                           	callstack 0
  1134  0015F6                     _main:
  1135                           	callstack 22
  1136                           
  1137                           ;main.c: 70:     init_ports();
  1138                           
  1139                           ;incstack = 0
  1140  0015F6  EC07  F00D         	call	_init_ports	;wreg free
  1141                           
  1142                           ;main.c: 71:     init_eusart();
  1143  0015FA  EC13  F00D         	call	_init_eusart	;wreg free
  1144                           
  1145                           ;main.c: 73:     TiInitTimer();
  1146  0015FE  EC57  F00C         	call	_TiInitTimer	;wreg free
  1147                           
  1148                           ;main.c: 74:     AlInit();
  1149  001602  EC39  F00D         	call	_AlInit	;wreg free
  1150                           
  1151                           ;main.c: 75:     AdInit();
  1152  001606  EC28  F00D         	call	_AdInit	;wreg free
  1153                           
  1154                           ;main.c: 76:     LcInit(2,16);
  1155  00160A  0E10               	movlw	16
  1156  00160C  6E6B               	movwf	LcInit@columns^0,c
  1157  00160E  0E02               	movlw	2
  1158  001610  EC26  F008         	call	_LcInit
  1159                           
  1160                           ;main.c: 77:     TeInit();
  1161  001614  EC93  F00D         	call	_TeInit	;wreg free
  1162                           
  1163                           ;main.c: 78:     GLCDInit();
  1164  001618  ECB7  F00D         	call	_GLCDInit	;wreg free
  1165                           
  1166                           ;main.c: 79:     HInit();
  1167  00161C  EC31  F00D         	call	_HInit	;wreg free
  1168                           
  1169                           ;main.c: 80:     Sinit();
  1170  001620  EC97  F00D         	call	_Sinit	;wreg free
  1171                           
  1172                           ;main.c: 81:     Minit();
  1173  001624  ECA7  F00D         	call	_Minit	;wreg free
  1174  001628                     l5727:
  1175                           
  1176                           ;main.c: 84:         AlTAltaveu();
  1177  001628  EC83  F008         	call	_AlTAltaveu	;wreg free
  1178                           
  1179                           ;main.c: 85:         GLCDMotor();
  1180  00162C  EC5D  F004         	call	_GLCDMotor	;wreg free
  1181                           
  1182                           ;main.c: 86:         UMotorUsuaris();
  1183  001630  ECBA  F007         	call	_UMotorUsuaris	;wreg free
  1184                           
  1185                           ;main.c: 87:         MTMenu();
  1186  001634  EC1B  F000         	call	_MTMenu	;wreg free
  1187                           
  1188                           ;main.c: 88:         JMotor();
  1189  001638  EC86  F009         	call	_JMotor	;wreg free
  1190                           
  1191                           ;main.c: 89:         SIOMotor();
  1192  00163C  ECAB  F005         	call	_SIOMotor	;wreg free
  1193                           
  1194                           ;main.c: 90:         CtoA();
  1195  001640  EC57  F00B         	call	_CtoA	;wreg free
  1196                           
  1197                           ;main.c: 92:         HHoraMotor();
  1198  001644  EC37  F009         	call	_HHoraMotor	;wreg free
  1199                           
  1200                           ;main.c: 93:         AdMotor();
  1201  001648  ECDD  F008         	call	_AdMotor	;wreg free
  1202                           
  1203                           ;main.c: 95:         TeTeclat();
  1204  00164C  EC23  F007         	call	_TeTeclat	;wreg free
  1205                           
  1206                           ;main.c: 96:         SMotor();
  1207  001650  EC68  F006         	call	_SMotor	;wreg free
  1208                           
  1209                           ;main.c: 97:         LcLCD();
  1210  001654  EC81  F00B         	call	_LcLCD	;wreg free
  1211  001658  D7E7               	goto	l5727
  1212  00165A                     __end_of_main:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _init_ports *****************
  1216 ;; Defined at:
  1217 ;;		line 26 in file "main.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1
  1231 ;;      Params:         0       0       0
  1232 ;;      Locals:         0       0       0
  1233 ;;      Temps:          0       0       0
  1234 ;;      Totals:         0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; Hardware stack levels required when called: 2
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text1
  1246  001A0E                     __ptext1:
  1247                           	callstack 0
  1248  001A0E                     _init_ports:
  1249                           	callstack 28
  1250                           
  1251                           ;incstack = 0
  1252  001A0E  0E03               	movlw	3
  1253  001A10  6E92               	movwf	146,c	;volatile
  1254  001A12  0EE0               	movlw	224
  1255  001A14  6E93               	movwf	147,c	;volatile
  1256  001A16  968A               	bcf	138,3,c	;volatile
  1257  001A18  908A               	bcf	138,0,c	;volatile
  1258                           
  1259                           ;main.c: 47:     TRISC = 0xC0;
  1260  001A1A  0EC0               	movlw	192
  1261  001A1C  6E94               	movwf	148,c	;volatile
  1262                           
  1263                           ;main.c: 57:     TRISD = 0x8F;
  1264  001A1E  0E8F               	movlw	143
  1265  001A20  6E95               	movwf	149,c	;volatile
  1266                           
  1267                           ;main.c: 58:     LATD = 0x00;
  1268  001A22  6A8C               	clrf	140,c	;volatile
  1269  001A24  0012               	return		;funcret
  1270  001A26                     __end_of_init_ports:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _init_eusart *****************
  1274 ;; Defined at:
  1275 ;;		line 60 in file "main.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1
  1289 ;;      Params:         0       0       0
  1290 ;;      Locals:         0       0       0
  1291 ;;      Temps:          0       0       0
  1292 ;;      Totals:         0       0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 2
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text2
  1304  001A26                     __ptext2:
  1305                           	callstack 0
  1306  001A26                     _init_eusart:
  1307                           	callstack 28
  1308                           
  1309                           ;main.c: 61:     TXSTA = 0x24;
  1310                           
  1311                           ;incstack = 0
  1312  001A26  0E24               	movlw	36
  1313  001A28  6EAC               	movwf	172,c	;volatile
  1314                           
  1315                           ;main.c: 62:     RCSTA = 0x90;
  1316  001A2A  0E90               	movlw	144
  1317  001A2C  6EAB               	movwf	171,c	;volatile
  1318                           
  1319                           ;main.c: 63:     BAUDCON = 0x08;
  1320  001A2E  0E08               	movlw	8
  1321  001A30  6EB8               	movwf	184,c	;volatile
  1322                           
  1323                           ;main.c: 64:     SPBRGH = 0x04;
  1324  001A32  0E04               	movlw	4
  1325  001A34  6EB0               	movwf	176,c	;volatile
  1326                           
  1327                           ;main.c: 65:     SPBRG = 0x10;
  1328  001A36  0E10               	movlw	16
  1329  001A38  6EAF               	movwf	175,c	;volatile
  1330  001A3A  0C10               	retlw	16	;funcret
  1331  001A3C                     __end_of_init_eusart:
  1332                           	callstack 0
  1333                           
  1334 ;; *************** function _UMotorUsuaris *****************
  1335 ;; Defined at:
  1336 ;;		line 48 in file "UUsuaris.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1
  1350 ;;      Params:         0       0       0
  1351 ;;      Locals:         0       0       0
  1352 ;;      Temps:          2       0       0
  1353 ;;      Totals:         2       0       0
  1354 ;;Total ram usage:        2 bytes
  1355 ;; Hardware stack levels used: 1
  1356 ;; Hardware stack levels required when called: 3
  1357 ;; This function calls:
  1358 ;;		___wmul
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text3
  1365  000F74                     __ptext3:
  1366                           	callstack 0
  1367  000F74                     _UMotorUsuaris:
  1368                           	callstack 27
  1369                           
  1370                           ;UUsuaris.c: 49:     static char state = 0;;UUsuaris.c: 50:     switch(state) {
  1371                           
  1372                           ;incstack = 0
  1373  000F74  D041               	goto	l4573
  1374  000F76                     l983:
  1375                           
  1376                           ;UUsuaris.c: 52:    if (createUser != 0 && numUsuaris >19) {
  1377  000F76  A078               	btfss	(_createUser/(0+8))^0,_createUser& (0+7),c
  1378  000F78  D005               	goto	l984
  1379  000F7A  0E13               	movlw	19
  1380  000F7C  640D               	cpfsgt	_numUsuaris^0,c
  1381  000F7E  D002               	goto	l984
  1382                           
  1383                           ;UUsuaris.c: 53:     createUser = 0;
  1384  000F80  9078               	bcf	(_createUser/(0+8))^0,_createUser& (0+7),c
  1385                           
  1386                           ;UUsuaris.c: 54:    }
  1387  000F82  0C13               	retlw	19
  1388  000F84                     l984:
  1389  000F84  A078               	btfss	(_createUser/(0+8))^0,_createUser& (0+7),c
  1390  000F86  D005               	goto	l4551
  1391  000F88  0E14               	movlw	20
  1392  000F8A  600D               	cpfslt	_numUsuaris^0,c
  1393  000F8C  D002               	goto	l4551
  1394                           
  1395                           ;UUsuaris.c: 56:     state++;
  1396  000F8E  2A0C               	incf	UMotorUsuaris@state^0,f,c
  1397                           
  1398                           ;UUsuaris.c: 57:    }
  1399  000F90  0C14               	retlw	20
  1400  000F92                     l4551:
  1401  000F92  BE42               	btfsc	_delUser^0,7,c
  1402  000F94  0012               	return	
  1403                           
  1404                           ;UUsuaris.c: 59:     usuaris[delUser].username[0] = '\0';
  1405  000F96  D855               	call	PL64	;call to abstracted procedure
  1406  000F98  6ED9               	movwf	fsr2l,c
  1407  000F9A  0E01               	movlw	high _usuaris
  1408  000F9C  20F4               	addwfc	prodh,w,c
  1409  000F9E  6EDA               	movwf	fsr2h,c
  1410  000FA0  6ADF               	clrf	indf2,c
  1411                           
  1412                           ;UUsuaris.c: 60:     usuaris[delUser].highScore = 0;
  1413  000FA2  5042               	movf	_delUser^0,w,c
  1414  000FA4  D83F               	call	PL26	;call to abstracted procedure
  1415  000FA6  6ADF               	clrf	indf2,c
  1416                           
  1417                           ;UUsuaris.c: 61:     state = 2;
  1418  000FA8  0E02               	movlw	2
  1419  000FAA  6E0C               	movwf	UMotorUsuaris@state^0,c
  1420                           
  1421                           ;UUsuaris.c: 63:   break;
  1422  000FAC  0C02               	retlw	2
  1423  000FAE                     l990:
  1424                           
  1425                           ;UUsuaris.c: 65:    if (createUser == 0) {
  1426  000FAE  A078               	btfss	(_createUser/(0+8))^0,_createUser& (0+7),c
  1427                           
  1428                           ;UUsuaris.c: 66:     state--;
  1429  000FB0  060C               	decf	UMotorUsuaris@state^0,f,c
  1430  000FB2  0012               	return	
  1431  000FB4                     l4559:
  1432                           
  1433                           ;UUsuaris.c: 70:    if (usuaris[delUser+1].username[0] != '\0' && delUser < 20) {
  1434  000FB4  D82E               	call	PL22	;call to abstracted procedure
  1435  000FB6  ECA7  F00C         	call	___wmul	;wreg free
  1436  000FBA  D83C               	call	PL38	;call to abstracted procedure
  1437  000FBC  50DF               	movf	indf2,w,c
  1438  000FBE  E014               	bz	l4567
  1439  000FC0  5042               	movf	_delUser^0,w,c
  1440  000FC2  0A80               	xorlw	128
  1441  000FC4  0F6C               	addlw	-148
  1442  000FC6  E210               	bc	l4567
  1443                           
  1444                           ;UUsuaris.c: 71:     usuaris[delUser] = usuaris[delUser+1];
  1445  000FC8  D824               	call	PL22	;call to abstracted procedure
  1446  000FCA  ECA7  F00C         	call	___wmul	;wreg free
  1447  000FCE  D832               	call	PL38	;call to abstracted procedure
  1448  000FD0  D838               	call	PL64	;call to abstracted procedure
  1449  000FD2  6EE1               	movwf	fsr1l,c
  1450  000FD4  0E01               	movlw	high _usuaris
  1451  000FD6  20F4               	addwfc	prodh,w,c
  1452  000FD8  6EE2               	movwf	fsr1h,c
  1453  000FDA  0E0B               	movlw	11
  1454  000FDC                     u4071:
  1455  000FDC  CFDB FFE3          	movff	plusw2,plusw1
  1456  000FE0  06E8               	decf	wreg,f,c
  1457  000FE2  E2FC               	bc	u4071
  1458                           
  1459                           ;UUsuaris.c: 72:     delUser++;
  1460  000FE4  2A42               	incf	_delUser^0,f,c
  1461                           
  1462                           ;UUsuaris.c: 73:    }
  1463  000FE6  0012               	return	
  1464  000FE8                     l4567:
  1465  000FE8  5042               	movf	_delUser^0,w,c
  1466  000FEA  0A80               	xorlw	128
  1467  000FEC  0F6C               	addlw	-148
  1468  000FEE  A0D8               	btfss	status,0,c
  1469  000FF0  0012               	return	
  1470                           
  1471                           ;UUsuaris.c: 75:     delUser = -1;
  1472  000FF2  6842               	setf	_delUser^0,c
  1473                           
  1474                           ;UUsuaris.c: 76:     state = 0;
  1475  000FF4  6A0C               	clrf	UMotorUsuaris@state^0,c
  1476  000FF6  0012               	return	
  1477  000FF8                     l4573:
  1478  000FF8  500C               	movf	UMotorUsuaris@state^0,w,c
  1479  000FFA  6E66               	movwf	??_UMotorUsuaris^0,c
  1480  000FFC  6A67               	clrf	(??_UMotorUsuaris+1)^0,c
  1481                           
  1482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1483                           ; Switch size 1, requested type "space"
  1484                           ; Number of cases is 1, Range of values is 0 to 0
  1485                           ; switch strategies available:
  1486                           ; Name         Instructions Cycles
  1487                           ; simple_byte            4     3 (average)
  1488                           ;	Chosen strategy is simple_byte
  1489  000FFE  5067               	movf	(??_UMotorUsuaris+1)^0,w,c
  1490  001000  A4D8               	btfss	status,2,c
  1491  001002  0012               	return	
  1492                           
  1493                           ; Switch size 1, requested type "space"
  1494                           ; Number of cases is 3, Range of values is 0 to 2
  1495                           ; switch strategies available:
  1496                           ; Name         Instructions Cycles
  1497                           ; simple_byte           10     6 (average)
  1498                           ;	Chosen strategy is simple_byte
  1499  001004  5066               	movf	??_UMotorUsuaris^0,w,c
  1500  001006  E0B7               	bz	l983
  1501  001008  0A01               	xorlw	1	; case 1
  1502  00100A  E0D1               	bz	l990
  1503  00100C  0A03               	xorlw	3	; case 2
  1504  00100E  E0D2               	bz	l4559
  1505  001010  0012               	return		;funcret
  1506  001012                     __end_of_UMotorUsuaris:
  1507                           	callstack 0
  1508  001012                     PL22:
  1509                           	callstack 27
  1510  001012  5042               	movf	_delUser^0,w,c
  1511  001014  6E60               	movwf	___wmul@multiplier^0,c
  1512  001016  6A61               	clrf	(___wmul@multiplier+1)^0,c
  1513  001018  BE60               	btfsc	___wmul@multiplier^0,7,c
  1514  00101A  0661               	decf	(___wmul@multiplier+1)^0,f,c
  1515  00101C  6A63               	clrf	(___wmul@multiplicand+1)^0,c
  1516  00101E  0E0C               	movlw	12
  1517  001020  6E62               	movwf	___wmul@multiplicand^0,c
  1518  001022  0C0C               	retlw	12
  1519  001024                     __end_ofPL22:
  1520                           	callstack 0
  1521  001024                     PL26:
  1522                           	callstack 27
  1523  001024  0D0C               	mullw	12
  1524  001026  0E0B               	movlw	low (_usuaris+11)
  1525  001028  24F3               	addwf	243,w,c
  1526  00102A  6ED9               	movwf	fsr2l,c
  1527  00102C  0E01               	movlw	high (_usuaris+11)
  1528  00102E  20F4               	addwfc	prodh,w,c
  1529  001030  6EDA               	movwf	fsr2h,c
  1530  001032  0012               	return	
  1531  001034                     __end_ofPL26:
  1532                           	callstack 0
  1533  001034                     PL38:
  1534                           	callstack 27
  1535  001034  0E0C               	movlw	low (_usuaris+12)
  1536  001036  2460               	addwf	?___wmul^0,w,c
  1537  001038  6ED9               	movwf	fsr2l,c
  1538  00103A  0E01               	movlw	high (_usuaris+12)
  1539  00103C  2061               	addwfc	(?___wmul+1)^0,w,c
  1540  00103E  6EDA               	movwf	fsr2h,c
  1541  001040  0012               	return	
  1542  001042                     __end_ofPL38:
  1543                           	callstack 0
  1544  001042                     PL64:
  1545                           	callstack 27
  1546  001042  5042               	movf	_delUser^0,w,c
  1547  001044  0D0C               	mullw	12
  1548  001046  0E00               	movlw	low _usuaris
  1549  001048  24F3               	addwf	243,w,c
  1550  00104A  0012               	return	
  1551  00104C                     __end_ofPL64:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function ___wmul *****************
  1555 ;; Defined at:
  1556 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  multiplier      2    5[COMRAM] unsigned int 
  1559 ;;  multiplicand    2    7[COMRAM] unsigned int 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  product         2    9[COMRAM] unsigned int 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  2    5[COMRAM] unsigned int 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, prodl, prodh
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1
  1571 ;;      Params:         4       0       0
  1572 ;;      Locals:         2       0       0
  1573 ;;      Temps:          0       0       0
  1574 ;;      Totals:         6       0       0
  1575 ;;Total ram usage:        6 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 2
  1578 ;; This function calls:
  1579 ;;		Nothing
  1580 ;; This function is called by:
  1581 ;;		_UMotorUsuaris
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text4
  1586  00194E                     __ptext4:
  1587                           	callstack 0
  1588  00194E                     ___wmul:
  1589                           	callstack 27
  1590                           
  1591                           ;incstack = 0
  1592  00194E  5060               	movf	___wmul@multiplier^0,w,c
  1593  001950  0262               	mulwf	___wmul@multiplicand^0,c
  1594  001952  CFF3 F064          	movff	prodl,___wmul@product
  1595  001956  CFF4 F065          	movff	prodh,___wmul@product+1
  1596  00195A  5060               	movf	___wmul@multiplier^0,w,c
  1597  00195C  0263               	mulwf	(___wmul@multiplicand+1)^0,c
  1598  00195E  50F3               	movf	243,w,c
  1599  001960  2665               	addwf	(___wmul@product+1)^0,f,c
  1600  001962  5061               	movf	(___wmul@multiplier+1)^0,w,c
  1601  001964  0262               	mulwf	___wmul@multiplicand^0,c
  1602  001966  50F3               	movf	243,w,c
  1603  001968  2665               	addwf	(___wmul@product+1)^0,f,c
  1604  00196A  C064  F060         	movff	___wmul@product,?___wmul
  1605  00196E  C065  F061         	movff	___wmul@product+1,?___wmul+1
  1606  001972  0012               	return		;funcret
  1607  001974                     __end_of___wmul:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function _TiInitTimer *****************
  1611 ;; Defined at:
  1612 ;;		line 18 in file "TiTTimer.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1
  1626 ;;      Params:         0       0       0
  1627 ;;      Locals:         0       0       0
  1628 ;;      Temps:          0       0       0
  1629 ;;      Totals:         0       0       0
  1630 ;;Total ram usage:        0 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; Hardware stack levels required when called: 2
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text5
  1641  0018AE                     __ptext5:
  1642                           	callstack 0
  1643  0018AE                     _TiInitTimer:
  1644                           	callstack 28
  1645                           
  1646                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  1647                           
  1648                           ;incstack = 0
  1649  0018AE  9ED0               	bcf	208,7,c	;volatile
  1650                           
  1651                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  1652  0018B0  8EF2               	bsf	242,7,c	;volatile
  1653                           
  1654                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  1655  0018B2  8CF2               	bsf	242,6,c	;volatile
  1656                           
  1657                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  1658  0018B4  8AF2               	bsf	242,5,c	;volatile
  1659                           
  1660                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  1661  0018B6  94F2               	bcf	242,2,c	;volatile
  1662                           
  1663                           ;TiTTimer.c: 25:     T0CON = 199;
  1664  0018B8  0EC7               	movlw	199
  1665  0018BA  6ED5               	movwf	213,c	;volatile
  1666                           
  1667                           ;TiTTimer.c: 27:     TMR0H = 0;
  1668  0018BC  6AD7               	clrf	215,c	;volatile
  1669                           
  1670                           ;TiTTimer.c: 28:     TMR0L = 236;
  1671  0018BE  0EEC               	movlw	236
  1672  0018C0  6ED6               	movwf	214,c	;volatile
  1673                           
  1674                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  1675  0018C2  8ED5               	bsf	213,7,c	;volatile
  1676                           
  1677                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  1678  0018C4  6A2A               	clrf	_counter^0,c
  1679  0018C6                     l4217:
  1680  0018C6  0E07               	movlw	7
  1681  0018C8  642A               	cpfsgt	_counter^0,c
  1682  0018CA  D001               	goto	l4221
  1683  0018CC  0C07               	retlw	7
  1684  0018CE                     l4221:
  1685                           
  1686                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  1687  0018CE  EC50  F00C         	call	PL16	;call to abstracted procedure
  1688  0018D2  6ADF               	clrf	indf2,c
  1689                           
  1690                           ;TiTTimer.c: 33:     }
  1691  0018D4  2A2A               	incf	_counter^0,f,c
  1692  0018D6  D7F7               	goto	l4217
  1693  0018D8                     __end_of_TiInitTimer:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _TeTeclat *****************
  1697 ;; Defined at:
  1698 ;;		line 23 in file "TeTeclat.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1
  1712 ;;      Params:         0       0       0
  1713 ;;      Locals:         0       0       0
  1714 ;;      Temps:          3       0       0
  1715 ;;      Totals:         3       0       0
  1716 ;;Total ram usage:        3 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 3
  1719 ;; This function calls:
  1720 ;;		_JnovaTecla
  1721 ;;		_MsetNovaTecla
  1722 ;;		_SsetNovaTecla
  1723 ;;		_TiGetTics
  1724 ;;		_TiResetTics
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text6
  1731  000E46                     __ptext6:
  1732                           	callstack 0
  1733  000E46                     _TeTeclat:
  1734                           	callstack 27
  1735                           
  1736                           ;TeTeclat.c: 24:  static char state = 0;;TeTeclat.c: 25:     static char cols=0;;TeTecla
      +                          t.c: 26:     static char files = 0;;TeTeclat.c: 27:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  1737                           
  1738                           ;incstack = 0
  1739  000E46  A083               	btfss	131,0,c	;volatile
  1740  000E48  D003               	goto	u5620
  1741  000E4A  6A67               	clrf	??_TeTeclat^0,c
  1742  000E4C  2A67               	incf	??_TeTeclat^0,f,c
  1743  000E4E  D001               	goto	u5628
  1744  000E50                     u5620:
  1745  000E50  6A67               	clrf	??_TeTeclat^0,c
  1746  000E52                     u5628:
  1747  000E52  0E01               	movlw	1
  1748  000E54  A283               	btfss	131,1,c	;volatile
  1749  000E56  0E00               	movlw	0
  1750  000E58  0D02               	mullw	2
  1751  000E5A  CFF3 F068          	movff	prodl,??_TeTeclat+1
  1752  000E5E  0E01               	movlw	1
  1753  000E60  A483               	btfss	131,2,c	;volatile
  1754  000E62  0E00               	movlw	0
  1755  000E64  0D03               	mullw	3
  1756  000E66  CFF3 F069          	movff	prodl,??_TeTeclat+2
  1757  000E6A  0E01               	movlw	1
  1758  000E6C  A683               	btfss	131,3,c	;volatile
  1759  000E6E  0E00               	movlw	0
  1760  000E70  0D04               	mullw	4
  1761  000E72  50F3               	movf	243,w,c
  1762  000E74  2469               	addwf	(??_TeTeclat+2)^0,w,c
  1763  000E76  2468               	addwf	(??_TeTeclat+1)^0,w,c
  1764  000E78  2467               	addwf	??_TeTeclat^0,w,c
  1765  000E7A  6E1E               	movwf	TeTeclat@files^0,c
  1766                           
  1767                           ;TeTeclat.c: 28:  switch(state) {
  1768  000E7C  D05B               	goto	l5555
  1769  000E7E                     l5481:
  1770                           
  1771                           ;TeTeclat.c: 30:    if (files==0) {
  1772  000E7E  501E               	movf	TeTeclat@files^0,w,c
  1773  000E80  E106               	bnz	l5487
  1774                           
  1775                           ;TeTeclat.c: 31:     LATDbits.LD4=1;
  1776  000E82  888C               	bsf	140,4,c	;volatile
  1777                           
  1778                           ;TeTeclat.c: 32:     LATDbits.LD5=0;
  1779  000E84  9A8C               	bcf	140,5,c	;volatile
  1780                           
  1781                           ;TeTeclat.c: 33:     LATDbits.LD6=0;
  1782  000E86  9C8C               	bcf	140,6,c	;volatile
  1783                           
  1784                           ;TeTeclat.c: 34:     cols=0;
  1785  000E88  6A1F               	clrf	TeTeclat@cols^0,c
  1786  000E8A                     l5485:
  1787                           
  1788                           ;TeTeclat.c: 35:     state++;
  1789  000E8A  2A20               	incf	TeTeclat@state^0,f,c
  1790                           
  1791                           ;TeTeclat.c: 36:    }
  1792  000E8C  0012               	return	
  1793  000E8E                     l5487:
  1794  000E8E  501E               	movf	TeTeclat@files^0,w,c
  1795  000E90  B4D8               	btfsc	status,2,c
  1796  000E92  0012               	return	
  1797                           
  1798                           ;TeTeclat.c: 38:     TiResetTics(tiTeclat);
  1799  000E94  5021               	movf	_tiTeclat^0,w,c
  1800  000E96  ECEC  F00C         	call	_TiResetTics
  1801  000E9A                     l5491:
  1802                           
  1803                           ;TeTeclat.c: 39:     state = 3;
  1804  000E9A  0E03               	movlw	3
  1805  000E9C  6E20               	movwf	TeTeclat@state^0,c
  1806  000E9E  0C03               	retlw	3
  1807  000EA0                     l5493:
  1808                           
  1809                           ;TeTeclat.c: 43:    if (files==0) {
  1810  000EA0  501E               	movf	TeTeclat@files^0,w,c
  1811  000EA2  E106               	bnz	l5501
  1812                           
  1813                           ;TeTeclat.c: 44:     LATDbits.LD4=0;
  1814  000EA4  988C               	bcf	140,4,c	;volatile
  1815                           
  1816                           ;TeTeclat.c: 45:     LATDbits.LD5=1;
  1817  000EA6  8A8C               	bsf	140,5,c	;volatile
  1818                           
  1819                           ;TeTeclat.c: 46:     LATDbits.LD6=0;
  1820  000EA8  9C8C               	bcf	140,6,c	;volatile
  1821                           
  1822                           ;TeTeclat.c: 47:     cols=1;
  1823  000EAA  0E01               	movlw	1
  1824  000EAC  6E1F               	movwf	TeTeclat@cols^0,c
  1825  000EAE  D7ED               	goto	l5485
  1826  000EB0                     l5501:
  1827  000EB0  501E               	movf	TeTeclat@files^0,w,c
  1828  000EB2  B4D8               	btfsc	status,2,c
  1829  000EB4  0012               	return	
  1830                           
  1831                           ;TeTeclat.c: 51:     TiResetTics(tiTeclat);
  1832  000EB6  5021               	movf	_tiTeclat^0,w,c
  1833  000EB8  ECEC  F00C         	call	_TiResetTics
  1834  000EBC  D7EE               	goto	l5491
  1835  000EBE                     l5507:
  1836                           
  1837                           ;TeTeclat.c: 56:    if (files==0) {
  1838  000EBE  501E               	movf	TeTeclat@files^0,w,c
  1839  000EC0  E107               	bnz	l5515
  1840                           
  1841                           ;TeTeclat.c: 57:     LATDbits.LD4=0;
  1842  000EC2  988C               	bcf	140,4,c	;volatile
  1843                           
  1844                           ;TeTeclat.c: 58:     LATDbits.LD5=0;
  1845  000EC4  9A8C               	bcf	140,5,c	;volatile
  1846                           
  1847                           ;TeTeclat.c: 59:     LATDbits.LD6=1;
  1848  000EC6  8C8C               	bsf	140,6,c	;volatile
  1849                           
  1850                           ;TeTeclat.c: 60:     cols=2;
  1851  000EC8  0E02               	movlw	2
  1852  000ECA  6E1F               	movwf	TeTeclat@cols^0,c
  1853  000ECC                     l5513:
  1854                           
  1855                           ;TeTeclat.c: 61:     state = 0;
  1856  000ECC  6A20               	clrf	TeTeclat@state^0,c
  1857                           
  1858                           ;TeTeclat.c: 62:    }
  1859  000ECE  0012               	return	
  1860  000ED0                     l5515:
  1861  000ED0  501E               	movf	TeTeclat@files^0,w,c
  1862  000ED2  B4D8               	btfsc	status,2,c
  1863  000ED4  0012               	return	
  1864                           
  1865                           ;TeTeclat.c: 64:     TiResetTics(tiTeclat);
  1866  000ED6  5021               	movf	_tiTeclat^0,w,c
  1867  000ED8  ECEC  F00C         	call	_TiResetTics
  1868  000EDC  D7D6               	goto	l5485
  1869  000EDE                     l5521:
  1870                           
  1871                           ;TeTeclat.c: 69:    if (TiGetTics(tiTeclat)>=0) {
  1872  000EDE  5021               	movf	_tiTeclat^0,w,c
  1873  000EE0  ECBA  F00C         	call	_TiGetTics
  1874  000EE4  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  1875  000EE6  0012               	return	
  1876  000EE8  D7D0               	goto	l5485
  1877  000EEA                     l5525:
  1878                           
  1879                           ;TeTeclat.c: 74:    if (files==0) {
  1880  000EEA  501E               	movf	TeTeclat@files^0,w,c
  1881  000EEC  E103               	bnz	l5529
  1882                           
  1883                           ;TeTeclat.c: 75:     state = 1;
  1884  000EEE  0E01               	movlw	1
  1885  000EF0  6E20               	movwf	TeTeclat@state^0,c
  1886                           
  1887                           ;TeTeclat.c: 76:    }
  1888  000EF2  0C01               	retlw	1
  1889  000EF4                     l5529:
  1890  000EF4  501E               	movf	TeTeclat@files^0,w,c
  1891  000EF6  B4D8               	btfsc	status,2,c
  1892  000EF8  0012               	return	
  1893                           
  1894                           ;TeTeclat.c: 79:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  1895  000EFA  D833               	call	PL14	;call to abstracted procedure
  1896  000EFC  EC8F  F00D         	call	_MsetNovaTecla
  1897                           
  1898                           ;TeTeclat.c: 80:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  1899  000F00  D830               	call	PL14	;call to abstracted procedure
  1900  000F02  EC8B  F00D         	call	_SsetNovaTecla
  1901                           
  1902                           ;TeTeclat.c: 81:                 JnovaTecla(teclaPremuda[files-1][cols]);
  1903  000F06  D82D               	call	PL14	;call to abstracted procedure
  1904  000F08  ECBB  F00D         	call	_JnovaTecla
  1905  000F0C  D7BE               	goto	l5485
  1906  000F0E                     l5535:
  1907                           
  1908                           ;TeTeclat.c: 86:    if (files==0) {
  1909  000F0E  501E               	movf	TeTeclat@files^0,w,c
  1910  000F10  A4D8               	btfss	status,2,c
  1911  000F12  0012               	return	
  1912                           
  1913                           ;TeTeclat.c: 87:     TiResetTics(tiTeclat);
  1914  000F14  5021               	movf	_tiTeclat^0,w,c
  1915  000F16  ECEC  F00C         	call	_TiResetTics
  1916  000F1A  D7B7               	goto	l5485
  1917  000F1C                     l5541:
  1918                           
  1919                           ;TeTeclat.c: 92:    if (TiGetTics(tiTeclat)>=0) {
  1920  000F1C  5021               	movf	_tiTeclat^0,w,c
  1921  000F1E  ECBA  F00C         	call	_TiGetTics
  1922  000F22  D7E0               	goto	L1
  1923  000F24                     l5545:
  1924                           
  1925                           ;TeTeclat.c: 97:    if (files!=0) {
  1926  000F24  501E               	movf	TeTeclat@files^0,w,c
  1927  000F26  E003               	bz	l5549
  1928                           
  1929                           ;TeTeclat.c: 98:     state = 5;
  1930  000F28  0E05               	movlw	5
  1931  000F2A  6E20               	movwf	TeTeclat@state^0,c
  1932                           
  1933                           ;TeTeclat.c: 99:    }
  1934  000F2C  0C05               	retlw	5
  1935  000F2E                     l5549:
  1936  000F2E  501E               	movf	TeTeclat@files^0,w,c
  1937  000F30  E0CD               	bz	l5513
  1938  000F32  0012               	return	
  1939  000F34                     l5555:
  1940  000F34  5020               	movf	TeTeclat@state^0,w,c
  1941  000F36  6E67               	movwf	??_TeTeclat^0,c
  1942  000F38  6A68               	clrf	(??_TeTeclat+1)^0,c
  1943                           
  1944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1945                           ; Switch size 1, requested type "space"
  1946                           ; Number of cases is 1, Range of values is 0 to 0
  1947                           ; switch strategies available:
  1948                           ; Name         Instructions Cycles
  1949                           ; simple_byte            4     3 (average)
  1950                           ;	Chosen strategy is simple_byte
  1951  000F3A  5068               	movf	(??_TeTeclat+1)^0,w,c
  1952  000F3C  A4D8               	btfss	status,2,c
  1953  000F3E  0012               	return	
  1954                           
  1955                           ; Switch size 1, requested type "space"
  1956                           ; Number of cases is 8, Range of values is 0 to 7
  1957                           ; switch strategies available:
  1958                           ; Name         Instructions Cycles
  1959                           ; simple_byte           25    13 (average)
  1960                           ;	Chosen strategy is simple_byte
  1961  000F40  5067               	movf	??_TeTeclat^0,w,c
  1962  000F42  E09D               	bz	l5481
  1963  000F44  0A01               	xorlw	1	; case 1
  1964  000F46  E0AC               	bz	l5493
  1965  000F48  0A03               	xorlw	3	; case 2
  1966  000F4A  E0B9               	bz	l5507
  1967  000F4C  0A01               	xorlw	1	; case 3
  1968  000F4E  E0C7               	bz	l5521
  1969  000F50  0A07               	xorlw	7	; case 4
  1970  000F52  E0CB               	bz	l5525
  1971  000F54  0A01               	xorlw	1	; case 5
  1972  000F56  E0DB               	bz	l5535
  1973  000F58  0A03               	xorlw	3	; case 6
  1974  000F5A  E0E0               	bz	l5541
  1975  000F5C  0A01               	xorlw	1	; case 7
  1976  000F5E  E0E2               	bz	l5545
  1977  000F60  0012               	return		;funcret
  1978  000F62                     __end_of_TeTeclat:
  1979                           	callstack 0
  1980  000F62                     PL14:
  1981                           	callstack 27
  1982  000F62  501E               	movf	TeTeclat@files^0,w,c
  1983  000F64  0D03               	mullw	3
  1984  000F66  50F3               	movf	243,w,c
  1985  000F68  0F8C               	addlw	low (_teclaPremuda+253)
  1986  000F6A  241F               	addwf	TeTeclat@cols^0,w,c
  1987  000F6C  6ED9               	movwf	fsr2l,c
  1988  000F6E  6ADA               	clrf	fsr2h,c
  1989  000F70  50DF               	movf	indf2,w,c
  1990  000F72  0012               	return	
  1991  000F74                     __end_ofPL14:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _SsetNovaTecla *****************
  1995 ;; Defined at:
  1996 ;;		line 109 in file "Ssms.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  tecla           1    wreg     unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  tecla           1    5[COMRAM] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1
  2010 ;;      Params:         0       0       0
  2011 ;;      Locals:         1       0       0
  2012 ;;      Temps:          0       0       0
  2013 ;;      Totals:         1       0       0
  2014 ;;Total ram usage:        1 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 2
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_TeTeclat
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text7
  2025  001B16                     __ptext7:
  2026                           	callstack 0
  2027  001B16                     _SsetNovaTecla:
  2028                           	callstack 27
  2029                           
  2030                           ;incstack = 0
  2031                           ;SsetNovaTecla@tecla stored from wreg
  2032  001B16  6E60               	movwf	SsetNovaTecla@tecla^0,c
  2033                           
  2034                           ;Ssms.c: 110:     novaTecla = tecla;
  2035  001B18  C060  F045         	movff	SsetNovaTecla@tecla,_novaTecla
  2036  001B1C  0012               	return		;funcret
  2037  001B1E                     __end_of_SsetNovaTecla:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _MsetNovaTecla *****************
  2041 ;; Defined at:
  2042 ;;		line 472 in file "MMenu.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  tecla           1    wreg     unsigned char 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  tecla           1    5[COMRAM] unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1
  2056 ;;      Params:         0       0       0
  2057 ;;      Locals:         1       0       0
  2058 ;;      Temps:          0       0       0
  2059 ;;      Totals:         1       0       0
  2060 ;;Total ram usage:        1 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 2
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_TeTeclat
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text8
  2071  001B1E                     __ptext8:
  2072                           	callstack 0
  2073  001B1E                     _MsetNovaTecla:
  2074                           	callstack 27
  2075                           
  2076                           ;incstack = 0
  2077                           ;MsetNovaTecla@tecla stored from wreg
  2078  001B1E  6E60               	movwf	MsetNovaTecla@tecla^0,c
  2079                           
  2080                           ;MMenu.c: 473:     NovaTecla = tecla;
  2081  001B20  C060  F04A         	movff	MsetNovaTecla@tecla,_NovaTecla
  2082  001B24  0012               	return		;funcret
  2083  001B26                     __end_of_MsetNovaTecla:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function _TeInit *****************
  2087 ;; Defined at:
  2088 ;;		line 19 in file "TeTeclat.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1
  2102 ;;      Params:         0       0       0
  2103 ;;      Locals:         0       0       0
  2104 ;;      Temps:          0       0       0
  2105 ;;      Totals:         0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; Hardware stack levels required when called: 3
  2109 ;; This function calls:
  2110 ;;		_TiGetTimer
  2111 ;; This function is called by:
  2112 ;;		_main
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text9
  2117  001B26                     __ptext9:
  2118                           	callstack 0
  2119  001B26                     _TeInit:
  2120                           	callstack 27
  2121                           
  2122                           ;TeTeclat.c: 20:     tiTeclat=TiGetTimer();
  2123                           
  2124                           ;incstack = 0
  2125  001B26  EC41  F00C         	call	_TiGetTimer	;wreg free
  2126  001B2A  6E21               	movwf	_tiTeclat^0,c
  2127  001B2C  0012               	return		;funcret
  2128  001B2E                     __end_of_TeInit:
  2129                           	callstack 0
  2130                           
  2131 ;; *************** function _Sinit *****************
  2132 ;; Defined at:
  2133 ;;		line 16 in file "Ssms.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1
  2147 ;;      Params:         0       0       0
  2148 ;;      Locals:         0       0       0
  2149 ;;      Temps:          0       0       0
  2150 ;;      Totals:         0       0       0
  2151 ;;Total ram usage:        0 bytes
  2152 ;; Hardware stack levels used: 1
  2153 ;; Hardware stack levels required when called: 3
  2154 ;; This function calls:
  2155 ;;		_TiGetTimer
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text10
  2162  001B2E                     __ptext10:
  2163                           	callstack 0
  2164  001B2E                     _Sinit:
  2165                           	callstack 27
  2166                           
  2167                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  2168                           
  2169                           ;incstack = 0
  2170  001B2E  EC41  F00C         	call	_TiGetTimer	;wreg free
  2171  001B32  6E44               	movwf	_timerSMS^0,c
  2172  001B34  0012               	return		;funcret
  2173  001B36                     __end_of_Sinit:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _SMotor *****************
  2177 ;; Defined at:
  2178 ;;		line 20 in file "Ssms.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1
  2192 ;;      Params:         0       0       0
  2193 ;;      Locals:         0       0       0
  2194 ;;      Temps:          2       0       0
  2195 ;;      Totals:         2       0       0
  2196 ;;Total ram usage:        2 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 3
  2199 ;; This function calls:
  2200 ;;		_MNovaLletra
  2201 ;;		_TiGetTics
  2202 ;;		_TiResetTics
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text11
  2209  000CD0                     __ptext11:
  2210                           	callstack 0
  2211  000CD0                     _SMotor:
  2212                           	callstack 27
  2213                           
  2214                           ;Ssms.c: 21:  static char state = 0;;Ssms.c: 22:  switch(state) {
  2215                           
  2216                           ;incstack = 0
  2217  000CD0  D098               	goto	l5691
  2218  000CD2                     l5563:
  2219                           
  2220                           ;Ssms.c: 24:    if (novaTecla != -1 && setSMSon == 1) {
  2221  000CD2  2845               	incf	_novaTecla^0,w,c
  2222  000CD4  E008               	bz	l5571
  2223  000CD6  A278               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2224  000CD8  D006               	goto	l5571
  2225                           
  2226                           ;Ssms.c: 25:     TiResetTics(timerSMS);
  2227  000CDA  5044               	movf	_timerSMS^0,w,c
  2228  000CDC  ECEC  F00C         	call	_TiResetTics
  2229                           
  2230                           ;Ssms.c: 26:     state = 3;
  2231  000CE0  0E03               	movlw	3
  2232  000CE2  6E10               	movwf	SMotor@state^0,c
  2233                           
  2234                           ;Ssms.c: 27:    }
  2235  000CE4  0C03               	retlw	3
  2236  000CE6                     l5571:
  2237  000CE6  2845               	incf	_novaTecla^0,w,c
  2238  000CE8  A4D8               	btfss	status,2,c
  2239  000CEA  0012               	return	
  2240  000CEC  5044               	movf	_timerSMS^0,w,c
  2241  000CEE  ECBA  F00C         	call	_TiGetTics
  2242  000CF2  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  2243  000CF4  0012               	return	
  2244  000CF6  D8A2               	call	PL54	;call to abstracted procedure
  2245  000CF8  A0D8               	btfss	status,0,c
  2246  000CFA  0012               	return	
  2247  000CFC  2846               	incf	_lletraASCII^0,w,c
  2248  000CFE  A4D8               	btfss	status,2,c
  2249  000D00  A278               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2250  000D02  0012               	return	
  2251                           
  2252                           ;Ssms.c: 29:     MNovaLletra(lletraASCII);
  2253  000D04  5046               	movf	_lletraASCII^0,w,c
  2254  000D06  EC9B  F00D         	call	_MNovaLletra
  2255                           
  2256                           ;Ssms.c: 30:     lletraASCII = -1;
  2257  000D0A  6846               	setf	_lletraASCII^0,c
  2258                           
  2259                           ;Ssms.c: 31:     ultimaTecla = -1;
  2260  000D0C  6843               	setf	_ultimaTecla^0,c
  2261  000D0E  0012               	return	
  2262  000D10                     l5585:
  2263                           
  2264                           ;Ssms.c: 35:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 1000) {
  2265  000D10  5043               	movf	_ultimaTecla^0,w,c
  2266  000D12  1845               	xorwf	_novaTecla^0,w,c
  2267  000D14  E10C               	bnz	l5593
  2268  000D16  5044               	movf	_timerSMS^0,w,c
  2269  000D18  ECBA  F00C         	call	_TiGetTics
  2270  000D1C  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  2271  000D1E  D002               	goto	u5860
  2272  000D20  D88D               	call	PL54	;call to abstracted procedure
  2273  000D22  E205               	bc	l5593
  2274  000D24                     u5860:
  2275                           
  2276                           ;Ssms.c: 36:     novaTecla = -1;
  2277  000D24  6845               	setf	_novaTecla^0,c
  2278                           
  2279                           ;Ssms.c: 37:     sumaPulsacions++;
  2280  000D26  2A11               	incf	_sumaPulsacions^0,f,c
  2281                           
  2282                           ;Ssms.c: 38:     lletraASCII++;
  2283  000D28  2A46               	incf	_lletraASCII^0,f,c
  2284                           
  2285                           ;Ssms.c: 39:     state++;
  2286  000D2A  2A10               	incf	SMotor@state^0,f,c
  2287                           
  2288                           ;Ssms.c: 40:    }
  2289  000D2C  0012               	return	
  2290  000D2E                     l5593:
  2291  000D2E  2845               	incf	_novaTecla^0,w,c
  2292  000D30  B4D8               	btfsc	status,2,c
  2293  000D32  0012               	return	
  2294  000D34  5043               	movf	_ultimaTecla^0,w,c
  2295  000D36  1845               	xorwf	_novaTecla^0,w,c
  2296  000D38  B4D8               	btfsc	status,2,c
  2297  000D3A  0012               	return	
  2298                           
  2299                           ;Ssms.c: 42:     MNovaLletra(lletraASCII);
  2300  000D3C  5046               	movf	_lletraASCII^0,w,c
  2301  000D3E  EC9B  F00D         	call	_MNovaLletra
  2302                           
  2303                           ;Ssms.c: 43:     lletraASCII = lletraInici[novaTecla-2];
  2304  000D42  5045               	movf	_novaTecla^0,w,c
  2305  000D44  D875               	call	PL50	;call to abstracted procedure
  2306                           
  2307                           ;Ssms.c: 44:     ultimaTecla = novaTecla;
  2308  000D46  C045  F043         	movff	_novaTecla,_ultimaTecla
  2309                           
  2310                           ;Ssms.c: 45:     sumaPulsacions = 0;
  2311  000D4A  6A11               	clrf	_sumaPulsacions^0,c
  2312                           
  2313                           ;Ssms.c: 46:     novaTecla = -1;
  2314  000D4C  6845               	setf	_novaTecla^0,c
  2315                           
  2316                           ;Ssms.c: 47:     state--;
  2317  000D4E  0610               	decf	SMotor@state^0,f,c
  2318  000D50  0012               	return	
  2319  000D52                     l5609:
  2320                           
  2321                           ;Ssms.c: 51:    if (ultimaTecla != 7 && ultimaTecla != 9) {
  2322  000D52  0E07               	movlw	7
  2323  000D54  1843               	xorwf	_ultimaTecla^0,w,c
  2324  000D56  E006               	bz	l5615
  2325  000D58  0E09               	movlw	9
  2326  000D5A  1843               	xorwf	_ultimaTecla^0,w,c
  2327  000D5C  E003               	bz	l5615
  2328                           
  2329                           ;Ssms.c: 52:     state = 5;
  2330  000D5E  0E05               	movlw	5
  2331  000D60  6E10               	movwf	SMotor@state^0,c
  2332                           
  2333                           ;Ssms.c: 53:    }
  2334  000D62  0C05               	retlw	5
  2335  000D64                     l5615:
  2336  000D64  0E07               	movlw	7
  2337  000D66  1843               	xorwf	_ultimaTecla^0,w,c
  2338  000D68  E004               	bz	u5920
  2339  000D6A  0E09               	movlw	9
  2340  000D6C  1843               	xorwf	_ultimaTecla^0,w,c
  2341  000D6E  A4D8               	btfss	status,2,c
  2342  000D70  0012               	return	
  2343  000D72                     u5920:
  2344                           
  2345                           ;Ssms.c: 55:     state = 6;
  2346  000D72  0E06               	movlw	6
  2347  000D74  6E10               	movwf	SMotor@state^0,c
  2348  000D76  0C06               	retlw	6
  2349  000D78                     l5621:
  2350                           
  2351                           ;Ssms.c: 59:    if (novaTecla > 1 && novaTecla < 10) {
  2352  000D78  5045               	movf	_novaTecla^0,w,c
  2353  000D7A  0A80               	xorlw	128
  2354  000D7C  0F7E               	addlw	-130
  2355  000D7E  E307               	bnc	l5627
  2356  000D80  5045               	movf	_novaTecla^0,w,c
  2357  000D82  0A80               	xorlw	128
  2358  000D84  0F76               	addlw	-138
  2359  000D86  E203               	bc	l5627
  2360                           
  2361                           ;Ssms.c: 60:     state = 1;
  2362  000D88  0E01               	movlw	1
  2363  000D8A  6E10               	movwf	SMotor@state^0,c
  2364                           
  2365                           ;Ssms.c: 61:    }
  2366  000D8C  0C01               	retlw	1
  2367  000D8E                     l5627:
  2368  000D8E  5045               	movf	_novaTecla^0,w,c
  2369  000D90  0A80               	xorlw	128
  2370  000D92  0F7E               	addlw	-130
  2371  000D94  E209               	bc	l5637
  2372  000D96  2846               	incf	_lletraASCII^0,w,c
  2373  000D98  E107               	bnz	l5637
  2374                           
  2375                           ;Ssms.c: 63:     MNovaLletra(novaTecla+48);
  2376  000D9A  5045               	movf	_novaTecla^0,w,c
  2377  000D9C  0F30               	addlw	48
  2378  000D9E  EC9B  F00D         	call	_MNovaLletra
  2379  000DA2                     l5633:
  2380                           
  2381                           ;Ssms.c: 64:     novaTecla = -1;
  2382  000DA2  6845               	setf	_novaTecla^0,c
  2383  000DA4                     l5635:
  2384                           
  2385                           ;Ssms.c: 65:     state = 0;
  2386  000DA4  6A10               	clrf	SMotor@state^0,c
  2387                           
  2388                           ;Ssms.c: 66:    }
  2389  000DA6  0012               	return	
  2390  000DA8                     l5637:
  2391  000DA8  5045               	movf	_novaTecla^0,w,c
  2392  000DAA  0A80               	xorlw	128
  2393  000DAC  0F7E               	addlw	-130
  2394  000DAE  B0D8               	btfsc	status,0,c
  2395  000DB0  0012               	return	
  2396  000DB2  2846               	incf	_lletraASCII^0,w,c
  2397  000DB4  B4D8               	btfsc	status,2,c
  2398  000DB6  0012               	return	
  2399                           
  2400                           ;Ssms.c: 68:     MNovaLletra(lletraASCII);
  2401  000DB8  5046               	movf	_lletraASCII^0,w,c
  2402  000DBA  EC9B  F00D         	call	_MNovaLletra
  2403                           
  2404                           ;Ssms.c: 69:     lletraASCII = -1;
  2405  000DBE  6846               	setf	_lletraASCII^0,c
  2406                           
  2407                           ;Ssms.c: 70:     state++;
  2408  000DC0  2A10               	incf	SMotor@state^0,f,c
  2409  000DC2  0012               	return	
  2410  000DC4                     l5647:
  2411                           
  2412                           ;Ssms.c: 74:    MNovaLletra(novaTecla+48);
  2413  000DC4  5045               	movf	_novaTecla^0,w,c
  2414  000DC6  0F30               	addlw	48
  2415  000DC8  EC9B  F00D         	call	_MNovaLletra
  2416  000DCC  D7EA               	goto	l5633
  2417  000DCE                     l5653:
  2418                           
  2419                           ;Ssms.c: 79:    if (sumaPulsacions == 4) {
  2420  000DCE  0E04               	movlw	4
  2421  000DD0  1811               	xorwf	_sumaPulsacions^0,w,c
  2422  000DD2  E104               	bnz	l5661
  2423  000DD4                     u5990:
  2424                           
  2425                           ;Ssms.c: 80:     lletraASCII = lletraInici[ultimaTecla-2];
  2426  000DD4  5043               	movf	_ultimaTecla^0,w,c
  2427  000DD6  D82C               	call	PL50	;call to abstracted procedure
  2428                           
  2429                           ;Ssms.c: 81:     sumaPulsacions = 0;
  2430  000DD8  6A11               	clrf	_sumaPulsacions^0,c
  2431  000DDA  D7E4               	goto	l5635
  2432  000DDC                     l5661:
  2433  000DDC  0E03               	movlw	3
  2434  000DDE  1811               	xorwf	_sumaPulsacions^0,w,c
  2435  000DE0  E104               	bnz	l5667
  2436  000DE2                     u6000:
  2437                           
  2438                           ;Ssms.c: 85:     lletraASCII = ultimaTecla+48;
  2439  000DE2  5043               	movf	_ultimaTecla^0,w,c
  2440  000DE4  0F30               	addlw	48
  2441  000DE6  6E46               	movwf	_lletraASCII^0,c
  2442  000DE8  D7DD               	goto	l5635
  2443  000DEA                     l5667:
  2444  000DEA  0E03               	movlw	3
  2445  000DEC  6011               	cpfslt	_sumaPulsacions^0,c
  2446  000DEE  0012               	return	
  2447  000DF0  D7D9               	goto	l5635
  2448  000DF2                     l5671:
  2449                           
  2450                           ;Ssms.c: 93:    if (sumaPulsacions == 4) {
  2451  000DF2  0E04               	movlw	4
  2452  000DF4  1811               	xorwf	_sumaPulsacions^0,w,c
  2453  000DF6  E0F5               	bz	u6000
  2454  000DF8  0E05               	movlw	5
  2455  000DFA  1811               	xorwf	_sumaPulsacions^0,w,c
  2456  000DFC  E0EB               	bz	u5990
  2457  000DFE  0E04               	movlw	4
  2458  000E00  D7F5               	goto	L2
  2459  000E02                     l5691:
  2460  000E02  5010               	movf	SMotor@state^0,w,c
  2461  000E04  6E67               	movwf	??_SMotor^0,c
  2462  000E06  6A68               	clrf	(??_SMotor+1)^0,c
  2463                           
  2464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2465                           ; Switch size 1, requested type "space"
  2466                           ; Number of cases is 1, Range of values is 0 to 0
  2467                           ; switch strategies available:
  2468                           ; Name         Instructions Cycles
  2469                           ; simple_byte            4     3 (average)
  2470                           ;	Chosen strategy is simple_byte
  2471  000E08  5068               	movf	(??_SMotor+1)^0,w,c
  2472  000E0A  A4D8               	btfss	status,2,c
  2473  000E0C  0012               	return	
  2474                           
  2475                           ; Switch size 1, requested type "space"
  2476                           ; Number of cases is 7, Range of values is 0 to 6
  2477                           ; switch strategies available:
  2478                           ; Name         Instructions Cycles
  2479                           ; simple_byte           22    12 (average)
  2480                           ;	Chosen strategy is simple_byte
  2481  000E0E  5067               	movf	??_SMotor^0,w,c
  2482  000E10  E101 D75F          	bz	l5563
  2483  000E14  0A01               	xorlw	1	; case 1
  2484  000E16  E101 D77B          	bz	l5585
  2485  000E1A  0A03               	xorlw	3	; case 2
  2486  000E1C  E09A               	bz	l5609
  2487  000E1E  0A01               	xorlw	1	; case 3
  2488  000E20  E0AB               	bz	l5621
  2489  000E22  0A07               	xorlw	7	; case 4
  2490  000E24  E0CF               	bz	l5647
  2491  000E26  0A01               	xorlw	1	; case 5
  2492  000E28  E0D2               	bz	l5653
  2493  000E2A  0A03               	xorlw	3	; case 6
  2494  000E2C  E0E2               	bz	l5671
  2495  000E2E  0012               	return		;funcret
  2496  000E30                     __end_of_SMotor:
  2497                           	callstack 0
  2498  000E30                     PL50:
  2499                           	callstack 27
  2500  000E30  0F33               	addlw	low (_lletraInici+254)
  2501  000E32  6ED9               	movwf	fsr2l,c
  2502  000E34  6ADA               	clrf	fsr2h,c
  2503  000E36  50DF               	movf	indf2,w,c
  2504  000E38  6E46               	movwf	_lletraASCII^0,c
  2505  000E3A  0012               	return	
  2506  000E3C                     __end_ofPL50:
  2507                           	callstack 0
  2508  000E3C                     PL54:
  2509                           	callstack 27
  2510  000E3C  0EE8               	movlw	232
  2511  000E3E  5C60               	subwf	?_TiGetTics^0,w,c
  2512  000E40  0E03               	movlw	3
  2513  000E42  5861               	subwfb	(?_TiGetTics+1)^0,w,c
  2514  000E44  0012               	return	
  2515  000E46                     __end_ofPL54:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _MNovaLletra *****************
  2519 ;; Defined at:
  2520 ;;		line 476 in file "MMenu.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  lletra          1    wreg     unsigned char 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  lletra          1    5[COMRAM] unsigned char 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1
  2534 ;;      Params:         0       0       0
  2535 ;;      Locals:         1       0       0
  2536 ;;      Temps:          0       0       0
  2537 ;;      Totals:         1       0       0
  2538 ;;Total ram usage:        1 bytes
  2539 ;; Hardware stack levels used: 1
  2540 ;; Hardware stack levels required when called: 2
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_SMotor
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text12
  2549  001B36                     __ptext12:
  2550                           	callstack 0
  2551  001B36                     _MNovaLletra:
  2552                           	callstack 27
  2553                           
  2554                           ;incstack = 0
  2555                           ;MNovaLletra@lletra stored from wreg
  2556  001B36  6E60               	movwf	MNovaLletra@lletra^0,c
  2557                           
  2558                           ;MMenu.c: 477:     novaLletra = lletra;
  2559  001B38  C060  F049         	movff	MNovaLletra@lletra,_novaLletra
  2560  001B3C  0012               	return		;funcret
  2561  001B3E                     __end_of_MNovaLletra:
  2562                           	callstack 0
  2563                           
  2564 ;; *************** function _SIOMotor *****************
  2565 ;; Defined at:
  2566 ;;		line 12 in file "SSIO.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1
  2580 ;;      Params:         0       0       0
  2581 ;;      Locals:         0       0       0
  2582 ;;      Temps:          2       0       0
  2583 ;;      Totals:         2       0       0
  2584 ;;Total ram usage:        2 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 6
  2587 ;; This function calls:
  2588 ;;		_CToAConverteix
  2589 ;;		_CToAHaAcabat
  2590 ;;		_CToAReset
  2591 ;;		_CToAobtenir
  2592 ;;		_LcClear
  2593 ;;		_LcGotoXY
  2594 ;;		_LcLliure
  2595 ;;		_LcNewString
  2596 ;;		_LcPutChar
  2597 ;;		_UchangeScore
  2598 ;;		_UgetScore
  2599 ;;		_UgetUserName
  2600 ;; This function is called by:
  2601 ;;		_main
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text13
  2606  000B56                     __ptext13:
  2607                           	callstack 0
  2608  000B56                     _SIOMotor:
  2609                           	callstack 24
  2610                           
  2611                           ;SSIO.c: 13:  static char state = 0;;SSIO.c: 14:     switch(state) {
  2612                           
  2613                           ;incstack = 0
  2614  000B56  D092               	goto	l5329
  2615  000B58                     l5249:
  2616                           
  2617                           ;SSIO.c: 16:    if (usuariActualSIO > -1) {
  2618  000B58  BE40               	btfsc	_usuariActualSIO^0,7,c
  2619  000B5A  0012               	return	
  2620                           
  2621                           ;SSIO.c: 17:     userPtr = UgetUserName(usuariActualSIO);
  2622  000B5C  5040               	movf	_usuariActualSIO^0,w,c
  2623  000B5E  EC1E  F00D         	call	_UgetUserName
  2624  000B62  C060  F001         	movff	?_UgetUserName,_userPtr
  2625  000B66  C061  F002         	movff	?_UgetUserName+1,_userPtr+1
  2626  000B6A                     l5253:
  2627                           
  2628                           ;SSIO.c: 18:     state++;
  2629  000B6A  2A08               	incf	SIOMotor@state^0,f,c
  2630  000B6C  0012               	return	
  2631  000B6E                     l1122:
  2632                           
  2633                           ;SSIO.c: 22:             if(TXSTAbits.TRMT){
  2634  000B6E  A2AC               	btfss	172,1,c	;volatile
  2635  000B70  0012               	return	
  2636                           
  2637                           ;SSIO.c: 23:                 if (*userPtr == '\0') {
  2638  000B72  D8A0               	call	PL46	;call to abstracted procedure
  2639  000B74  E103               	bnz	l5261
  2640                           
  2641                           ;SSIO.c: 24:     TXREG = 13;
  2642  000B76  0E0D               	movlw	13
  2643  000B78  6EAD               	movwf	173,c	;volatile
  2644  000B7A  D7F7               	goto	l5253
  2645  000B7C                     l5261:
  2646                           
  2647                           ;SSIO.c: 27:                     TXREG = *userPtr;
  2648  000B7C  D89B               	call	PL46	;call to abstracted procedure
  2649  000B7E  6EAD               	movwf	173,c	;volatile
  2650                           
  2651                           ;SSIO.c: 28:     userPtr++;
  2652  000B80  4A01               	infsnz	_userPtr^0,f,c
  2653  000B82  2A02               	incf	(_userPtr+1)^0,f,c
  2654  000B84  0012               	return	
  2655  000B86                     l5265:
  2656                           
  2657                           ;SSIO.c: 33:    if (direccio != -1 && TXSTAbits.TRMT) {
  2658  000B86  283F               	incf	_direccio^0,w,c
  2659  000B88  E006               	bz	l1127
  2660  000B8A  A2AC               	btfss	172,1,c	;volatile
  2661  000B8C  D004               	goto	l1127
  2662                           
  2663                           ;SSIO.c: 34:     TXREG = direccio;
  2664  000B8E  C03F  FFAD         	movff	_direccio,4013	;volatile
  2665                           
  2666                           ;SSIO.c: 35:     direccio = -1;
  2667  000B92  683F               	setf	_direccio^0,c
  2668                           
  2669                           ;SSIO.c: 36:    }
  2670  000B94  0012               	return	
  2671  000B96                     l1127:
  2672  000B96  AA9E               	btfss	158,5,c	;volatile
  2673  000B98  0012               	return	
  2674                           
  2675                           ;SSIO.c: 38:     LcGotoXY(12,1);
  2676  000B9A  D897               	call	PL74	;call to abstracted procedure
  2677  000B9C  ECD2  F009         	call	_LcGotoXY
  2678                           
  2679                           ;SSIO.c: 39:     rebut = RCREG;
  2680  000BA0  CFAE F009          	movff	4014,_rebut	;volatile
  2681                           
  2682                           ;SSIO.c: 40:     LcPutChar(RCREG);
  2683  000BA4  50AE               	movf	174,w,c	;volatile
  2684  000BA6  EC2D  F00B         	call	_LcPutChar
  2685  000BAA  D7DF               	goto	l5253
  2686  000BAC                     l1130:
  2687                           
  2688                           ;SSIO.c: 45:             if(PIR1bits.RCIF){
  2689  000BAC  AA9E               	btfss	158,5,c	;volatile
  2690  000BAE  0012               	return	
  2691                           
  2692                           ;SSIO.c: 46:                 if(rebut != 'X'){
  2693  000BB0  0E58               	movlw	88
  2694  000BB2  1809               	xorwf	_rebut^0,w,c
  2695  000BB4  E009               	bz	l1132
  2696                           
  2697                           ;SSIO.c: 47:                     LcGotoXY(13,1);
  2698  000BB6  0E01               	movlw	1
  2699  000BB8  6E68               	movwf	LcGotoXY@Row^0,c
  2700  000BBA  0E0D               	movlw	13
  2701  000BBC  ECD2  F009         	call	_LcGotoXY
  2702                           
  2703                           ;SSIO.c: 48:                     LcPutChar(RCREG);
  2704  000BC0  50AE               	movf	174,w,c	;volatile
  2705  000BC2  EC2D  F00B         	call	_LcPutChar
  2706  000BC6  D7D1               	goto	l5253
  2707  000BC8                     l1132:
  2708                           
  2709                           ;SSIO.c: 51:                     rebut = RCREG;
  2710  000BC8  CFAE F009          	movff	4014,_rebut	;volatile
  2711                           
  2712                           ;SSIO.c: 53:                     if(rebut > UgetScore(usuariActualSIO)){
  2713  000BCC  5040               	movf	_usuariActualSIO^0,w,c
  2714  000BCE  EC41  F00D         	call	_UgetScore
  2715  000BD2  6E71               	movwf	??_SIOMotor^0,c
  2716  000BD4  5009               	movf	_rebut^0,w,c
  2717  000BD6  5C71               	subwf	??_SIOMotor^0,w,c
  2718  000BD8  E203               	bc	l1134
  2719                           
  2720                           ;SSIO.c: 54:                         UchangeScore(rebut);
  2721  000BDA  5009               	movf	_rebut^0,w,c
  2722  000BDC  EC9F  F00D         	call	_UchangeScore
  2723  000BE0                     l1134:
  2724                           
  2725                           ;SSIO.c: 56:                     CToAReset();
  2726  000BE0  EC77  F00D         	call	_CToAReset	;wreg free
  2727                           
  2728                           ;SSIO.c: 57:                     CToAConverteix(rebut);
  2729  000BE4  5009               	movf	_rebut^0,w,c
  2730  000BE6  ECA3  F00D         	call	_CToAConverteix
  2731                           
  2732                           ;SSIO.c: 58:                     state = 5;
  2733  000BEA  0E05               	movlw	5
  2734  000BEC  6E08               	movwf	SIOMotor@state^0,c
  2735  000BEE  0C05               	retlw	5
  2736  000BF0                     l1135:
  2737                           
  2738                           ;SSIO.c: 63:    if (PIR1bits.RCIF) {
  2739  000BF0  AA9E               	btfss	158,5,c	;volatile
  2740  000BF2  0012               	return	
  2741                           
  2742                           ;SSIO.c: 64:     LcGotoXY(14,1);
  2743  000BF4  0E01               	movlw	1
  2744  000BF6  6E68               	movwf	LcGotoXY@Row^0,c
  2745  000BF8  0E0E               	movlw	14
  2746  000BFA  ECD2  F009         	call	_LcGotoXY
  2747                           
  2748                           ;SSIO.c: 65:     LcPutChar(RCREG);
  2749  000BFE  50AE               	movf	174,w,c	;volatile
  2750  000C00  EC2D  F00B         	call	_LcPutChar
  2751                           
  2752                           ;SSIO.c: 66:     state = 2;
  2753  000C04  0E02               	movlw	2
  2754  000C06  6E08               	movwf	SIOMotor@state^0,c
  2755  000C08  0C02               	retlw	2
  2756  000C0A                     l5293:
  2757                           
  2758                           ;SSIO.c: 70:    if (LcLliure() && CToAHaAcabat() == 250) {
  2759  000C0A  EC71  F00D         	call	_LcLliure	;wreg free
  2760  000C0E  A0D8               	btfss	status,0,c
  2761  000C10  0012               	return	
  2762  000C12  ECC7  F00D         	call	_CToAHaAcabat	;wreg free
  2763  000C16  0AFA               	xorlw	250
  2764  000C18  A4D8               	btfss	status,2,c
  2765  000C1A  0012               	return	
  2766                           
  2767                           ;SSIO.c: 71:     LcClear();
  2768  000C1C  ECFA  F00C         	call	_LcClear	;wreg free
  2769                           
  2770                           ;SSIO.c: 72:     LcGotoXY(7,0);
  2771  000C20  6A68               	clrf	LcGotoXY@Row^0,c
  2772  000C22  0E07               	movlw	7
  2773  000C24  ECD2  F009         	call	_LcGotoXY
  2774                           
  2775                           ;SSIO.c: 73:     LcNewString(CToAobtenir());
  2776  000C28  ECC5  F00D         	call	_CToAobtenir	;wreg free
  2777  000C2C  D849               	call	PL52	;call to abstracted procedure
  2778  000C2E  EC6B  F00D         	call	_LcNewString	;wreg free
  2779  000C32  D79B               	goto	l5253
  2780  000C34                     l5303:
  2781                           
  2782                           ;SSIO.c: 78:    if (LcLliure()) {
  2783  000C34  EC71  F00D         	call	_LcLliure	;wreg free
  2784  000C38  A0D8               	btfss	status,0,c
  2785  000C3A  0012               	return	
  2786                           
  2787                           ;SSIO.c: 79:     CToAReset();
  2788  000C3C  EC77  F00D         	call	_CToAReset	;wreg free
  2789                           
  2790                           ;SSIO.c: 80:     CToAConverteix(UgetScore(usuariActualSIO));
  2791  000C40  5040               	movf	_usuariActualSIO^0,w,c
  2792  000C42  EC41  F00D         	call	_UgetScore
  2793  000C46  ECA3  F00D         	call	_CToAConverteix
  2794  000C4A  D78F               	goto	l5253
  2795  000C4C                     l5311:
  2796                           
  2797                           ;SSIO.c: 85:    if (LcLliure()) {
  2798  000C4C  EC71  F00D         	call	_LcLliure	;wreg free
  2799  000C50  B0D8               	btfsc	status,0,c
  2800                           
  2801                           ;SSIO.c: 86:     state = 0;
  2802  000C52  6A08               	clrf	SIOMotor@state^0,c
  2803  000C54  0012               	return	
  2804  000C56                     l5315:
  2805                           
  2806                           ;SSIO.c: 90:    if (LcLliure() && CToAHaAcabat() == 250) {
  2807  000C56  EC71  F00D         	call	_LcLliure	;wreg free
  2808  000C5A  A0D8               	btfss	status,0,c
  2809  000C5C  0012               	return	
  2810  000C5E  ECC7  F00D         	call	_CToAHaAcabat	;wreg free
  2811  000C62  0AFA               	xorlw	250
  2812  000C64  A4D8               	btfss	status,2,c
  2813  000C66  0012               	return	
  2814                           
  2815                           ;SSIO.c: 91:     LcGotoXY(12,1);
  2816  000C68  D830               	call	PL74	;call to abstracted procedure
  2817  000C6A  ECD2  F009         	call	_LcGotoXY
  2818                           
  2819                           ;SSIO.c: 92:     LcNewString(CToAobtenir());
  2820  000C6E  ECC5  F00D         	call	_CToAobtenir	;wreg free
  2821  000C72  D826               	call	PL52	;call to abstracted procedure
  2822  000C74  EC6B  F00D         	call	_LcNewString	;wreg free
  2823                           
  2824                           ;SSIO.c: 93:     usuariActualSIO = -1;
  2825  000C78  6840               	setf	_usuariActualSIO^0,c
  2826  000C7A  D777               	goto	l5253
  2827  000C7C                     l5329:
  2828  000C7C  5008               	movf	SIOMotor@state^0,w,c
  2829  000C7E  6E71               	movwf	??_SIOMotor^0,c
  2830  000C80  6A72               	clrf	(??_SIOMotor+1)^0,c
  2831                           
  2832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2833                           ; Switch size 1, requested type "space"
  2834                           ; Number of cases is 1, Range of values is 0 to 0
  2835                           ; switch strategies available:
  2836                           ; Name         Instructions Cycles
  2837                           ; simple_byte            4     3 (average)
  2838                           ;	Chosen strategy is simple_byte
  2839  000C82  5072               	movf	(??_SIOMotor+1)^0,w,c
  2840  000C84  A4D8               	btfss	status,2,c
  2841  000C86  0012               	return	
  2842                           
  2843                           ; Switch size 1, requested type "space"
  2844                           ; Number of cases is 9, Range of values is 0 to 8
  2845                           ; switch strategies available:
  2846                           ; Name         Instructions Cycles
  2847                           ; simple_byte           28    15 (average)
  2848                           ;	Chosen strategy is simple_byte
  2849  000C88  5071               	movf	??_SIOMotor^0,w,c
  2850  000C8A  E101 D765          	bz	l5249
  2851  000C8E  0A01               	xorlw	1	; case 1
  2852  000C90  E101 D76D          	bz	l1122
  2853  000C94  0A03               	xorlw	3	; case 2
  2854  000C96  E101 D776          	bz	l5265
  2855  000C9A  0A01               	xorlw	1	; case 3
  2856  000C9C  E087               	bz	l1130
  2857  000C9E  0A07               	xorlw	7	; case 4
  2858  000CA0  E0A7               	bz	l1135
  2859  000CA2  0A01               	xorlw	1	; case 5
  2860  000CA4  E0B2               	bz	l5293
  2861  000CA6  0A03               	xorlw	3	; case 6
  2862  000CA8  E0C5               	bz	l5303
  2863  000CAA  0A01               	xorlw	1	; case 7
  2864  000CAC  E0D4               	bz	l5315
  2865  000CAE  0A0F               	xorlw	15	; case 8
  2866  000CB0  E0CD               	bz	l5311
  2867  000CB2  0012               	return		;funcret
  2868  000CB4                     __end_of_SIOMotor:
  2869                           	callstack 0
  2870  000CB4                     PL46:
  2871                           	callstack 24
  2872  000CB4  C001  FFD9         	movff	_userPtr,fsr2l
  2873  000CB8  C002  FFDA         	movff	_userPtr+1,fsr2h
  2874  000CBC  50DF               	movf	indf2,w,c
  2875  000CBE  0012               	return	
  2876  000CC0                     __end_ofPL46:
  2877                           	callstack 0
  2878  000CC0                     PL52:
  2879                           	callstack 24
  2880  000CC0  6E71               	movwf	??_SIOMotor^0,c
  2881  000CC2  C071  F063         	movff	??_SIOMotor,LcNewString@new_s
  2882  000CC6  6A64               	clrf	(LcNewString@new_s+1)^0,c
  2883  000CC8  0012               	return	
  2884  000CCA                     __end_ofPL52:
  2885                           	callstack 0
  2886  000CCA                     PL74:
  2887                           	callstack 24
  2888  000CCA  0E01               	movlw	1
  2889  000CCC  6E68               	movwf	LcGotoXY@Row^0,c
  2890  000CCE  0C0C               	retlw	12
  2891  000CD0                     __end_ofPL74:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function _UgetScore *****************
  2895 ;; Defined at:
  2896 ;;		line 41 in file "UUsuaris.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  quin            1    wreg     unsigned char 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  quin            1    5[COMRAM] unsigned char 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      unsigned char 
  2903 ;; Registers used:
  2904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1
  2910 ;;      Params:         0       0       0
  2911 ;;      Locals:         1       0       0
  2912 ;;      Temps:          0       0       0
  2913 ;;      Totals:         1       0       0
  2914 ;;Total ram usage:        1 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; Hardware stack levels required when called: 2
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_SIOMotor
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text14
  2925  001A82                     __ptext14:
  2926                           	callstack 0
  2927  001A82                     _UgetScore:
  2928                           	callstack 27
  2929                           
  2930                           ;incstack = 0
  2931                           ;UgetScore@quin stored from wreg
  2932  001A82  6E60               	movwf	UgetScore@quin^0,c
  2933                           
  2934                           ;UUsuaris.c: 42:     return usuaris[quin].highScore;
  2935  001A84  5060               	movf	UgetScore@quin^0,w,c
  2936  001A86  EC12  F008         	call	PL26	;call to abstracted procedure
  2937  001A8A  50DF               	movf	indf2,w,c
  2938  001A8C  0012               	return		;funcret
  2939  001A8E                     __end_of_UgetScore:
  2940                           	callstack 0
  2941                           
  2942 ;; *************** function _UchangeScore *****************
  2943 ;; Defined at:
  2944 ;;		line 44 in file "UUsuaris.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  score           1    wreg     unsigned char 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  score           1    5[COMRAM] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1
  2958 ;;      Params:         0       0       0
  2959 ;;      Locals:         1       0       0
  2960 ;;      Temps:          0       0       0
  2961 ;;      Totals:         1       0       0
  2962 ;;Total ram usage:        1 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 2
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_SIOMotor
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text15
  2973  001B3E                     __ptext15:
  2974                           	callstack 0
  2975  001B3E                     _UchangeScore:
  2976                           	callstack 27
  2977                           
  2978                           ;incstack = 0
  2979                           ;UchangeScore@score stored from wreg
  2980  001B3E  6E60               	movwf	UchangeScore@score^0,c
  2981                           
  2982                           ;UUsuaris.c: 45:     usuaris[quin].highScore = score;
  2983  001B40  C060  F10B         	movff	UchangeScore@score,_usuaris+11
  2984  001B44  0012               	return		;funcret
  2985  001B46                     __end_of_UchangeScore:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _CToAobtenir *****************
  2989 ;; Defined at:
  2990 ;;		line 10 in file "CtoA.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      PTR unsigned char 
  2997 ;; Registers used:
  2998 ;;		wreg
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1
  3004 ;;      Params:         2       0       0
  3005 ;;      Locals:         0       0       0
  3006 ;;      Temps:          0       0       0
  3007 ;;      Totals:         2       0       0
  3008 ;;Total ram usage:        2 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 2
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_SIOMotor
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text16
  3019  001B8A                     __ptext16:
  3020                           	callstack 0
  3021  001B8A                     _CToAobtenir:
  3022                           	callstack 27
  3023                           
  3024                           ;CtoA.c: 11:     return stringScore;
  3025                           
  3026                           ;incstack = 0
  3027  001B8A  0E57               	movlw	_stringScore& (0+255)
  3028  001B8C  0012               	return		;funcret
  3029  001B8E                     __end_of_CToAobtenir:
  3030                           	callstack 0
  3031                           
  3032 ;; *************** function _CToAReset *****************
  3033 ;; Defined at:
  3034 ;;		line 17 in file "CtoA.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1
  3048 ;;      Params:         0       0       0
  3049 ;;      Locals:         0       0       0
  3050 ;;      Temps:          0       0       0
  3051 ;;      Totals:         0       0       0
  3052 ;;Total ram usage:        0 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; Hardware stack levels required when called: 2
  3055 ;; This function calls:
  3056 ;;		Nothing
  3057 ;; This function is called by:
  3058 ;;		_SIOMotor
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text17
  3063  001AEE                     __ptext17:
  3064                           	callstack 0
  3065  001AEE                     _CToAReset:
  3066                           	callstack 27
  3067                           
  3068                           ;CtoA.c: 18:     stringScore[0] = '0';
  3069                           
  3070                           ;incstack = 0
  3071  001AEE  0E30               	movlw	48
  3072  001AF0  6E57               	movwf	_stringScore^0,c
  3073                           
  3074                           ;CtoA.c: 19:     stringScore[1] = '0';
  3075  001AF2  6E58               	movwf	(_stringScore+1)^0,c
  3076                           
  3077                           ;CtoA.c: 20:     stringScore[2] = '0';
  3078  001AF4  6E59               	movwf	(_stringScore+2)^0,c
  3079  001AF6  0C30               	retlw	48	;funcret
  3080  001AF8                     __end_of_CToAReset:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _CToAHaAcabat *****************
  3084 ;; Defined at:
  3085 ;;		line 13 in file "CtoA.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      unsigned char 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1
  3099 ;;      Params:         0       0       0
  3100 ;;      Locals:         0       0       0
  3101 ;;      Temps:          0       0       0
  3102 ;;      Totals:         0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 2
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_SIOMotor
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text18
  3114  001B8E                     __ptext18:
  3115                           	callstack 0
  3116  001B8E                     _CToAHaAcabat:
  3117                           	callstack 27
  3118                           
  3119                           ;CtoA.c: 14:     return convertir;
  3120                           
  3121                           ;incstack = 0
  3122  001B8E  503E               	movf	_convertir^0,w,c
  3123  001B90  0012               	return		;funcret
  3124  001B92                     __end_of_CToAHaAcabat:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _CToAConverteix *****************
  3128 ;; Defined at:
  3129 ;;		line 7 in file "CtoA.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  numero          1    wreg     unsigned char 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  numero          1    5[COMRAM] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1
  3143 ;;      Params:         0       0       0
  3144 ;;      Locals:         1       0       0
  3145 ;;      Temps:          0       0       0
  3146 ;;      Totals:         1       0       0
  3147 ;;Total ram usage:        1 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 2
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_SIOMotor
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text19
  3158  001B46                     __ptext19:
  3159                           	callstack 0
  3160  001B46                     _CToAConverteix:
  3161                           	callstack 27
  3162                           
  3163                           ;incstack = 0
  3164                           ;CToAConverteix@numero stored from wreg
  3165  001B46  6E60               	movwf	CToAConverteix@numero^0,c
  3166                           
  3167                           ;CtoA.c: 8:     convertir = numero;
  3168  001B48  C060  F03E         	movff	CToAConverteix@numero,_convertir
  3169  001B4C  0012               	return		;funcret
  3170  001B4E                     __end_of_CToAConverteix:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _Minit *****************
  3174 ;; Defined at:
  3175 ;;		line 35 in file "MMenu.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1
  3189 ;;      Params:         0       0       0
  3190 ;;      Locals:         0       0       0
  3191 ;;      Temps:          0       0       0
  3192 ;;      Totals:         0       0       0
  3193 ;;Total ram usage:        0 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 3
  3196 ;; This function calls:
  3197 ;;		_TiGetTimer
  3198 ;; This function is called by:
  3199 ;;		_main
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text20
  3204  001B4E                     __ptext20:
  3205                           	callstack 0
  3206  001B4E                     _Minit:
  3207                           	callstack 27
  3208                           
  3209                           ;MMenu.c: 36:     timerMenu = TiGetTimer();
  3210                           
  3211                           ;incstack = 0
  3212  001B4E  EC41  F00C         	call	_TiGetTimer	;wreg free
  3213  001B52  6E23               	movwf	_timerMenu^0,c
  3214  001B54  0012               	return		;funcret
  3215  001B56                     __end_of_Minit:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function _MTMenu *****************
  3219 ;; Defined at:
  3220 ;;		line 40 in file "MMenu.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1
  3234 ;;      Params:         0       0       0
  3235 ;;      Locals:         0       0       0
  3236 ;;      Temps:          7       0       0
  3237 ;;      Totals:         7       0       0
  3238 ;;Total ram usage:        7 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; Hardware stack levels required when called: 8
  3241 ;; This function calls:
  3242 ;;		_GLCDMostraMenu
  3243 ;;		_HActualitzarHora
  3244 ;;		_HClearNouMinut
  3245 ;;		_HGetTime
  3246 ;;		_HJuguem
  3247 ;;		_HNoJuguem
  3248 ;;		_HNouMinut
  3249 ;;		_JJuguem
  3250 ;;		_JUsuari
  3251 ;;		_LcClear
  3252 ;;		_LcCursorOff
  3253 ;;		_LcCursorOn
  3254 ;;		_LcGotoXY
  3255 ;;		_LcLliure
  3256 ;;		_LcNewString
  3257 ;;		_LcPutChar
  3258 ;;		_LcPutFletxa
  3259 ;;		_LcScroll
  3260 ;;		_NoFerMenu
  3261 ;;		_SMSoff
  3262 ;;		_SMSon
  3263 ;;		_SiFerMenu
  3264 ;;		_TiGetTics
  3265 ;;		_TiResetTics
  3266 ;;		_UAfegirLletraUsername
  3267 ;;		_UCancelaNouUser
  3268 ;;		_UcreateUser
  3269 ;;		_UdelUser
  3270 ;;		_UeditUsername
  3271 ;;		_UgetNumUsuaris
  3272 ;;		_UgetUserName
  3273 ;; This function is called by:
  3274 ;;		_main
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text21
  3279  000036                     __ptext21:
  3280                           	callstack 0
  3281  000036                     _MTMenu:
  3282                           	callstack 22
  3283                           
  3284                           ;MMenu.c: 41:     static char state = 0;;MMenu.c: 42:     switch(state) {
  3285                           
  3286                           ;incstack = 0
  3287  000036  D389               	goto	l5191
  3288  000038                     l4581:
  3289                           
  3290                           ;MMenu.c: 44:    if (LcLliure()) {
  3291  000038  EC71  F00D         	call	_LcLliure	;wreg free
  3292  00003C  A0D8               	btfss	status,0,c
  3293  00003E  0012               	return	
  3294                           
  3295                           ;MMenu.c: 45:     LcClear();
  3296  000040  ECFA  F00C         	call	_LcClear	;wreg free
  3297                           
  3298                           ;MMenu.c: 46:     SiFerMenu();
  3299  000044  ECCF  F00D         	call	_SiFerMenu	;wreg free
  3300                           
  3301                           ;MMenu.c: 47:     GLCDMostraMenu(menuDalt);
  3302  000048  5025               	movf	_menuDalt^0,w,c
  3303  00004A  EC53  F00D         	call	_GLCDMostraMenu
  3304                           
  3305                           ;MMenu.c: 48:     NovaTecla = -1;
  3306  00004E  684A               	setf	_NovaTecla^0,c
  3307                           
  3308                           ;MMenu.c: 49:     SMSoff();
  3309  000050  ECD1  F00D         	call	_SMSoff	;wreg free
  3310                           
  3311                           ;MMenu.c: 50:     LcCursorOff();
  3312  000054  EC86  F00D         	call	_LcCursorOff	;wreg free
  3313                           
  3314                           ;MMenu.c: 51:     state = 1;
  3315  000058  0E01               	movlw	1
  3316  00005A  6E22               	movwf	MTMenu@state^0,c
  3317                           
  3318                           ;MMenu.c: 53:   break;
  3319                           
  3320                           ;MMenu.c: 52:    }
  3321  00005C  0C01               	retlw	1
  3322  00005E                     l4597:
  3323                           
  3324                           ;MMenu.c: 55:    if (NovaTecla == 2) {
  3325  00005E  0E02               	movlw	2
  3326  000060  184A               	xorwf	_NovaTecla^0,w,c
  3327  000062  E105               	bnz	l4605
  3328                           
  3329                           ;MMenu.c: 56:     if(menuDalt > 0) menuDalt--;
  3330  000064  5025               	movf	_menuDalt^0,w,c
  3331  000066  E001               	bz	l4603
  3332  000068  0625               	decf	_menuDalt^0,f,c
  3333  00006A                     l4603:
  3334                           
  3335                           ;MMenu.c: 57:     state = 0;
  3336  00006A  6A22               	clrf	MTMenu@state^0,c
  3337                           
  3338                           ;MMenu.c: 58:    }
  3339  00006C  0012               	return	
  3340  00006E                     l4605:
  3341  00006E  0E08               	movlw	8
  3342  000070  184A               	xorwf	_NovaTecla^0,w,c
  3343  000072  E105               	bnz	l4613
  3344                           
  3345                           ;MMenu.c: 60:     if(menuDalt < 5) menuDalt++;
  3346  000074  0E05               	movlw	5
  3347  000076  6025               	cpfslt	_menuDalt^0,c
  3348  000078  D7F8               	goto	l4603
  3349  00007A  2A25               	incf	_menuDalt^0,f,c
  3350  00007C  D7F6               	goto	l4603
  3351  00007E                     l4613:
  3352  00007E  0E0A               	movlw	10
  3353  000080  184A               	xorwf	_NovaTecla^0,w,c
  3354  000082  E111               	bnz	l4627
  3355  000084  0E05               	movlw	5
  3356  000086  1825               	xorwf	_menuDalt^0,w,c
  3357  000088  E10E               	bnz	l4627
  3358                           
  3359                           ;MMenu.c: 64:     LcClear();
  3360  00008A  ECFA  F00C         	call	_LcClear	;wreg free
  3361                           
  3362                           ;MMenu.c: 65:     NoFerMenu();
  3363  00008E  ECD3  F00D         	call	_NoFerMenu	;wreg free
  3364                           
  3365                           ;MMenu.c: 66:     LcNewString("Enter new time");
  3366  000092  0E72               	movlw	low STR_1
  3367  000094  6E63               	movwf	LcNewString@new_s^0,c
  3368  000096  0E1D               	movlw	high STR_1
  3369  000098  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3370  00009A  EC6B  F00D         	call	_LcNewString	;wreg free
  3371                           
  3372                           ;MMenu.c: 67:     NovaTecla = -1;
  3373  00009E  684A               	setf	_NovaTecla^0,c
  3374                           
  3375                           ;MMenu.c: 68:     state = 11;
  3376  0000A0  0E0B               	movlw	11
  3377  0000A2  6E22               	movwf	MTMenu@state^0,c
  3378                           
  3379                           ;MMenu.c: 69:    }
  3380  0000A4  0C0B               	retlw	11
  3381  0000A6                     l4627:
  3382  0000A6  0E0A               	movlw	10
  3383  0000A8  184A               	xorwf	_NovaTecla^0,w,c
  3384  0000AA  E109               	bnz	l4637
  3385  0000AC  5025               	movf	_menuDalt^0,w,c
  3386  0000AE  E107               	bnz	l4637
  3387                           
  3388                           ;MMenu.c: 71:     NoFerMenu();
  3389  0000B0  ECD3  F00D         	call	_NoFerMenu	;wreg free
  3390                           
  3391                           ;MMenu.c: 72:     LcClear();
  3392  0000B4  ECFA  F00C         	call	_LcClear	;wreg free
  3393                           
  3394                           ;MMenu.c: 73:     state = 12;
  3395  0000B8  0E0C               	movlw	12
  3396  0000BA  6E22               	movwf	MTMenu@state^0,c
  3397                           
  3398                           ;MMenu.c: 74:    }
  3399  0000BC  0C0C               	retlw	12
  3400  0000BE                     l4637:
  3401  0000BE  0E0A               	movlw	10
  3402  0000C0  184A               	xorwf	_NovaTecla^0,w,c
  3403  0000C2  E10A               	bnz	l4647
  3404  0000C4  0E04               	movlw	4
  3405  0000C6  1825               	xorwf	_menuDalt^0,w,c
  3406  0000C8  E107               	bnz	l4647
  3407                           
  3408                           ;MMenu.c: 76:     LcClear();
  3409  0000CA  ECFA  F00C         	call	_LcClear	;wreg free
  3410                           
  3411                           ;MMenu.c: 77:     NoFerMenu();
  3412  0000CE  ECD3  F00D         	call	_NoFerMenu	;wreg free
  3413  0000D2                     l4645:
  3414                           
  3415                           ;MMenu.c: 78:     state = 2;
  3416  0000D2  0E02               	movlw	2
  3417  0000D4  6E22               	movwf	MTMenu@state^0,c
  3418                           
  3419                           ;MMenu.c: 79:    }
  3420  0000D6  0C02               	retlw	2
  3421  0000D8                     l4647:
  3422  0000D8  0E0A               	movlw	10
  3423  0000DA  184A               	xorwf	_NovaTecla^0,w,c
  3424  0000DC  E10D               	bnz	l4659
  3425  0000DE  0E03               	movlw	3
  3426  0000E0  1825               	xorwf	_menuDalt^0,w,c
  3427  0000E2  E10A               	bnz	l4659
  3428  0000E4  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  3429  0000E8  0900               	iorlw	0
  3430  0000EA  E006               	bz	l4659
  3431                           
  3432                           ;MMenu.c: 81:     NoFerMenu();
  3433  0000EC  ECD3  F00D         	call	_NoFerMenu	;wreg free
  3434                           
  3435                           ;MMenu.c: 82:     menuDalt = 0;
  3436  0000F0  6A25               	clrf	_menuDalt^0,c
  3437  0000F2                     l4657:
  3438                           
  3439                           ;MMenu.c: 83:     state = 28;
  3440  0000F2  0E1C               	movlw	28
  3441  0000F4  6E22               	movwf	MTMenu@state^0,c
  3442                           
  3443                           ;MMenu.c: 84:    }
  3444  0000F6  0C1C               	retlw	28
  3445  0000F8                     l4659:
  3446  0000F8  0E0A               	movlw	10
  3447  0000FA  184A               	xorwf	_NovaTecla^0,w,c
  3448  0000FC  A4D8               	btfss	status,2,c
  3449  0000FE  0012               	return	
  3450  000100  0E02               	movlw	2
  3451  000102  1825               	xorwf	_menuDalt^0,w,c
  3452  000104  A4D8               	btfss	status,2,c
  3453  000106  0012               	return	
  3454  000108  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  3455  00010C  0900               	iorlw	0
  3456  00010E  B4D8               	btfsc	status,2,c
  3457  000110  0012               	return	
  3458                           
  3459                           ;MMenu.c: 86:     NoFerMenu();
  3460  000112  ECD3  F00D         	call	_NoFerMenu	;wreg free
  3461                           
  3462                           ;MMenu.c: 87:     menuDalt = 0;
  3463  000116  6A25               	clrf	_menuDalt^0,c
  3464                           
  3465                           ;MMenu.c: 88:     LcClear();
  3466  000118  ECFA  F00C         	call	_LcClear	;wreg free
  3467  00011C                     l4671:
  3468                           
  3469                           ;MMenu.c: 89:     state = 36;
  3470  00011C  0E24               	movlw	36
  3471  00011E  6E22               	movwf	MTMenu@state^0,c
  3472  000120  0C24               	retlw	36
  3473  000122                     l4673:
  3474                           
  3475                           ;MMenu.c: 93:    if (LcLliure()) {
  3476  000122  EC71  F00D         	call	_LcLliure	;wreg free
  3477  000126  A0D8               	btfss	status,0,c
  3478  000128  0012               	return	
  3479                           
  3480                           ;MMenu.c: 94:     LcNewString("Current Time");
  3481  00012A  0E90               	movlw	low STR_2
  3482  00012C  6E63               	movwf	LcNewString@new_s^0,c
  3483  00012E  0E1D               	movlw	high STR_2
  3484  000130  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3485  000132  EC6B  F00D         	call	_LcNewString	;wreg free
  3486                           
  3487                           ;MMenu.c: 95:     state = 3;
  3488  000136  0E03               	movlw	3
  3489  000138  6E22               	movwf	MTMenu@state^0,c
  3490  00013A  0C03               	retlw	3
  3491  00013C                     l4679:
  3492                           
  3493                           ;MMenu.c: 99:    if (HNouMinut() && NovaTecla != 11 && LcLliure()) {
  3494  00013C  EC47  F00D         	call	_HNouMinut	;wreg free
  3495  000140  E30B               	bnc	l4691
  3496  000142  0E0B               	movlw	11
  3497  000144  184A               	xorwf	_NovaTecla^0,w,c
  3498  000146  E008               	bz	l4691
  3499  000148  EC71  F00D         	call	_LcLliure	;wreg free
  3500  00014C  E305               	bnc	l4691
  3501                           
  3502                           ;MMenu.c: 100:     HClearNouMinut();
  3503  00014E  ECD9  F00D         	call	_HClearNouMinut	;wreg free
  3504                           
  3505                           ;MMenu.c: 101:     LcClear();
  3506  000152  ECFA  F00C         	call	_LcClear	;wreg free
  3507  000156  D7BD               	goto	l4645
  3508  000158                     l4691:
  3509  000158  0E0B               	movlw	11
  3510  00015A  184A               	xorwf	_NovaTecla^0,w,c
  3511  00015C  A4D8               	btfss	status,2,c
  3512  00015E  0012               	return	
  3513  000160  EC71  F00D         	call	_LcLliure	;wreg free
  3514  000164  E282               	bc	l4603
  3515  000166  0012               	return	
  3516  000168                     l4697:
  3517                           
  3518                           ;MMenu.c: 109:    if (LcLliure()) {
  3519  000168  EC71  F00D         	call	_LcLliure	;wreg free
  3520  00016C  A0D8               	btfss	status,0,c
  3521  00016E  0012               	return	
  3522                           
  3523                           ;MMenu.c: 110:     LcGotoXY(0,1);
  3524  000170  DB98               	call	PL32	;call to abstracted procedure
  3525  000172  ECD2  F009         	call	_LcGotoXY
  3526                           
  3527                           ;MMenu.c: 111:     LcNewString("(HH:MM): ");
  3528  000176  0EB5               	movlw	low STR_3
  3529  000178  6E63               	movwf	LcNewString@new_s^0,c
  3530  00017A  0E1D               	movlw	high STR_3
  3531  00017C  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3532  00017E  EC6B  F00D         	call	_LcNewString	;wreg free
  3533                           
  3534                           ;MMenu.c: 112:     LcCursorOn();
  3535  000182  EC81  F00D         	call	_LcCursorOn	;wreg free
  3536                           
  3537                           ;MMenu.c: 113:     state = 5;
  3538  000186  0E05               	movlw	5
  3539  000188  6E22               	movwf	MTMenu@state^0,c
  3540  00018A  0C05               	retlw	5
  3541  00018C                     l4707:
  3542                           
  3543                           ;MMenu.c: 117:    if (NovaTecla > -1) {
  3544  00018C  BE4A               	btfsc	_NovaTecla^0,7,c
  3545  00018E  0012               	return	
  3546                           
  3547                           ;MMenu.c: 118:     horaTmp[0] = NovaTecla+48;
  3548  000190  504A               	movf	_NovaTecla^0,w,c
  3549  000192  0F30               	addlw	48
  3550  000194  6E30               	movwf	_horaTmp^0,c
  3551                           
  3552                           ;MMenu.c: 119:     LcPutChar(horaTmp[0]);
  3553  000196  5030               	movf	_horaTmp^0,w,c
  3554  000198  EC2D  F00B         	call	_LcPutChar
  3555                           
  3556                           ;MMenu.c: 120:     NovaTecla = -1;
  3557  00019C  684A               	setf	_NovaTecla^0,c
  3558                           
  3559                           ;MMenu.c: 121:     state = 6;
  3560  00019E  0E06               	movlw	6
  3561  0001A0  6E22               	movwf	MTMenu@state^0,c
  3562  0001A2  0C06               	retlw	6
  3563  0001A4                     l4717:
  3564                           
  3565                           ;MMenu.c: 125:    if (NovaTecla > -1) {
  3566  0001A4  BE4A               	btfsc	_NovaTecla^0,7,c
  3567  0001A6  0012               	return	
  3568                           
  3569                           ;MMenu.c: 126:     horaTmp[1] = NovaTecla+48;
  3570  0001A8  504A               	movf	_NovaTecla^0,w,c
  3571  0001AA  0F30               	addlw	48
  3572  0001AC  6E31               	movwf	(_horaTmp+1)^0,c
  3573                           
  3574                           ;MMenu.c: 127:     LcPutChar(horaTmp[1]);
  3575  0001AE  5031               	movf	(_horaTmp+1)^0,w,c
  3576  0001B0  EC2D  F00B         	call	_LcPutChar
  3577                           
  3578                           ;MMenu.c: 128:     NovaTecla = -1;
  3579  0001B4  684A               	setf	_NovaTecla^0,c
  3580                           
  3581                           ;MMenu.c: 129:     state = 7;
  3582  0001B6  0E07               	movlw	7
  3583  0001B8  6E22               	movwf	MTMenu@state^0,c
  3584  0001BA  0C07               	retlw	7
  3585  0001BC                     l4727:
  3586                           
  3587                           ;MMenu.c: 133:    LcPutChar(':');
  3588  0001BC  0E3A               	movlw	58
  3589  0001BE  EC2D  F00B         	call	_LcPutChar
  3590                           
  3591                           ;MMenu.c: 134:    state = 8;
  3592  0001C2  0E08               	movlw	8
  3593  0001C4  6E22               	movwf	MTMenu@state^0,c
  3594                           
  3595                           ;MMenu.c: 135:   break;
  3596  0001C6  0C08               	retlw	8
  3597  0001C8                     l4731:
  3598                           
  3599                           ;MMenu.c: 137:    if (NovaTecla > -1) {
  3600  0001C8  BE4A               	btfsc	_NovaTecla^0,7,c
  3601  0001CA  0012               	return	
  3602                           
  3603                           ;MMenu.c: 138:     horaTmp[2] = NovaTecla+48;
  3604  0001CC  504A               	movf	_NovaTecla^0,w,c
  3605  0001CE  0F30               	addlw	48
  3606  0001D0  6E32               	movwf	(_horaTmp+2)^0,c
  3607                           
  3608                           ;MMenu.c: 139:     LcPutChar(horaTmp[2]);
  3609  0001D2  5032               	movf	(_horaTmp+2)^0,w,c
  3610  0001D4  EC2D  F00B         	call	_LcPutChar
  3611                           
  3612                           ;MMenu.c: 140:     NovaTecla = -1;
  3613  0001D8  684A               	setf	_NovaTecla^0,c
  3614                           
  3615                           ;MMenu.c: 141:     state = 9;
  3616  0001DA  0E09               	movlw	9
  3617  0001DC  6E22               	movwf	MTMenu@state^0,c
  3618  0001DE  0C09               	retlw	9
  3619  0001E0                     l4741:
  3620                           
  3621                           ;MMenu.c: 145:    if (NovaTecla > -1) {
  3622  0001E0  BE4A               	btfsc	_NovaTecla^0,7,c
  3623  0001E2  0012               	return	
  3624                           
  3625                           ;MMenu.c: 146:     horaTmp[3] = NovaTecla+48;
  3626  0001E4  504A               	movf	_NovaTecla^0,w,c
  3627  0001E6  0F30               	addlw	48
  3628  0001E8  6E33               	movwf	(_horaTmp+3)^0,c
  3629                           
  3630                           ;MMenu.c: 147:     LcPutChar(horaTmp[3]);
  3631  0001EA  5033               	movf	(_horaTmp+3)^0,w,c
  3632  0001EC  EC2D  F00B         	call	_LcPutChar
  3633                           
  3634                           ;MMenu.c: 148:     NovaTecla = -1;
  3635  0001F0  684A               	setf	_NovaTecla^0,c
  3636                           
  3637                           ;MMenu.c: 149:     state = 10;
  3638  0001F2  0E0A               	movlw	10
  3639  0001F4  6E22               	movwf	MTMenu@state^0,c
  3640  0001F6  0C0A               	retlw	10
  3641  0001F8                     l4751:
  3642                           
  3643                           ;MMenu.c: 153:    if (NovaTecla == 10) {
  3644  0001F8  0E0A               	movlw	10
  3645  0001FA  184A               	xorwf	_NovaTecla^0,w,c
  3646  0001FC  A4D8               	btfss	status,2,c
  3647  0001FE  0012               	return	
  3648                           
  3649                           ;MMenu.c: 154:     HActualitzarHora(horaTmp);
  3650  000200  0E30               	movlw	low _horaTmp
  3651  000202  6E60               	movwf	HActualitzarHora@nova^0,c
  3652  000204  EC27  F00C         	call	_HActualitzarHora	;wreg free
  3653                           
  3654                           ;MMenu.c: 155:     NovaTecla = -1;
  3655  000208  684A               	setf	_NovaTecla^0,c
  3656                           
  3657                           ;MMenu.c: 156:     LcCursorOff();
  3658  00020A  EC86  F00D         	call	_LcCursorOff	;wreg free
  3659  00020E  D72D               	goto	l4603
  3660  000210                     l4761:
  3661                           
  3662                           ;MMenu.c: 161:    if (LcLliure()) {
  3663  000210  EC71  F00D         	call	_LcLliure	;wreg free
  3664  000214  A0D8               	btfss	status,0,c
  3665  000216  0012               	return	
  3666                           
  3667                           ;MMenu.c: 162:     LcGotoXY(0,1);
  3668  000218  DB44               	call	PL32	;call to abstracted procedure
  3669  00021A  ECD2  F009         	call	_LcGotoXY
  3670                           
  3671                           ;MMenu.c: 163:     LcNewString(HGetTime());
  3672  00021E  ECD7  F00D         	call	_HGetTime	;wreg free
  3673  000222  6E71               	movwf	??_MTMenu^0,c
  3674  000224  C071  F063         	movff	??_MTMenu,LcNewString@new_s
  3675  000228  6A64               	clrf	(LcNewString@new_s+1)^0,c
  3676  00022A  EC6B  F00D         	call	_LcNewString	;wreg free
  3677                           
  3678                           ;MMenu.c: 164:     state = 4;
  3679  00022E  0E04               	movlw	4
  3680  000230  6E22               	movwf	MTMenu@state^0,c
  3681  000232  0C04               	retlw	4
  3682  000234                     l4769:
  3683                           
  3684                           ;MMenu.c: 168:    if (LcLliure()) {
  3685  000234  EC71  F00D         	call	_LcLliure	;wreg free
  3686  000238  A0D8               	btfss	status,0,c
  3687  00023A  0012               	return	
  3688                           
  3689                           ;MMenu.c: 169:     LcNewString("1. Select User");
  3690  00023C  0E81               	movlw	low STR_4
  3691  00023E  6E63               	movwf	LcNewString@new_s^0,c
  3692  000240  0E1D               	movlw	high STR_4
  3693  000242  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3694  000244  EC6B  F00D         	call	_LcNewString	;wreg free
  3695                           
  3696                           ;MMenu.c: 170:     state = 13;
  3697  000248  0E0D               	movlw	13
  3698  00024A  6E22               	movwf	MTMenu@state^0,c
  3699  00024C  0C0D               	retlw	13
  3700  00024E                     l4775:
  3701                           
  3702                           ;MMenu.c: 174:    if (NovaTecla == 1 && UgetNumUsuaris() >= 1) {
  3703  00024E  044A               	decf	_NovaTecla^0,w,c
  3704  000250  E10B               	bnz	l4787
  3705  000252  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  3706  000256  0900               	iorlw	0
  3707  000258  E007               	bz	l4787
  3708                           
  3709                           ;MMenu.c: 175:     LcClear();
  3710  00025A  ECFA  F00C         	call	_LcClear	;wreg free
  3711                           
  3712                           ;MMenu.c: 176:     menuDalt=0;
  3713  00025E  6A25               	clrf	_menuDalt^0,c
  3714                           
  3715                           ;MMenu.c: 177:     NovaTecla = -1;
  3716  000260  684A               	setf	_NovaTecla^0,c
  3717  000262                     l4785:
  3718                           
  3719                           ;MMenu.c: 178:     state = 20;
  3720  000262  0E14               	movlw	20
  3721  000264  6E22               	movwf	MTMenu@state^0,c
  3722                           
  3723                           ;MMenu.c: 179:    }
  3724  000266  0C14               	retlw	20
  3725  000268                     l4787:
  3726  000268  0E02               	movlw	2
  3727  00026A  184A               	xorwf	_NovaTecla^0,w,c
  3728  00026C  A4D8               	btfss	status,2,c
  3729  00026E  0012               	return	
  3730                           
  3731                           ;MMenu.c: 181:     NovaTecla = -1;
  3732  000270  684A               	setf	_NovaTecla^0,c
  3733                           
  3734                           ;MMenu.c: 182:     SMSon();
  3735  000272  ECBF  F00D         	call	_SMSon	;wreg free
  3736                           
  3737                           ;MMenu.c: 183:     LcCursorOn();
  3738  000276  EC81  F00D         	call	_LcCursorOn	;wreg free
  3739                           
  3740                           ;MMenu.c: 184:     LcClear();
  3741  00027A  ECFA  F00C         	call	_LcClear	;wreg free
  3742                           
  3743                           ;MMenu.c: 185:     LcNewString("Enter name:");
  3744  00027E  0E9D               	movlw	low STR_5
  3745  000280  6E63               	movwf	LcNewString@new_s^0,c
  3746  000282  0E1D               	movlw	high STR_5
  3747  000284  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3748  000286  EC6B  F00D         	call	_LcNewString	;wreg free
  3749                           
  3750                           ;MMenu.c: 186:     state = 16;
  3751  00028A  0E10               	movlw	16
  3752  00028C  6E22               	movwf	MTMenu@state^0,c
  3753  00028E  0C10               	retlw	16
  3754  000290                     l4801:
  3755                           
  3756                           ;MMenu.c: 190:    if (LcLliure() && novaLletra > 47 && NovaTecla < 10 && UgetNumUsuaris(
      +                          ) < 20) {
  3757  000290  EC71  F00D         	call	_LcLliure	;wreg free
  3758  000294  E319               	bnc	l4817
  3759  000296  5049               	movf	_novaLletra^0,w,c
  3760  000298  0A80               	xorlw	128
  3761  00029A  0F50               	addlw	-176
  3762  00029C  E315               	bnc	l4817
  3763  00029E  504A               	movf	_NovaTecla^0,w,c
  3764  0002A0  0A80               	xorlw	128
  3765  0002A2  0F76               	addlw	-138
  3766  0002A4  E211               	bc	l4817
  3767  0002A6  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  3768  0002AA  6E71               	movwf	??_MTMenu^0,c
  3769  0002AC  0E14               	movlw	20
  3770  0002AE  6071               	cpfslt	??_MTMenu^0,c
  3771  0002B0  D00B               	goto	l4817
  3772                           
  3773                           ;MMenu.c: 191:     LcPutChar(novaLletra);
  3774  0002B2  5049               	movf	_novaLletra^0,w,c
  3775  0002B4  EC2D  F00B         	call	_LcPutChar
  3776                           
  3777                           ;MMenu.c: 192:     NovaTecla = -1;
  3778  0002B8  684A               	setf	_NovaTecla^0,c
  3779                           
  3780                           ;MMenu.c: 193:     UAfegirLletraUsername(novaLletra);
  3781  0002BA  5049               	movf	_novaLletra^0,w,c
  3782  0002BC  ECA9  F00B         	call	_UAfegirLletraUsername
  3783                           
  3784                           ;MMenu.c: 194:     novaLletra = -1;
  3785  0002C0  6849               	setf	_novaLletra^0,c
  3786                           
  3787                           ;MMenu.c: 195:     state = 19;
  3788  0002C2  0E13               	movlw	19
  3789  0002C4  6E22               	movwf	MTMenu@state^0,c
  3790                           
  3791                           ;MMenu.c: 196:    }
  3792  0002C6  0C13               	retlw	19
  3793  0002C8                     l4817:
  3794  0002C8  0E0A               	movlw	10
  3795  0002CA  184A               	xorwf	_NovaTecla^0,w,c
  3796  0002CC  E117               	bnz	l4831
  3797  0002CE  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  3798  0002D2  6E71               	movwf	??_MTMenu^0,c
  3799  0002D4  0E14               	movlw	20
  3800  0002D6  6071               	cpfslt	??_MTMenu^0,c
  3801  0002D8  D011               	goto	l4831
  3802                           
  3803                           ;MMenu.c: 198:     LcCursorOff();
  3804  0002DA  EC86  F00D         	call	_LcCursorOff	;wreg free
  3805                           
  3806                           ;MMenu.c: 199:     UAfegirLletraUsername('\0');
  3807  0002DE  0E00               	movlw	0
  3808  0002E0  ECA9  F00B         	call	_UAfegirLletraUsername
  3809                           
  3810                           ;MMenu.c: 200:     SMSoff();
  3811  0002E4  ECD1  F00D         	call	_SMSoff	;wreg free
  3812                           
  3813                           ;MMenu.c: 201:     LcClear();
  3814  0002E8  ECFA  F00C         	call	_LcClear	;wreg free
  3815                           
  3816                           ;MMenu.c: 202:     menuDalt = UgetNumUsuaris()-1;
  3817  0002EC  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  3818  0002F0  6E71               	movwf	??_MTMenu^0,c
  3819  0002F2  0471               	decf	??_MTMenu^0,w,c
  3820  0002F4  6E25               	movwf	_menuDalt^0,c
  3821  0002F6                     l4829:
  3822                           
  3823                           ;MMenu.c: 203:     state = 24;
  3824  0002F6  0E18               	movlw	24
  3825  0002F8  6E22               	movwf	MTMenu@state^0,c
  3826                           
  3827                           ;MMenu.c: 204:    }
  3828  0002FA  0C18               	retlw	24
  3829  0002FC                     l4831:
  3830  0002FC  0E0B               	movlw	11
  3831  0002FE  184A               	xorwf	_NovaTecla^0,w,c
  3832  000300  E006               	bz	u4500
  3833  000302  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  3834  000306  6E71               	movwf	??_MTMenu^0,c
  3835  000308  0E13               	movlw	19
  3836  00030A  6471               	cpfsgt	??_MTMenu^0,c
  3837  00030C  0C13               	retlw	19
  3838  00030E                     u4500:
  3839                           
  3840                           ;MMenu.c: 206:     LcCursorOff();
  3841  00030E  EC86  F00D         	call	_LcCursorOff	;wreg free
  3842                           
  3843                           ;MMenu.c: 207:     UCancelaNouUser();
  3844  000312  ECCD  F00D         	call	_UCancelaNouUser	;wreg free
  3845  000316                     l4839:
  3846                           
  3847                           ;MMenu.c: 208:     menuDalt = 0;
  3848  000316  6A25               	clrf	_menuDalt^0,c
  3849  000318  D6A8               	goto	l4603
  3850  00031A                     l4843:
  3851                           
  3852                           ;MMenu.c: 213:    if (LcLliure()) {
  3853  00031A  EC71  F00D         	call	_LcLliure	;wreg free
  3854  00031E  A0D8               	btfss	status,0,c
  3855  000320  0012               	return	
  3856                           
  3857                           ;MMenu.c: 214:     LcClear();
  3858  000322  ECFA  F00C         	call	_LcClear	;wreg free
  3859                           
  3860                           ;MMenu.c: 215:     LcPutFletxa();
  3861  000326  EC5F  F00D         	call	_LcPutFletxa	;wreg free
  3862                           
  3863                           ;MMenu.c: 216:     LcGotoXY(3,0);
  3864  00032A  6A68               	clrf	LcGotoXY@Row^0,c
  3865  00032C  0E03               	movlw	3
  3866  00032E  ECD2  F009         	call	_LcGotoXY
  3867                           
  3868                           ;MMenu.c: 217:     LcNewString(UgetUserName(menuDalt));
  3869  000332  5025               	movf	_menuDalt^0,w,c
  3870  000334  EC1E  F00D         	call	_UgetUserName
  3871  000338  DA8A               	call	PL8	;call to abstracted procedure
  3872  00033A  EC6B  F00D         	call	_LcNewString	;wreg free
  3873                           
  3874                           ;MMenu.c: 218:     NovaTecla = -1;
  3875  00033E  684A               	setf	_NovaTecla^0,c
  3876                           
  3877                           ;MMenu.c: 219:     state = 23;
  3878  000340  0E17               	movlw	23
  3879  000342  6E22               	movwf	MTMenu@state^0,c
  3880  000344  0C17               	retlw	23
  3881  000346                     l4853:
  3882                           
  3883                           ;MMenu.c: 223:    if (LcLliure()) {
  3884  000346  EC71  F00D         	call	_LcLliure	;wreg free
  3885  00034A  A0D8               	btfss	status,0,c
  3886  00034C  0012               	return	
  3887  00034E                     u4520:
  3888                           
  3889                           ;MMenu.c: 224:     state = 17;
  3890  00034E  0E11               	movlw	17
  3891  000350  6E22               	movwf	MTMenu@state^0,c
  3892  000352  0C11               	retlw	17
  3893  000354                     l4857:
  3894                           
  3895                           ;MMenu.c: 228:    if (LcLliure()) {
  3896  000354  EC71  F00D         	call	_LcLliure	;wreg free
  3897  000358  A0D8               	btfss	status,0,c
  3898  00035A  0012               	return	
  3899                           
  3900                           ;MMenu.c: 229:     NovaTecla = -1;
  3901  00035C  684A               	setf	_NovaTecla^0,c
  3902                           
  3903                           ;MMenu.c: 230:     LcNewString(UgetUserName(menuDalt));
  3904  00035E  5025               	movf	_menuDalt^0,w,c
  3905  000360  EC1E  F00D         	call	_UgetUserName
  3906  000364  DA74               	call	PL8	;call to abstracted procedure
  3907  000366  EC6B  F00D         	call	_LcNewString	;wreg free
  3908                           
  3909                           ;MMenu.c: 231:     JJuguem(menuDalt);
  3910  00036A  5025               	movf	_menuDalt^0,w,c
  3911  00036C  ECAB  F00D         	call	_JJuguem
  3912                           
  3913                           ;MMenu.c: 232:     HJuguem();
  3914  000370  EC4D  F00D         	call	_HJuguem	;wreg free
  3915                           
  3916                           ;MMenu.c: 233:     state = 25;
  3917  000374  0E19               	movlw	25
  3918  000376  6E22               	movwf	MTMenu@state^0,c
  3919  000378  0C19               	retlw	25
  3920  00037A                     l4869:
  3921                           
  3922                           ;MMenu.c: 237:    if (LcLliure()) {
  3923  00037A  EC71  F00D         	call	_LcLliure	;wreg free
  3924  00037E  A0D8               	btfss	status,0,c
  3925  000380  0012               	return	
  3926                           
  3927                           ;MMenu.c: 238:     LcGotoXY(0,1);
  3928  000382  DA8F               	call	PL32	;call to abstracted procedure
  3929  000384  ECD2  F009         	call	_LcGotoXY
  3930                           
  3931                           ;MMenu.c: 239:     LcNewString("2. New User");
  3932  000388  0EA9               	movlw	low STR_6
  3933  00038A  6E63               	movwf	LcNewString@new_s^0,c
  3934  00038C  0E1D               	movlw	high STR_6
  3935  00038E  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3936  000390  EC6B  F00D         	call	_LcNewString	;wreg free
  3937                           
  3938                           ;MMenu.c: 240:     NovaTecla = -1;
  3939  000394  684A               	setf	_NovaTecla^0,c
  3940                           
  3941                           ;MMenu.c: 241:     state = 14;
  3942  000396  0E0E               	movlw	14
  3943  000398  6E22               	movwf	MTMenu@state^0,c
  3944  00039A  0C0E               	retlw	14
  3945  00039C                     l4879:
  3946                           
  3947                           ;MMenu.c: 245:    if (LcLliure()) {
  3948  00039C  EC71  F00D         	call	_LcLliure	;wreg free
  3949  0003A0  A0D8               	btfss	status,0,c
  3950  0003A2  0012               	return	
  3951                           
  3952                           ;MMenu.c: 246:     LcGotoXY(0,1);
  3953  0003A4  DA7E               	call	PL32	;call to abstracted procedure
  3954  0003A6  ECD2  F009         	call	_LcGotoXY
  3955                           
  3956                           ;MMenu.c: 247:     pos = 0;
  3957  0003AA  6A24               	clrf	_pos^0,c
  3958                           
  3959                           ;MMenu.c: 248:     UcreateUser();
  3960  0003AC  ECCB  F00D         	call	_UcreateUser	;wreg free
  3961  0003B0  D7CE               	goto	u4520
  3962  0003B2                     l4889:
  3963                           
  3964                           ;MMenu.c: 253:    if (NovaTecla == 8) {
  3965  0003B2  0E08               	movlw	8
  3966  0003B4  184A               	xorwf	_NovaTecla^0,w,c
  3967  0003B6  E109               	bnz	l4897
  3968                           
  3969                           ;MMenu.c: 254:     if (menuDalt<UgetNumUsuaris()-1) menuDalt++;
  3970  0003B8  6871               	setf	??_MTMenu^0,c
  3971  0003BA  6872               	setf	(??_MTMenu+1)^0,c
  3972  0003BC  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  3973  0003C0  DA4B               	call	PL10	;call to abstracted procedure
  3974  0003C2  E301 D74E          	bc	l4785
  3975  0003C6  2A25               	incf	_menuDalt^0,f,c
  3976  0003C8  D74C               	goto	l4785
  3977  0003CA                     l4897:
  3978  0003CA  0E02               	movlw	2
  3979  0003CC  184A               	xorwf	_NovaTecla^0,w,c
  3980  0003CE  E105               	bnz	l4905
  3981                           
  3982                           ;MMenu.c: 258:     if (menuDalt>0) menuDalt--;
  3983  0003D0  5025               	movf	_menuDalt^0,w,c
  3984  0003D2  E101 D746          	bz	l4785
  3985  0003D6  0625               	decf	_menuDalt^0,f,c
  3986  0003D8  D744               	goto	l4785
  3987  0003DA                     l4905:
  3988  0003DA  0E0B               	movlw	11
  3989  0003DC  184A               	xorwf	_NovaTecla^0,w,c
  3990  0003DE  E102               	bnz	l4909
  3991                           
  3992                           ;MMenu.c: 262:     NovaTecla = -1;
  3993  0003E0  684A               	setf	_NovaTecla^0,c
  3994                           
  3995                           ;MMenu.c: 263:     menuDalt = 0;
  3996                           
  3997                           ;MMenu.c: 264:     state = 0;
  3998                           
  3999                           ;MMenu.c: 265:    }
  4000  0003E2  D268               	goto	PL72	;call to abstracted procedure
  4001  0003E4                     l4909:
  4002  0003E4  0E0A               	movlw	10
  4003  0003E6  184A               	xorwf	_NovaTecla^0,w,c
  4004  0003E8  A4D8               	btfss	status,2,c
  4005  0003EA  0012               	return	
  4006                           
  4007                           ;MMenu.c: 267:     LcClear();
  4008  0003EC  ECFA  F00C         	call	_LcClear	;wreg free
  4009  0003F0  D782               	goto	l4829
  4010  0003F2                     l4915:
  4011                           
  4012                           ;MMenu.c: 272:    if (LcLliure()) {
  4013  0003F2  EC71  F00D         	call	_LcLliure	;wreg free
  4014  0003F6  A0D8               	btfss	status,0,c
  4015  0003F8  0012               	return	
  4016                           
  4017                           ;MMenu.c: 273:     LcGotoXY(3,1);
  4018  0003FA  DA56               	call	PL68	;call to abstracted procedure
  4019  0003FC  ECD2  F009         	call	_LcGotoXY
  4020                           
  4021                           ;MMenu.c: 274:     if(menuDalt+2 <= UgetNumUsuaris()) LcNewString(UgetUserName(menuDalt+
      +                          1));
  4022  000400  DA48               	call	PL28	;call to abstracted procedure
  4023  000402  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  4024  000406  DA3A               	call	PL20	;call to abstracted procedure
  4025  000408  E306               	bnc	l4923
  4026  00040A  2825               	incf	_menuDalt^0,w,c
  4027  00040C  EC1E  F00D         	call	_UgetUserName
  4028  000410  DA1E               	call	PL8	;call to abstracted procedure
  4029  000412  EC6B  F00D         	call	_LcNewString	;wreg free
  4030  000416                     l4923:
  4031                           
  4032                           ;MMenu.c: 275:     state = 21;
  4033  000416  0E15               	movlw	21
  4034  000418  6E22               	movwf	MTMenu@state^0,c
  4035  00041A  0C15               	retlw	21
  4036  00041C                     l4925:
  4037                           
  4038                           ;MMenu.c: 279:    if (JUsuari() == -1 && LcLliure()) {
  4039  00041C  ECD5  F00D         	call	_JUsuari	;wreg free
  4040  000420  0AFF               	xorlw	255
  4041  000422  A4D8               	btfss	status,2,c
  4042  000424  0012               	return	
  4043  000426  EC71  F00D         	call	_LcLliure	;wreg free
  4044  00042A  A0D8               	btfss	status,0,c
  4045  00042C  0012               	return	
  4046                           
  4047                           ;MMenu.c: 280:     HNoJuguem();
  4048  00042E  ECE5  F00D         	call	_HNoJuguem	;wreg free
  4049                           
  4050                           ;MMenu.c: 281:     LcGotoXY(0,0);
  4051  000432  0E00               	movlw	0
  4052  000434  6A68               	clrf	LcGotoXY@Row^0,c
  4053  000436  ECD2  F009         	call	_LcGotoXY
  4054                           
  4055                           ;MMenu.c: 282:     LcNewString(Score);
  4056  00043A  0E6B               	movlw	low _Score
  4057  00043C  6E63               	movwf	LcNewString@new_s^0,c
  4058  00043E  0E1D               	movlw	high _Score
  4059  000440  6E64               	movwf	(LcNewString@new_s+1)^0,c
  4060  000442  EC6B  F00D         	call	_LcNewString	;wreg free
  4061                           
  4062                           ;MMenu.c: 283:     state = 26;
  4063  000446  0E1A               	movlw	26
  4064  000448  6E22               	movwf	MTMenu@state^0,c
  4065  00044A  0C1A               	retlw	26
  4066  00044C                     l4937:
  4067                           
  4068                           ;MMenu.c: 287:    if (LcLliure()) {
  4069  00044C  EC71  F00D         	call	_LcLliure	;wreg free
  4070  000450  A0D8               	btfss	status,0,c
  4071  000452  0012               	return	
  4072                           
  4073                           ;MMenu.c: 288:     LcGotoXY(0,1);
  4074  000454  DA26               	call	PL32	;call to abstracted procedure
  4075  000456  ECD2  F009         	call	_LcGotoXY
  4076                           
  4077                           ;MMenu.c: 289:     LcNewString(highScore);
  4078  00045A  0E9B               	movlw	low _highScore
  4079  00045C  6E63               	movwf	LcNewString@new_s^0,c
  4080  00045E  6A64               	clrf	(LcNewString@new_s+1)^0,c
  4081  000460  EC6B  F00D         	call	_LcNewString	;wreg free
  4082                           
  4083                           ;MMenu.c: 290:     NovaTecla = -1;
  4084  000464  684A               	setf	_NovaTecla^0,c
  4085                           
  4086                           ;MMenu.c: 291:     state = 27;
  4087  000466  0E1B               	movlw	27
  4088  000468  6E22               	movwf	MTMenu@state^0,c
  4089  00046A  0C1B               	retlw	27
  4090  00046C                     l4947:
  4091                           
  4092                           ;MMenu.c: 295:    if (LcLliure() && NovaTecla == 10) {
  4093  00046C  EC71  F00D         	call	_LcLliure	;wreg free
  4094  000470  A0D8               	btfss	status,0,c
  4095  000472  0012               	return	
  4096  000474  0E0A               	movlw	10
  4097  000476  184A               	xorwf	_NovaTecla^0,w,c
  4098  000478  A4D8               	btfss	status,2,c
  4099  00047A  0012               	return	
  4100  00047C                     u4680:
  4101                           
  4102                           ;MMenu.c: 296:     menuDalt = 0;
  4103                           
  4104                           ;MMenu.c: 297:     state = 0;
  4105  00047C  D21B               	goto	PL72	;call to abstracted procedure
  4106  00047E                     l4953:
  4107                           
  4108                           ;MMenu.c: 301:    LcClear();
  4109  00047E  ECFA  F00C         	call	_LcClear	;wreg free
  4110                           
  4111                           ;MMenu.c: 302:    LcPutFletxa();
  4112  000482  EC5F  F00D         	call	_LcPutFletxa	;wreg free
  4113                           
  4114                           ;MMenu.c: 303:    LcGotoXY(3,0);
  4115  000486  6A68               	clrf	LcGotoXY@Row^0,c
  4116  000488  0E03               	movlw	3
  4117  00048A  ECD2  F009         	call	_LcGotoXY
  4118                           
  4119                           ;MMenu.c: 304:    NovaTecla = -1;
  4120  00048E  684A               	setf	_NovaTecla^0,c
  4121                           
  4122                           ;MMenu.c: 305:    LcNewString(UgetUserName(menuDalt));
  4123  000490  5025               	movf	_menuDalt^0,w,c
  4124  000492  EC1E  F00D         	call	_UgetUserName
  4125  000496  D9DB               	call	PL8	;call to abstracted procedure
  4126  000498  EC6B  F00D         	call	_LcNewString	;wreg free
  4127                           
  4128                           ;MMenu.c: 306:    state = 29;
  4129  00049C  0E1D               	movlw	29
  4130  00049E  6E22               	movwf	MTMenu@state^0,c
  4131                           
  4132                           ;MMenu.c: 307:   break;
  4133  0004A0  0C1D               	retlw	29
  4134  0004A2                     l4961:
  4135                           
  4136                           ;MMenu.c: 309:    if (LcLliure()) {
  4137  0004A2  EC71  F00D         	call	_LcLliure	;wreg free
  4138  0004A6  A0D8               	btfss	status,0,c
  4139  0004A8  0012               	return	
  4140                           
  4141                           ;MMenu.c: 310:     LcGotoXY(3,1);
  4142  0004AA  D9FE               	call	PL68	;call to abstracted procedure
  4143  0004AC  ECD2  F009         	call	_LcGotoXY
  4144                           
  4145                           ;MMenu.c: 311:     if(menuDalt+2 <= UgetNumUsuaris()) LcNewString(UgetUserName(menuDalt+
      +                          1));
  4146  0004B0  D9F0               	call	PL28	;call to abstracted procedure
  4147  0004B2  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  4148  0004B6  D9E2               	call	PL20	;call to abstracted procedure
  4149  0004B8  E306               	bnc	l4969
  4150  0004BA  2825               	incf	_menuDalt^0,w,c
  4151  0004BC  EC1E  F00D         	call	_UgetUserName
  4152  0004C0  D9C6               	call	PL8	;call to abstracted procedure
  4153  0004C2  EC6B  F00D         	call	_LcNewString	;wreg free
  4154  0004C6                     l4969:
  4155                           
  4156                           ;MMenu.c: 312:     state = 30;
  4157  0004C6  0E1E               	movlw	30
  4158  0004C8  6E22               	movwf	MTMenu@state^0,c
  4159  0004CA  0C1E               	retlw	30
  4160  0004CC                     l4971:
  4161                           
  4162                           ;MMenu.c: 316:    if (NovaTecla == 8 && LcLliure()) {
  4163  0004CC  0E08               	movlw	8
  4164  0004CE  184A               	xorwf	_NovaTecla^0,w,c
  4165  0004D0  E10C               	bnz	l4981
  4166  0004D2  EC71  F00D         	call	_LcLliure	;wreg free
  4167  0004D6  E309               	bnc	l4981
  4168                           
  4169                           ;MMenu.c: 317:     if(menuDalt<UgetNumUsuaris()-1)menuDalt++;
  4170  0004D8  6871               	setf	??_MTMenu^0,c
  4171  0004DA  6872               	setf	(??_MTMenu+1)^0,c
  4172  0004DC  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  4173  0004E0  D9BB               	call	PL10	;call to abstracted procedure
  4174  0004E2  E301 D606          	bc	l4657
  4175  0004E6  2A25               	incf	_menuDalt^0,f,c
  4176  0004E8  D604               	goto	l4657
  4177  0004EA                     l4981:
  4178  0004EA  0E02               	movlw	2
  4179  0004EC  184A               	xorwf	_NovaTecla^0,w,c
  4180  0004EE  E108               	bnz	l4991
  4181  0004F0  EC71  F00D         	call	_LcLliure	;wreg free
  4182  0004F4  E305               	bnc	l4991
  4183                           
  4184                           ;MMenu.c: 321:     if(menuDalt>0) menuDalt--;
  4185  0004F6  5025               	movf	_menuDalt^0,w,c
  4186  0004F8  E101 D5FB          	bz	l4657
  4187  0004FC  0625               	decf	_menuDalt^0,f,c
  4188  0004FE  D5F9               	goto	l4657
  4189  000500                     l4991:
  4190  000500  0E0B               	movlw	11
  4191  000502  184A               	xorwf	_NovaTecla^0,w,c
  4192  000504  E0BB               	bz	u4680
  4193  000506  0E0A               	movlw	10
  4194  000508  184A               	xorwf	_NovaTecla^0,w,c
  4195  00050A  A4D8               	btfss	status,2,c
  4196  00050C  0012               	return	
  4197  00050E                     u4780:
  4198                           
  4199                           ;MMenu.c: 329:     state = 34;
  4200  00050E  0E22               	movlw	34
  4201  000510  6E22               	movwf	MTMenu@state^0,c
  4202  000512  0C22               	retlw	34
  4203  000514                     l4999:
  4204                           
  4205                           ;MMenu.c: 333:    if (LcLliure()) {
  4206  000514  EC71  F00D         	call	_LcLliure	;wreg free
  4207  000518  A0D8               	btfss	status,0,c
  4208  00051A  0012               	return	
  4209                           
  4210                           ;MMenu.c: 334:     LcGotoXY(3,1);
  4211  00051C  D9C5               	call	PL68	;call to abstracted procedure
  4212  00051E  ECD2  F009         	call	_LcGotoXY
  4213                           
  4214                           ;MMenu.c: 335:     LcNewString(deleteUser);
  4215  000522  0E5F               	movlw	low _deleteUser
  4216  000524  6E63               	movwf	LcNewString@new_s^0,c
  4217  000526  0E1D               	movlw	high _deleteUser
  4218  000528  6E64               	movwf	(LcNewString@new_s+1)^0,c
  4219  00052A  EC6B  F00D         	call	_LcNewString	;wreg free
  4220                           
  4221                           ;MMenu.c: 336:     state = 32;
  4222  00052E  0E20               	movlw	32
  4223  000530  6E22               	movwf	MTMenu@state^0,c
  4224  000532  0C20               	retlw	32
  4225  000534                     l5007:
  4226                           
  4227                           ;MMenu.c: 340:    if (NovaTecla == 8) {
  4228  000534  0E08               	movlw	8
  4229  000536  184A               	xorwf	_NovaTecla^0,w,c
  4230  000538  E102               	bnz	l5013
  4231                           
  4232                           ;MMenu.c: 341:     posFletxa = 1;
  4233  00053A  8C78               	bsf	(_posFletxa/(0+8))^0,_posFletxa& (0+7),c
  4234  00053C  D7E8               	goto	u4780
  4235  00053E                     l5013:
  4236  00053E  0E02               	movlw	2
  4237  000540  184A               	xorwf	_NovaTecla^0,w,c
  4238  000542  E102               	bnz	l5019
  4239                           
  4240                           ;MMenu.c: 345:     posFletxa = 0;
  4241  000544  9C78               	bcf	(_posFletxa/(0+8))^0,_posFletxa& (0+7),c
  4242  000546  D7E3               	goto	u4780
  4243  000548                     l5019:
  4244  000548  0E0A               	movlw	10
  4245  00054A  184A               	xorwf	_NovaTecla^0,w,c
  4246  00054C  E106               	bnz	l5029
  4247  00054E  AC78               	btfss	(_posFletxa/(0+8))^0,_posFletxa& (0+7),c
  4248  000550  D004               	goto	l5029
  4249                           
  4250                           ;MMenu.c: 349:     UdelUser(menuDalt);
  4251  000552  5025               	movf	_menuDalt^0,w,c
  4252  000554  EC7C  F00D         	call	_UdelUser
  4253  000558  D6DE               	goto	l4839
  4254  00055A                     l5029:
  4255  00055A  0E0A               	movlw	10
  4256  00055C  184A               	xorwf	_NovaTecla^0,w,c
  4257  00055E  B4D8               	btfsc	status,2,c
  4258  000560  BC78               	btfsc	(_posFletxa/(0+8))^0,_posFletxa& (0+7),c
  4259  000562  0012               	return	
  4260                           
  4261                           ;MMenu.c: 354:     LcClear();
  4262  000564  ECFA  F00C         	call	_LcClear	;wreg free
  4263                           
  4264                           ;MMenu.c: 355:     LcNewString(enterNewName);
  4265  000568  0E80               	movlw	low _enterNewName
  4266  00056A  6E63               	movwf	LcNewString@new_s^0,c
  4267  00056C  6A64               	clrf	(LcNewString@new_s+1)^0,c
  4268  00056E  EC6B  F00D         	call	_LcNewString	;wreg free
  4269                           
  4270                           ;MMenu.c: 356:     NovaTecla = -1;
  4271  000572  684A               	setf	_NovaTecla^0,c
  4272                           
  4273                           ;MMenu.c: 358:     state = 33;
  4274  000574  0E21               	movlw	33
  4275  000576  6E22               	movwf	MTMenu@state^0,c
  4276  000578  0C21               	retlw	33
  4277  00057A                     l5041:
  4278                           
  4279                           ;MMenu.c: 365:    if (LcLliure()) {
  4280  00057A  EC71  F00D         	call	_LcLliure	;wreg free
  4281  00057E  A0D8               	btfss	status,0,c
  4282  000580  0012               	return	
  4283                           
  4284                           ;MMenu.c: 366:     LcGotoXY(0,1);
  4285  000582  D98F               	call	PL32	;call to abstracted procedure
  4286  000584  ECD2  F009         	call	_LcGotoXY
  4287                           
  4288                           ;MMenu.c: 367:     SMSon();
  4289  000588  ECBF  F00D         	call	_SMSon	;wreg free
  4290                           
  4291                           ;MMenu.c: 368:     pos=0;
  4292  00058C  6A24               	clrf	_pos^0,c
  4293                           
  4294                           ;MMenu.c: 369:     LcCursorOn();
  4295  00058E  EC81  F00D         	call	_LcCursorOn	;wreg free
  4296  000592                     l5051:
  4297                           
  4298                           ;MMenu.c: 370:     state = 35;
  4299  000592  0E23               	movlw	35
  4300  000594  6E22               	movwf	MTMenu@state^0,c
  4301  000596  0C23               	retlw	35
  4302  000598                     l5053:
  4303                           
  4304                           ;MMenu.c: 374:    if (NovaTecla == 10) {
  4305  000598  0E0A               	movlw	10
  4306  00059A  184A               	xorwf	_NovaTecla^0,w,c
  4307  00059C  E101 D76E          	bz	u4680
  4308  0005A0  0E0A               	movlw	10
  4309  0005A2  184A               	xorwf	_NovaTecla^0,w,c
  4310  0005A4  A4D8               	btfss	status,2,c
  4311  0005A6  BE4A               	btfsc	_NovaTecla^0,7,c
  4312  0005A8  0012               	return	
  4313                           
  4314                           ;MMenu.c: 379:     LcPutChar(novaLletra);
  4315  0005AA  5049               	movf	_novaLletra^0,w,c
  4316  0005AC  EC2D  F00B         	call	_LcPutChar
  4317                           
  4318                           ;MMenu.c: 380:     NovaTecla = -1;
  4319  0005B0  684A               	setf	_NovaTecla^0,c
  4320                           
  4321                           ;MMenu.c: 381:     UeditUsername(menuDalt,pos,novaLletra);
  4322  0005B2  C024  F060         	movff	_pos,UeditUsername@pos
  4323  0005B6  C049  F061         	movff	_novaLletra,UeditUsername@novaLletra
  4324  0005BA  5025               	movf	_menuDalt^0,w,c
  4325  0005BC  EC6C  F00C         	call	_UeditUsername
  4326                           
  4327                           ;MMenu.c: 382:     pos++;
  4328  0005C0  2A24               	incf	_pos^0,f,c
  4329                           
  4330                           ;MMenu.c: 383:     novaLletra = -1;
  4331  0005C2  6849               	setf	_novaLletra^0,c
  4332  0005C4  D7E6               	goto	l5051
  4333  0005C6                     l5071:
  4334                           
  4335                           ;MMenu.c: 388:    if (LcLliure()) {
  4336  0005C6  EC71  F00D         	call	_LcLliure	;wreg free
  4337  0005CA  A0D8               	btfss	status,0,c
  4338  0005CC  0012               	return	
  4339                           
  4340                           ;MMenu.c: 389:     LcNewString(UgetUserName(menuDalt));
  4341  0005CE  5025               	movf	_menuDalt^0,w,c
  4342  0005D0  EC1E  F00D         	call	_UgetUserName
  4343  0005D4  D93C               	call	PL8	;call to abstracted procedure
  4344  0005D6  EC6B  F00D         	call	_LcNewString	;wreg free
  4345                           
  4346                           ;MMenu.c: 390:     menuDalt++;
  4347  0005DA  2A25               	incf	_menuDalt^0,f,c
  4348                           
  4349                           ;MMenu.c: 391:     state = 37;
  4350  0005DC  0E25               	movlw	37
  4351  0005DE  6E22               	movwf	MTMenu@state^0,c
  4352  0005E0  0C25               	retlw	37
  4353  0005E2                     l5079:
  4354                           
  4355                           ;MMenu.c: 395:    if (LcLliure() && menuDalt < UgetNumUsuaris()) {
  4356  0005E2  EC71  F00D         	call	_LcLliure	;wreg free
  4357  0005E6  E311               	bnc	l5091
  4358  0005E8  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  4359  0005EC  6025               	cpfslt	_menuDalt^0,c
  4360  0005EE  D00D               	goto	l5091
  4361                           
  4362                           ;MMenu.c: 396:     LcGotoXY(0,1);
  4363  0005F0  D958               	call	PL32	;call to abstracted procedure
  4364  0005F2  ECD2  F009         	call	_LcGotoXY
  4365                           
  4366                           ;MMenu.c: 397:     LcNewString(UgetUserName(menuDalt));
  4367  0005F6  5025               	movf	_menuDalt^0,w,c
  4368  0005F8  EC1E  F00D         	call	_UgetUserName
  4369  0005FC  D928               	call	PL8	;call to abstracted procedure
  4370  0005FE  EC6B  F00D         	call	_LcNewString	;wreg free
  4371                           
  4372                           ;MMenu.c: 398:     menuDalt++;
  4373  000602  2A25               	incf	_menuDalt^0,f,c
  4374  000604                     l5089:
  4375                           
  4376                           ;MMenu.c: 399:     state = 38;
  4377  000604  0E26               	movlw	38
  4378  000606  6E22               	movwf	MTMenu@state^0,c
  4379                           
  4380                           ;MMenu.c: 400:    }
  4381  000608  0C26               	retlw	38
  4382  00060A                     l5091:
  4383  00060A  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  4384  00060E  1825               	xorwf	_menuDalt^0,w,c
  4385  000610  A4D8               	btfss	status,2,c
  4386  000612  0012               	return	
  4387  000614  EC71  F00D         	call	_LcLliure	;wreg free
  4388  000618  A0D8               	btfss	status,0,c
  4389  00061A  0012               	return	
  4390                           
  4391                           ;MMenu.c: 402:     LcGotoXY(17,0);
  4392  00061C  6A68               	clrf	LcGotoXY@Row^0,c
  4393  00061E  0E11               	movlw	17
  4394  000620  ECD2  F009         	call	_LcGotoXY
  4395                           
  4396                           ;MMenu.c: 403:     LcNewString(UgetUserName(menuDalt));
  4397  000624  5025               	movf	_menuDalt^0,w,c
  4398  000626  EC1E  F00D         	call	_UgetUserName
  4399  00062A  D911               	call	PL8	;call to abstracted procedure
  4400  00062C  EC6B  F00D         	call	_LcNewString	;wreg free
  4401  000630                     l5099:
  4402                           
  4403                           ;MMenu.c: 404:     state = 40;
  4404  000630  0E28               	movlw	40
  4405  000632  6E22               	movwf	MTMenu@state^0,c
  4406  000634  0C28               	retlw	40
  4407  000636                     l5101:
  4408                           
  4409                           ;MMenu.c: 408:    if (LcLliure() && menuDalt < UgetNumUsuaris() && LcLliure()) {
  4410  000636  EC71  F00D         	call	_LcLliure	;wreg free
  4411  00063A  E315               	bnc	l5115
  4412  00063C  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  4413  000640  6025               	cpfslt	_menuDalt^0,c
  4414  000642  D011               	goto	l5115
  4415  000644  EC71  F00D         	call	_LcLliure	;wreg free
  4416  000648  E30E               	bnc	l5115
  4417                           
  4418                           ;MMenu.c: 409:     LcGotoXY(17,0);
  4419  00064A  6A68               	clrf	LcGotoXY@Row^0,c
  4420  00064C  0E11               	movlw	17
  4421  00064E  ECD2  F009         	call	_LcGotoXY
  4422                           
  4423                           ;MMenu.c: 410:     LcNewString(UgetUserName(menuDalt));
  4424  000652  5025               	movf	_menuDalt^0,w,c
  4425  000654  EC1E  F00D         	call	_UgetUserName
  4426  000658  D8FA               	call	PL8	;call to abstracted procedure
  4427  00065A  EC6B  F00D         	call	_LcNewString	;wreg free
  4428                           
  4429                           ;MMenu.c: 411:     menuDalt++;
  4430  00065E  2A25               	incf	_menuDalt^0,f,c
  4431                           
  4432                           ;MMenu.c: 412:     state = 39;
  4433  000660  0E27               	movlw	39
  4434  000662  6E22               	movwf	MTMenu@state^0,c
  4435                           
  4436                           ;MMenu.c: 413:    }
  4437  000664  0C27               	retlw	39
  4438  000666                     l5115:
  4439  000666  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  4440  00066A  1825               	xorwf	_menuDalt^0,w,c
  4441  00066C  A4D8               	btfss	status,2,c
  4442  00066E  0012               	return	
  4443  000670  EC71  F00D         	call	_LcLliure	;wreg free
  4444  000674  A0D8               	btfss	status,0,c
  4445  000676  0012               	return	
  4446                           
  4447                           ;MMenu.c: 415:     LcGotoXY(17,0);
  4448  000678  6A68               	clrf	LcGotoXY@Row^0,c
  4449  00067A  0E11               	movlw	17
  4450  00067C  ECD2  F009         	call	_LcGotoXY
  4451                           
  4452                           ;MMenu.c: 416:     LcNewString(UgetUserName(menuDalt-1));
  4453  000680  0425               	decf	_menuDalt^0,w,c
  4454  000682  EC1E  F00D         	call	_UgetUserName
  4455  000686  D8E3               	call	PL8	;call to abstracted procedure
  4456  000688  EC6B  F00D         	call	_LcNewString	;wreg free
  4457                           
  4458                           ;MMenu.c: 417:     state = 44;
  4459  00068C  0E2C               	movlw	44
  4460  00068E  6E22               	movwf	MTMenu@state^0,c
  4461  000690  0C2C               	retlw	44
  4462  000692                     l5125:
  4463                           
  4464                           ;MMenu.c: 421:    if (LcLliure() && menuDalt < UgetNumUsuaris()) {
  4465  000692  EC71  F00D         	call	_LcLliure	;wreg free
  4466  000696  E30F               	bnc	l5137
  4467  000698  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  4468  00069C  6025               	cpfslt	_menuDalt^0,c
  4469  00069E  D00B               	goto	l5137
  4470                           
  4471                           ;MMenu.c: 422:     LcGotoXY(17,1);
  4472  0006A0  D906               	call	PL70	;call to abstracted procedure
  4473  0006A2  ECD2  F009         	call	_LcGotoXY
  4474                           
  4475                           ;MMenu.c: 423:     LcNewString(UgetUserName(menuDalt));
  4476  0006A6  5025               	movf	_menuDalt^0,w,c
  4477  0006A8  EC1E  F00D         	call	_UgetUserName
  4478  0006AC  D8D0               	call	PL8	;call to abstracted procedure
  4479  0006AE  EC6B  F00D         	call	_LcNewString	;wreg free
  4480                           
  4481                           ;MMenu.c: 424:     menuDalt++;
  4482  0006B2  2A25               	incf	_menuDalt^0,f,c
  4483  0006B4  D7BD               	goto	l5099
  4484  0006B6                     l5137:
  4485  0006B6  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  4486  0006BA  1825               	xorwf	_menuDalt^0,w,c
  4487  0006BC  E0B9               	bz	l5099
  4488  0006BE  0012               	return	
  4489  0006C0                     l5141:
  4490                           
  4491                           ;MMenu.c: 432:    if (LcLliure()) {
  4492  0006C0  EC71  F00D         	call	_LcLliure	;wreg free
  4493  0006C4  A0D8               	btfss	status,0,c
  4494  0006C6  0012               	return	
  4495                           
  4496                           ;MMenu.c: 433:     TiResetTics(timerMenu);
  4497  0006C8  5023               	movf	_timerMenu^0,w,c
  4498  0006CA  ECEC  F00C         	call	_TiResetTics
  4499                           
  4500                           ;MMenu.c: 434:     pos = 0;
  4501  0006CE  6A24               	clrf	_pos^0,c
  4502  0006D0                     l5147:
  4503                           
  4504                           ;MMenu.c: 435:     state = 41;
  4505  0006D0  0E29               	movlw	41
  4506  0006D2  6E22               	movwf	MTMenu@state^0,c
  4507  0006D4  0C29               	retlw	41
  4508  0006D6                     l5149:
  4509                           
  4510                           ;MMenu.c: 439:    if (TiGetTics(timerMenu) > 1999) {
  4511  0006D6  5023               	movf	_timerMenu^0,w,c
  4512  0006D8  ECBA  F00C         	call	_TiGetTics
  4513  0006DC  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  4514  0006DE  D006               	goto	l5153
  4515  0006E0  ECA6  F005         	call	PL44	;call to abstracted procedure
  4516  0006E4  E303               	bnc	l5153
  4517                           
  4518                           ;MMenu.c: 440:     state = 42;
  4519  0006E6  0E2A               	movlw	42
  4520  0006E8  6E22               	movwf	MTMenu@state^0,c
  4521                           
  4522                           ;MMenu.c: 441:    }
  4523  0006EA  0C2A               	retlw	42
  4524  0006EC                     l5153:
  4525  0006EC  0E0B               	movlw	11
  4526  0006EE  184A               	xorwf	_NovaTecla^0,w,c
  4527  0006F0  E101 D6C4          	bz	u4680
  4528  0006F4  0012               	return	
  4529  0006F6                     l5157:
  4530                           
  4531                           ;MMenu.c: 448:    if (pos < 16) {
  4532  0006F6  0E10               	movlw	16
  4533  0006F8  6024               	cpfslt	_pos^0,c
  4534  0006FA  D007               	goto	l5167
  4535                           
  4536                           ;MMenu.c: 449:     TiResetTics(timerMenu);
  4537  0006FC  5023               	movf	_timerMenu^0,w,c
  4538  0006FE  ECEC  F00C         	call	_TiResetTics
  4539                           
  4540                           ;MMenu.c: 450:     LcScroll();
  4541  000702  ECC2  F00D         	call	_LcScroll	;wreg free
  4542                           
  4543                           ;MMenu.c: 451:     pos++;
  4544  000706  2A24               	incf	_pos^0,f,c
  4545  000708  D7E3               	goto	l5147
  4546  00070A                     l5167:
  4547  00070A  0E0F               	movlw	15
  4548  00070C  6424               	cpfsgt	_pos^0,c
  4549  00070E  D005               	goto	l5173
  4550  000710  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  4551  000714  6025               	cpfslt	_menuDalt^0,c
  4552  000716  D001               	goto	l5173
  4553  000718  D775               	goto	l5089
  4554  00071A                     l5173:
  4555  00071A  0E0F               	movlw	15
  4556  00071C  6424               	cpfsgt	_pos^0,c
  4557  00071E  0C0F               	retlw	15
  4558  000720  ECC9  F00D         	call	_UgetNumUsuaris	;wreg free
  4559  000724  1825               	xorwf	_menuDalt^0,w,c
  4560  000726  A4D8               	btfss	status,2,c
  4561  000728  0012               	return	
  4562                           
  4563                           ;MMenu.c: 458:     menuDalt = 0;
  4564  00072A  6A25               	clrf	_menuDalt^0,c
  4565  00072C  D4F7               	goto	l4671
  4566  00072E                     l5181:
  4567                           
  4568                           ;MMenu.c: 463:    if (LcLliure()) {
  4569  00072E  EC71  F00D         	call	_LcLliure	;wreg free
  4570  000732  A0D8               	btfss	status,0,c
  4571  000734  0012               	return	
  4572                           
  4573                           ;MMenu.c: 464:     LcGotoXY(17,1);
  4574  000736  D8BB               	call	PL70	;call to abstracted procedure
  4575  000738  ECD2  F009         	call	_LcGotoXY
  4576                           
  4577                           ;MMenu.c: 465:     LcNewString(UgetUserName(menuDalt));
  4578  00073C  5025               	movf	_menuDalt^0,w,c
  4579  00073E  EC1E  F00D         	call	_UgetUserName
  4580  000742  D885               	call	PL8	;call to abstracted procedure
  4581  000744  EC6B  F00D         	call	_LcNewString	;wreg free
  4582  000748  D773               	goto	l5099
  4583  00074A                     l5191:
  4584  00074A  5022               	movf	MTMenu@state^0,w,c
  4585  00074C  6E71               	movwf	??_MTMenu^0,c
  4586  00074E  6A72               	clrf	(??_MTMenu+1)^0,c
  4587                           
  4588                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4589                           ; Switch size 1, requested type "space"
  4590                           ; Number of cases is 1, Range of values is 0 to 0
  4591                           ; switch strategies available:
  4592                           ; Name         Instructions Cycles
  4593                           ; simple_byte            4     3 (average)
  4594                           ;	Chosen strategy is simple_byte
  4595  000750  5072               	movf	(??_MTMenu+1)^0,w,c
  4596  000752  A4D8               	btfss	status,2,c
  4597  000754  0012               	return	
  4598                           
  4599                           ; Switch size 1, requested type "space"
  4600                           ; Number of cases is 41, Range of values is 0 to 44
  4601                           ; switch strategies available:
  4602                           ; Name         Instructions Cycles
  4603                           ; simple_byte          124    63 (average)
  4604                           ;	Chosen strategy is simple_byte
  4605  000756  5071               	movf	??_MTMenu^0,w,c
  4606  000758  E101 D46E          	bz	l4581
  4607  00075C  0A01               	xorlw	1	; case 1
  4608  00075E  E101 D47E          	bz	l4597
  4609  000762  0A03               	xorlw	3	; case 2
  4610  000764  E101 D4DD          	bz	l4673
  4611  000768  0A01               	xorlw	1	; case 3
  4612  00076A  E101 D551          	bz	l4761
  4613  00076E  0A07               	xorlw	7	; case 4
  4614  000770  E101 D4E4          	bz	l4679
  4615  000774  0A01               	xorlw	1	; case 5
  4616  000776  E101 D509          	bz	l4707
  4617  00077A  0A03               	xorlw	3	; case 6
  4618  00077C  E101 D512          	bz	l4717
  4619  000780  0A01               	xorlw	1	; case 7
  4620  000782  E101 D51B          	bz	l4727
  4621  000786  0A0F               	xorlw	15	; case 8
  4622  000788  E101 D51E          	bz	l4731
  4623  00078C  0A01               	xorlw	1	; case 9
  4624  00078E  E101 D527          	bz	l4741
  4625  000792  0A03               	xorlw	3	; case 10
  4626  000794  E101 D530          	bz	l4751
  4627  000798  0A01               	xorlw	1	; case 11
  4628  00079A  E101 D4E5          	bz	l4697
  4629  00079E  0A07               	xorlw	7	; case 12
  4630  0007A0  E101 D548          	bz	l4769
  4631  0007A4  0A01               	xorlw	1	; case 13
  4632  0007A6  E101 D5E8          	bz	l4869
  4633  0007AA  0A03               	xorlw	3	; case 14
  4634  0007AC  E101 D54F          	bz	l4775
  4635  0007B0  0A1E               	xorlw	30	; case 16
  4636  0007B2  E101 D5F3          	bz	l4879
  4637  0007B6  0A01               	xorlw	1	; case 17
  4638  0007B8  E101 D56A          	bz	l4801
  4639  0007BC  0A02               	xorlw	2	; case 19
  4640  0007BE  E101 D5C2          	bz	l4853
  4641  0007C2  0A07               	xorlw	7	; case 20
  4642  0007C4  E101 D5A9          	bz	l4843
  4643  0007C8  0A01               	xorlw	1	; case 21
  4644  0007CA  E101 D5F2          	bz	l4889
  4645  0007CE  0A02               	xorlw	2	; case 23
  4646  0007D0  E101 D60F          	bz	l4915
  4647  0007D4  0A0F               	xorlw	15	; case 24
  4648  0007D6  E101 D5BD          	bz	l4857
  4649  0007DA  0A01               	xorlw	1	; case 25
  4650  0007DC  E101 D61E          	bz	l4925
  4651  0007E0  0A03               	xorlw	3	; case 26
  4652  0007E2  E101 D633          	bz	l4937
  4653  0007E6  0A01               	xorlw	1	; case 27
  4654  0007E8  E101 D640          	bz	l4947
  4655  0007EC  0A07               	xorlw	7	; case 28
  4656  0007EE  E101 D646          	bz	l4953
  4657  0007F2  0A01               	xorlw	1	; case 29
  4658  0007F4  E101 D655          	bz	l4961
  4659  0007F8  0A03               	xorlw	3	; case 30
  4660  0007FA  E101 D667          	bz	l4971
  4661  0007FE  0A01               	xorlw	1	; case 31
  4662  000800  E101 D688          	bz	l4999
  4663  000804  0A3F               	xorlw	63	; case 32
  4664  000806  E101 D695          	bz	l5007
  4665  00080A  0A01               	xorlw	1	; case 33
  4666  00080C  E101 D6B5          	bz	l5041
  4667  000810  0A03               	xorlw	3	; case 34
  4668  000812  B4D8               	btfsc	status,2,c
  4669  000814  0012               	return	
  4670  000816  0A01               	xorlw	1	; case 35
  4671  000818  E101 D6BE          	bz	l5053
  4672  00081C  0A07               	xorlw	7	; case 36
  4673  00081E  E101 D6D2          	bz	l5071
  4674  000822  0A01               	xorlw	1	; case 37
  4675  000824  E101 D6DD          	bz	l5079
  4676  000828  0A03               	xorlw	3	; case 38
  4677  00082A  E101 D704          	bz	l5101
  4678  00082E  0A01               	xorlw	1	; case 39
  4679  000830  E101 D72F          	bz	l5125
  4680  000834  0A0F               	xorlw	15	; case 40
  4681  000836  E101 D743          	bz	l5141
  4682  00083A  0A01               	xorlw	1	; case 41
  4683  00083C  E101 D74B          	bz	l5149
  4684  000840  0A03               	xorlw	3	; case 42
  4685  000842  E101 D758          	bz	l5157
  4686  000846  0A06               	xorlw	6	; case 44
  4687  000848  E101 D771          	bz	l5181
  4688  00084C  0012               	return		;funcret
  4689  00084E                     __end_of_MTMenu:
  4690                           	callstack 0
  4691  00084E                     PL8:
  4692                           	callstack 22
  4693  00084E  C060  F063         	movff	?_UgetUserName,LcNewString@new_s
  4694  000852  C061  F064         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4695  000856  0012               	return	
  4696  000858                     __end_ofPL8:
  4697                           	callstack 0
  4698  000858                     PL10:
  4699                           	callstack 22
  4700  000858  6E73               	movwf	(??_MTMenu+2)^0,c
  4701  00085A  6A74               	clrf	(??_MTMenu+3)^0,c
  4702  00085C  5071               	movf	??_MTMenu^0,w,c
  4703  00085E  2673               	addwf	(??_MTMenu+2)^0,f,c
  4704  000860  5072               	movf	(??_MTMenu+1)^0,w,c
  4705  000862  2274               	addwfc	(??_MTMenu+3)^0,f,c
  4706  000864  5025               	movf	_menuDalt^0,w,c
  4707  000866  6E75               	movwf	(??_MTMenu+4)^0,c
  4708  000868  6A76               	clrf	(??_MTMenu+5)^0,c
  4709  00086A  5073               	movf	(??_MTMenu+2)^0,w,c
  4710  00086C  5C75               	subwf	(??_MTMenu+4)^0,w,c
  4711  00086E  5076               	movf	(??_MTMenu+5)^0,w,c
  4712  000870  0A80               	xorlw	128
  4713  000872  6E77               	movwf	(??_MTMenu+6)^0,c
  4714  000874  5074               	movf	(??_MTMenu+3)^0,w,c
  4715  000876  0A80               	xorlw	128
  4716  000878  5877               	subwfb	(??_MTMenu+6)^0,w,c
  4717  00087A  0012               	return	
  4718  00087C                     __end_ofPL10:
  4719                           	callstack 0
  4720  00087C                     PL20:
  4721                           	callstack 22
  4722  00087C  6E73               	movwf	(??_MTMenu+2)^0,c
  4723  00087E  6A74               	clrf	(??_MTMenu+3)^0,c
  4724  000880  5071               	movf	??_MTMenu^0,w,c
  4725  000882  5C73               	subwf	(??_MTMenu+2)^0,w,c
  4726  000884  5074               	movf	(??_MTMenu+3)^0,w,c
  4727  000886  0A80               	xorlw	128
  4728  000888  6E75               	movwf	(??_MTMenu+4)^0,c
  4729  00088A  5072               	movf	(??_MTMenu+1)^0,w,c
  4730  00088C  0A80               	xorlw	128
  4731  00088E  5875               	subwfb	(??_MTMenu+4)^0,w,c
  4732  000890  0012               	return	
  4733  000892                     __end_ofPL20:
  4734                           	callstack 0
  4735  000892                     PL28:
  4736                           	callstack 22
  4737  000892  5025               	movf	_menuDalt^0,w,c
  4738  000894  6E71               	movwf	??_MTMenu^0,c
  4739  000896  6A72               	clrf	(??_MTMenu+1)^0,c
  4740  000898  0E02               	movlw	2
  4741  00089A  2671               	addwf	??_MTMenu^0,f,c
  4742  00089C  0E00               	movlw	0
  4743  00089E  2272               	addwfc	(??_MTMenu+1)^0,f,c
  4744  0008A0  0C00               	retlw	0
  4745  0008A2                     __end_ofPL28:
  4746                           	callstack 0
  4747  0008A2                     PL32:
  4748                           	callstack 25
  4749  0008A2  0E01               	movlw	1
  4750  0008A4  6E68               	movwf	LcGotoXY@Row^0,c
  4751  0008A6  0C00               	retlw	0
  4752  0008A8                     __end_ofPL32:
  4753                           	callstack 0
  4754  0008A8                     PL68:
  4755                           	callstack 22
  4756  0008A8  0E01               	movlw	1
  4757  0008AA  6E68               	movwf	LcGotoXY@Row^0,c
  4758  0008AC  0C03               	retlw	3
  4759  0008AE                     __end_ofPL68:
  4760                           	callstack 0
  4761  0008AE                     PL70:
  4762                           	callstack 22
  4763  0008AE  0E01               	movlw	1
  4764  0008B0  6E68               	movwf	LcGotoXY@Row^0,c
  4765  0008B2  0C11               	retlw	17
  4766  0008B4                     __end_ofPL70:
  4767                           	callstack 0
  4768  0008B4                     PL72:
  4769                           	callstack 22
  4770  0008B4  6A25               	clrf	_menuDalt^0,c
  4771  0008B6  6A22               	clrf	MTMenu@state^0,c
  4772  0008B8  0012               	return	
  4773  0008BA                     __end_ofPL72:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _UgetUserName *****************
  4777 ;; Defined at:
  4778 ;;		line 37 in file "UUsuaris.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  quin            1    wreg     unsigned char 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;  quin            1    7[COMRAM] unsigned char 
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  2    5[COMRAM] PTR unsigned char 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2, status,0, prodl, prodh
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1
  4792 ;;      Params:         2       0       0
  4793 ;;      Locals:         1       0       0
  4794 ;;      Temps:          0       0       0
  4795 ;;      Totals:         3       0       0
  4796 ;;Total ram usage:        3 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; Hardware stack levels required when called: 2
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_MTMenu
  4803 ;;		_SIOMotor
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text22
  4808  001A3C                     __ptext22:
  4809                           	callstack 0
  4810  001A3C                     _UgetUserName:
  4811                           	callstack 27
  4812                           
  4813                           ;incstack = 0
  4814                           ;UgetUserName@quin stored from wreg
  4815  001A3C  6E62               	movwf	UgetUserName@quin^0,c
  4816                           
  4817                           ;UUsuaris.c: 38:     return usuaris[quin].username;
  4818  001A3E  5062               	movf	UgetUserName@quin^0,w,c
  4819  001A40  0D0C               	mullw	12
  4820  001A42  0E00               	movlw	low _usuaris
  4821  001A44  24F3               	addwf	243,w,c
  4822  001A46  6E60               	movwf	?_UgetUserName^0,c
  4823  001A48  0E01               	movlw	high _usuaris
  4824  001A4A  20F4               	addwfc	prodh,w,c
  4825  001A4C  6E61               	movwf	(?_UgetUserName+1)^0,c
  4826  001A4E  0012               	return		;funcret
  4827  001A50                     __end_of_UgetUserName:
  4828                           	callstack 0
  4829                           
  4830 ;; *************** function _UgetNumUsuaris *****************
  4831 ;; Defined at:
  4832 ;;		line 98 in file "UUsuaris.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      unsigned char 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1
  4846 ;;      Params:         0       0       0
  4847 ;;      Locals:         0       0       0
  4848 ;;      Temps:          0       0       0
  4849 ;;      Totals:         0       0       0
  4850 ;;Total ram usage:        0 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 2
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_MTMenu
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text23
  4861  001B92                     __ptext23:
  4862                           	callstack 0
  4863  001B92                     _UgetNumUsuaris:
  4864                           	callstack 27
  4865                           
  4866                           ;UUsuaris.c: 99:     return numUsuaris;
  4867                           
  4868                           ;incstack = 0
  4869  001B92  500D               	movf	_numUsuaris^0,w,c
  4870  001B94  0012               	return		;funcret
  4871  001B96                     __end_of_UgetNumUsuaris:
  4872                           	callstack 0
  4873                           
  4874 ;; *************** function _UeditUsername *****************
  4875 ;; Defined at:
  4876 ;;		line 115 in file "UUsuaris.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  menuDalt        1    wreg     unsigned char 
  4879 ;;  pos             1    5[COMRAM] unsigned char 
  4880 ;;  novaLletra      1    6[COMRAM] unsigned char 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  menuDalt        1    9[COMRAM] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1
  4892 ;;      Params:         2       0       0
  4893 ;;      Locals:         1       0       0
  4894 ;;      Temps:          2       0       0
  4895 ;;      Totals:         5       0       0
  4896 ;;Total ram usage:        5 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; Hardware stack levels required when called: 2
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_MTMenu
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text24
  4907  0018D8                     __ptext24:
  4908                           	callstack 0
  4909  0018D8                     _UeditUsername:
  4910                           	callstack 27
  4911                           
  4912                           ;incstack = 0
  4913                           ;UeditUsername@menuDalt stored from wreg
  4914  0018D8  6E64               	movwf	UeditUsername@menuDalt^0,c
  4915                           
  4916                           ;UUsuaris.c: 116:     usuaris[menuDalt].username[pos] = novaLletra;
  4917  0018DA  5064               	movf	UeditUsername@menuDalt^0,w,c
  4918  0018DC  0D0C               	mullw	12
  4919  0018DE  0E00               	movlw	low _usuaris
  4920  0018E0  6E62               	movwf	??_UeditUsername^0,c
  4921  0018E2  0E01               	movlw	high _usuaris
  4922  0018E4  6E63               	movwf	(??_UeditUsername+1)^0,c
  4923  0018E6  50F3               	movf	243,w,c
  4924  0018E8  2662               	addwf	??_UeditUsername^0,f,c
  4925  0018EA  50F4               	movf	244,w,c
  4926  0018EC  2263               	addwfc	(??_UeditUsername+1)^0,f,c
  4927  0018EE  5060               	movf	UeditUsername@pos^0,w,c
  4928  0018F0  2462               	addwf	??_UeditUsername^0,w,c
  4929  0018F2  6ED9               	movwf	fsr2l,c
  4930  0018F4  0E00               	movlw	0
  4931  0018F6  2063               	addwfc	(??_UeditUsername+1)^0,w,c
  4932  0018F8  6EDA               	movwf	fsr2h,c
  4933  0018FA  C061  FFDF         	movff	UeditUsername@novaLletra,indf2
  4934  0018FE  0012               	return		;funcret
  4935  001900                     __end_of_UeditUsername:
  4936                           	callstack 0
  4937                           
  4938 ;; *************** function _UdelUser *****************
  4939 ;; Defined at:
  4940 ;;		line 110 in file "UUsuaris.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  index           1    wreg     unsigned char 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  index           1    5[COMRAM] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1
  4954 ;;      Params:         0       0       0
  4955 ;;      Locals:         1       0       0
  4956 ;;      Temps:          0       0       0
  4957 ;;      Totals:         1       0       0
  4958 ;;Total ram usage:        1 bytes
  4959 ;; Hardware stack levels used: 1
  4960 ;; Hardware stack levels required when called: 2
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_MTMenu
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text25
  4969  001AF8                     __ptext25:
  4970                           	callstack 0
  4971  001AF8                     _UdelUser:
  4972                           	callstack 27
  4973                           
  4974                           ;incstack = 0
  4975                           ;UdelUser@index stored from wreg
  4976  001AF8  6E60               	movwf	UdelUser@index^0,c
  4977                           
  4978                           ;UUsuaris.c: 111:     delUser = index;
  4979  001AFA  C060  F042         	movff	UdelUser@index,_delUser
  4980                           
  4981                           ;UUsuaris.c: 112:     numUsuaris--;
  4982  001AFE  060D               	decf	_numUsuaris^0,f,c
  4983  001B00  0012               	return		;funcret
  4984  001B02                     __end_of_UdelUser:
  4985                           	callstack 0
  4986                           
  4987 ;; *************** function _UcreateUser *****************
  4988 ;; Defined at:
  4989 ;;		line 82 in file "UUsuaris.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;		None
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;		None
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		None
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1
  5003 ;;      Params:         0       0       0
  5004 ;;      Locals:         0       0       0
  5005 ;;      Temps:          0       0       0
  5006 ;;      Totals:         0       0       0
  5007 ;;Total ram usage:        0 bytes
  5008 ;; Hardware stack levels used: 1
  5009 ;; Hardware stack levels required when called: 2
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_MTMenu
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text26
  5018  001B96                     __ptext26:
  5019                           	callstack 0
  5020  001B96                     _UcreateUser:
  5021                           	callstack 27
  5022                           
  5023                           ;UUsuaris.c: 83:     createUser = 1;
  5024                           
  5025                           ;incstack = 0
  5026  001B96  8078               	bsf	(_createUser/(0+8))^0,_createUser& (0+7),c
  5027  001B98  0012               	return		;funcret
  5028  001B9A                     __end_of_UcreateUser:
  5029                           	callstack 0
  5030                           
  5031 ;; *************** function _UCancelaNouUser *****************
  5032 ;; Defined at:
  5033 ;;		line 28 in file "UUsuaris.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;		None
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;		None
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  1    wreg      void 
  5040 ;; Registers used:
  5041 ;;		None
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMRAM   BANK0   BANK1
  5047 ;;      Params:         0       0       0
  5048 ;;      Locals:         0       0       0
  5049 ;;      Temps:          0       0       0
  5050 ;;      Totals:         0       0       0
  5051 ;;Total ram usage:        0 bytes
  5052 ;; Hardware stack levels used: 1
  5053 ;; Hardware stack levels required when called: 2
  5054 ;; This function calls:
  5055 ;;		Nothing
  5056 ;; This function is called by:
  5057 ;;		_MTMenu
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text27
  5062  001B9A                     __ptext27:
  5063                           	callstack 0
  5064  001B9A                     _UCancelaNouUser:
  5065                           	callstack 27
  5066                           
  5067                           ;UUsuaris.c: 29:     createUser = 0;
  5068                           
  5069                           ;incstack = 0
  5070  001B9A  9078               	bcf	(_createUser/(0+8))^0,_createUser& (0+7),c
  5071  001B9C  0012               	return		;funcret
  5072  001B9E                     __end_of_UCancelaNouUser:
  5073                           	callstack 0
  5074                           
  5075 ;; *************** function _UAfegirLletraUsername *****************
  5076 ;; Defined at:
  5077 ;;		line 85 in file "UUsuaris.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  lletra          1    wreg     unsigned char 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  lletra          1    7[COMRAM] unsigned char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      void 
  5084 ;; Registers used:
  5085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMRAM   BANK0   BANK1
  5091 ;;      Params:         0       0       0
  5092 ;;      Locals:         1       0       0
  5093 ;;      Temps:          2       0       0
  5094 ;;      Totals:         3       0       0
  5095 ;;Total ram usage:        3 bytes
  5096 ;; Hardware stack levels used: 1
  5097 ;; Hardware stack levels required when called: 2
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_MTMenu
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text28
  5106  001752                     __ptext28:
  5107                           	callstack 0
  5108  001752                     _UAfegirLletraUsername:
  5109                           	callstack 27
  5110                           
  5111                           ;incstack = 0
  5112                           ;UAfegirLletraUsername@lletra stored from wreg
  5113  001752  6E62               	movwf	UAfegirLletraUsername@lletra^0,c
  5114                           
  5115                           ;UUsuaris.c: 86:  if(createUser) usuaris[numUsuaris].username[pos]=lletra;
  5116  001754  A078               	btfss	(_createUser/(0+8))^0,_createUser& (0+7),c
  5117  001756  D003               	goto	l4125
  5118  001758  D80D               	call	PL12	;call to abstracted procedure
  5119  00175A  C062  FFDF         	movff	UAfegirLletraUsername@lletra,indf2
  5120  00175E                     l4125:
  5121                           
  5122                           ;UUsuaris.c: 87:  if (lletra != '\0'){
  5123  00175E  5062               	movf	UAfegirLletraUsername@lletra^0,w,c
  5124  001760  E002               	bz	l4129
  5125                           
  5126                           ;UUsuaris.c: 88:         pos++;
  5127  001762  2A24               	incf	_pos^0,f,c
  5128                           
  5129                           ;UUsuaris.c: 89:     }else{
  5130  001764  0012               	return	
  5131  001766                     l4129:
  5132                           
  5133                           ;UUsuaris.c: 90:         usuaris[numUsuaris].username[pos] = '\0';
  5134  001766  D806               	call	PL12	;call to abstracted procedure
  5135  001768  0E00               	movlw	0
  5136  00176A  6ADF               	clrf	indf2,c
  5137                           
  5138                           ;UUsuaris.c: 91:         pos = 0;
  5139  00176C  6A24               	clrf	_pos^0,c
  5140                           
  5141                           ;UUsuaris.c: 92:         createUser = 0;
  5142  00176E  9078               	bcf	(_createUser/(0+8))^0,_createUser& (0+7),c
  5143                           
  5144                           ;UUsuaris.c: 93:         numUsuaris++;
  5145  001770  2A0D               	incf	_numUsuaris^0,f,c
  5146  001772  0012               	return		;funcret
  5147  001774                     __end_of_UAfegirLletraUsername:
  5148                           	callstack 0
  5149  001774                     PL12:
  5150                           	callstack 27
  5151  001774  500D               	movf	_numUsuaris^0,w,c
  5152  001776  0D0C               	mullw	12
  5153  001778  0E00               	movlw	low _usuaris
  5154  00177A  6E60               	movwf	??_UAfegirLletraUsername^0,c
  5155  00177C  0E01               	movlw	high _usuaris
  5156  00177E  6E61               	movwf	(??_UAfegirLletraUsername+1)^0,c
  5157  001780  50F3               	movf	243,w,c
  5158  001782  2660               	addwf	??_UAfegirLletraUsername^0,f,c
  5159  001784  50F4               	movf	244,w,c
  5160  001786  2261               	addwfc	(??_UAfegirLletraUsername+1)^0,f,c
  5161  001788  5024               	movf	_pos^0,w,c
  5162  00178A  2460               	addwf	??_UAfegirLletraUsername^0,w,c
  5163  00178C  6ED9               	movwf	fsr2l,c
  5164  00178E  0E00               	movlw	0
  5165  001790  2061               	addwfc	(??_UAfegirLletraUsername+1)^0,w,c
  5166  001792  6EDA               	movwf	fsr2h,c
  5167  001794  0012               	return	
  5168  001796                     __end_ofPL12:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _SiFerMenu *****************
  5172 ;; Defined at:
  5173 ;;		line 19 in file "GLCDGestioLCD.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		None
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1
  5187 ;;      Params:         0       0       0
  5188 ;;      Locals:         0       0       0
  5189 ;;      Temps:          0       0       0
  5190 ;;      Totals:         0       0       0
  5191 ;;Total ram usage:        0 bytes
  5192 ;; Hardware stack levels used: 1
  5193 ;; Hardware stack levels required when called: 2
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_MTMenu
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text29
  5202  001B9E                     __ptext29:
  5203                           	callstack 0
  5204  001B9E                     _SiFerMenu:
  5205                           	callstack 27
  5206                           
  5207                           ;GLCDGestioLCD.c: 20:     ferMenu = 1;
  5208                           
  5209                           ;incstack = 0
  5210  001B9E  8A78               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5211  001BA0  0012               	return		;funcret
  5212  001BA2                     __end_of_SiFerMenu:
  5213                           	callstack 0
  5214                           
  5215 ;; *************** function _SMSon *****************
  5216 ;; Defined at:
  5217 ;;		line 113 in file "Ssms.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;		None
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      void 
  5224 ;; Registers used:
  5225 ;;		None
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1
  5231 ;;      Params:         0       0       0
  5232 ;;      Locals:         0       0       0
  5233 ;;      Temps:          0       0       0
  5234 ;;      Totals:         0       0       0
  5235 ;;Total ram usage:        0 bytes
  5236 ;; Hardware stack levels used: 1
  5237 ;; Hardware stack levels required when called: 2
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		_MTMenu
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text30
  5246  001B7E                     __ptext30:
  5247                           	callstack 0
  5248  001B7E                     _SMSon:
  5249                           	callstack 27
  5250                           
  5251                           ;Ssms.c: 114:     setSMSon = 1;
  5252                           
  5253                           ;incstack = 0
  5254  001B7E  8278               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5255                           
  5256                           ;Ssms.c: 115:     novaTecla = -1;
  5257  001B80  6845               	setf	_novaTecla^0,c
  5258  001B82  0012               	return		;funcret
  5259  001B84                     __end_of_SMSon:
  5260                           	callstack 0
  5261                           
  5262 ;; *************** function _SMSoff *****************
  5263 ;; Defined at:
  5264 ;;		line 118 in file "Ssms.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;		None
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;		None
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  1    wreg      void 
  5271 ;; Registers used:
  5272 ;;		None
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1
  5278 ;;      Params:         0       0       0
  5279 ;;      Locals:         0       0       0
  5280 ;;      Temps:          0       0       0
  5281 ;;      Totals:         0       0       0
  5282 ;;Total ram usage:        0 bytes
  5283 ;; Hardware stack levels used: 1
  5284 ;; Hardware stack levels required when called: 2
  5285 ;; This function calls:
  5286 ;;		Nothing
  5287 ;; This function is called by:
  5288 ;;		_MTMenu
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text31
  5293  001BA2                     __ptext31:
  5294                           	callstack 0
  5295  001BA2                     _SMSoff:
  5296                           	callstack 27
  5297                           
  5298                           ;Ssms.c: 119:     setSMSon = 0;
  5299                           
  5300                           ;incstack = 0
  5301  001BA2  9278               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5302  001BA4  0012               	return		;funcret
  5303  001BA6                     __end_of_SMSoff:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function _NoFerMenu *****************
  5307 ;; Defined at:
  5308 ;;		line 22 in file "GLCDGestioLCD.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		None
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1
  5322 ;;      Params:         0       0       0
  5323 ;;      Locals:         0       0       0
  5324 ;;      Temps:          0       0       0
  5325 ;;      Totals:         0       0       0
  5326 ;;Total ram usage:        0 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; Hardware stack levels required when called: 2
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_MTMenu
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text32
  5337  001BA6                     __ptext32:
  5338                           	callstack 0
  5339  001BA6                     _NoFerMenu:
  5340                           	callstack 27
  5341                           
  5342                           ;GLCDGestioLCD.c: 23:     ferMenu = 0;
  5343                           
  5344                           ;incstack = 0
  5345  001BA6  9A78               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5346  001BA8  0012               	return		;funcret
  5347  001BAA                     __end_of_NoFerMenu:
  5348                           	callstack 0
  5349                           
  5350 ;; *************** function _LcScroll *****************
  5351 ;; Defined at:
  5352 ;;		line 37 in file "LcTLCD.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;		None
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;		None
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1
  5366 ;;      Params:         0       0       0
  5367 ;;      Locals:         0       0       0
  5368 ;;      Temps:          0       0       0
  5369 ;;      Totals:         0       0       0
  5370 ;;Total ram usage:        0 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 4
  5373 ;; This function calls:
  5374 ;;		_CantaIR
  5375 ;; This function is called by:
  5376 ;;		_MTMenu
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text33
  5381  001B84                     __ptext33:
  5382                           	callstack 0
  5383  001B84                     _LcScroll:
  5384                           	callstack 25
  5385                           
  5386                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5387                           
  5388                           ;incstack = 0
  5389  001B84  0E18               	movlw	24
  5390  001B86  EFDE  F00C         	goto	_CantaIR
  5391  001B8A                     __end_of_LcScroll:
  5392                           	callstack 0
  5393                           
  5394 ;; *************** function _LcCursorOn *****************
  5395 ;; Defined at:
  5396 ;;		line 94 in file "LcTLCD.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;		None
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;		None
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMRAM   BANK0   BANK1
  5410 ;;      Params:         0       0       0
  5411 ;;      Locals:         0       0       0
  5412 ;;      Temps:          0       0       0
  5413 ;;      Totals:         0       0       0
  5414 ;;Total ram usage:        0 bytes
  5415 ;; Hardware stack levels used: 1
  5416 ;; Hardware stack levels required when called: 4
  5417 ;; This function calls:
  5418 ;;		_CantaIR
  5419 ;;		_WaitForBusy
  5420 ;; This function is called by:
  5421 ;;		_MTMenu
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text34
  5426  001B02                     __ptext34:
  5427                           	callstack 0
  5428  001B02                     _LcCursorOn:
  5429                           	callstack 25
  5430                           
  5431                           ;LcTLCD.c: 97:  WaitForBusy();
  5432                           
  5433                           ;incstack = 0
  5434  001B02  ECEC  F00B         	call	_WaitForBusy	;wreg free
  5435                           
  5436                           ;LcTLCD.c: 98:  CantaIR(0x08 | 0x04 | 0x02);
  5437  001B06  0E0E               	movlw	14
  5438  001B08  EFDE  F00C         	goto	_CantaIR
  5439  001B0C                     __end_of_LcCursorOn:
  5440                           	callstack 0
  5441                           
  5442 ;; *************** function _JUsuari *****************
  5443 ;; Defined at:
  5444 ;;		line 13 in file "JJoc.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      char 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMRAM   BANK0   BANK1
  5458 ;;      Params:         0       0       0
  5459 ;;      Locals:         0       0       0
  5460 ;;      Temps:          0       0       0
  5461 ;;      Totals:         0       0       0
  5462 ;;Total ram usage:        0 bytes
  5463 ;; Hardware stack levels used: 1
  5464 ;; Hardware stack levels required when called: 2
  5465 ;; This function calls:
  5466 ;;		Nothing
  5467 ;; This function is called by:
  5468 ;;		_MTMenu
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           	psect	text35
  5473  001BAA                     __ptext35:
  5474                           	callstack 0
  5475  001BAA                     _JUsuari:
  5476                           	callstack 27
  5477                           
  5478                           ;JJoc.c: 14:     return usuariActual;
  5479                           
  5480                           ;incstack = 0
  5481  001BAA  5041               	movf	_usuariActual^0,w,c
  5482  001BAC  0012               	return		;funcret
  5483  001BAE                     __end_of_JUsuari:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _JJuguem *****************
  5487 ;; Defined at:
  5488 ;;		line 51 in file "JJoc.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  usuari          1    wreg     unsigned char 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  usuari          1    5[COMRAM] unsigned char 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		wreg
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1
  5502 ;;      Params:         0       0       0
  5503 ;;      Locals:         1       0       0
  5504 ;;      Temps:          0       0       0
  5505 ;;      Totals:         1       0       0
  5506 ;;Total ram usage:        1 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; Hardware stack levels required when called: 2
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		_MTMenu
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text36
  5517  001B56                     __ptext36:
  5518                           	callstack 0
  5519  001B56                     _JJuguem:
  5520                           	callstack 27
  5521                           
  5522                           ;incstack = 0
  5523                           ;JJuguem@usuari stored from wreg
  5524  001B56  6E60               	movwf	JJuguem@usuari^0,c
  5525                           
  5526                           ;JJoc.c: 52:     usuariActual = usuari;
  5527  001B58  C060  F041         	movff	JJuguem@usuari,_usuariActual
  5528  001B5C  0012               	return		;funcret
  5529  001B5E                     __end_of_JJuguem:
  5530                           	callstack 0
  5531                           
  5532 ;; *************** function _HNouMinut *****************
  5533 ;; Defined at:
  5534 ;;		line 16 in file "HHora.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;		None               void
  5541 ;; Registers used:
  5542 ;;		status,0
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1
  5548 ;;      Params:         0       0       0
  5549 ;;      Locals:         0       0       0
  5550 ;;      Temps:          0       0       0
  5551 ;;      Totals:         0       0       0
  5552 ;;Total ram usage:        0 bytes
  5553 ;; Hardware stack levels used: 1
  5554 ;; Hardware stack levels required when called: 2
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_MTMenu
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text37
  5563  001A8E                     __ptext37:
  5564                           	callstack 0
  5565  001A8E                     _HNouMinut:
  5566                           	callstack 27
  5567                           
  5568                           ;HHora.c: 17:     return nouMinut;
  5569                           
  5570                           ;incstack = 0
  5571  001A8E  B678               	btfsc	(_nouMinut/(0+8))^0,_nouMinut& (0+7),c
  5572  001A90  D002               	goto	l4101
  5573  001A92  90D8               	bcf	status,0,c
  5574  001A94  0012               	return	
  5575  001A96                     l4101:
  5576  001A96  80D8               	bsf	status,0,c
  5577  001A98  0012               	return		;funcret
  5578  001A9A                     __end_of_HNouMinut:
  5579                           	callstack 0
  5580                           
  5581 ;; *************** function _HNoJuguem *****************
  5582 ;; Defined at:
  5583 ;;		line 117 in file "HHora.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;		None
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  1    wreg      void 
  5590 ;; Registers used:
  5591 ;;		None
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1
  5597 ;;      Params:         0       0       0
  5598 ;;      Locals:         0       0       0
  5599 ;;      Temps:          0       0       0
  5600 ;;      Totals:         0       0       0
  5601 ;;Total ram usage:        0 bytes
  5602 ;; Hardware stack levels used: 1
  5603 ;; Hardware stack levels required when called: 2
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_MTMenu
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text38
  5612  001BCA                     __ptext38:
  5613                           	callstack 0
  5614  001BCA                     _HNoJuguem:
  5615                           	callstack 27
  5616                           
  5617                           ;incstack = 0
  5618  001BCA  0012               	return		;funcret
  5619  001BCC                     __end_of_HNoJuguem:
  5620                           	callstack 0
  5621                           
  5622 ;; *************** function _HJuguem *****************
  5623 ;; Defined at:
  5624 ;;		line 109 in file "HHora.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1
  5638 ;;      Params:         0       0       0
  5639 ;;      Locals:         0       0       0
  5640 ;;      Temps:          0       0       0
  5641 ;;      Totals:         0       0       0
  5642 ;;Total ram usage:        0 bytes
  5643 ;; Hardware stack levels used: 1
  5644 ;; Hardware stack levels required when called: 2
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_MTMenu
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text39
  5653  001A9A                     __ptext39:
  5654                           	callstack 0
  5655  001A9A                     _HJuguem:
  5656                           	callstack 27
  5657                           
  5658                           ;HHora.c: 111:     tempsJugant[0] = '0';
  5659                           
  5660                           ;incstack = 0
  5661  001A9A  0E30               	movlw	48
  5662  001A9C  6E4B               	movwf	_tempsJugant^0,c
  5663                           
  5664                           ;HHora.c: 112:     tempsJugant[1] = '0';
  5665  001A9E  6E4C               	movwf	(_tempsJugant+1)^0,c
  5666                           
  5667                           ;HHora.c: 113:     tempsJugant[3] = '0';
  5668  001AA0  6E4E               	movwf	(_tempsJugant+3)^0,c
  5669                           
  5670                           ;HHora.c: 114:     tempsJugant[4] = '0';
  5671  001AA2  6E4F               	movwf	(_tempsJugant+4)^0,c
  5672  001AA4  0C30               	retlw	48	;funcret
  5673  001AA6                     __end_of_HJuguem:
  5674                           	callstack 0
  5675                           
  5676 ;; *************** function _HGetTime *****************
  5677 ;; Defined at:
  5678 ;;		line 85 in file "HHora.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;		None
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;		None
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      PTR unsigned char 
  5685 ;; Registers used:
  5686 ;;		wreg
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMRAM   BANK0   BANK1
  5692 ;;      Params:         2       0       0
  5693 ;;      Locals:         0       0       0
  5694 ;;      Temps:          0       0       0
  5695 ;;      Totals:         2       0       0
  5696 ;;Total ram usage:        2 bytes
  5697 ;; Hardware stack levels used: 1
  5698 ;; Hardware stack levels required when called: 2
  5699 ;; This function calls:
  5700 ;;		Nothing
  5701 ;; This function is called by:
  5702 ;;		_MTMenu
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text40
  5707  001BAE                     __ptext40:
  5708                           	callstack 0
  5709  001BAE                     _HGetTime:
  5710                           	callstack 27
  5711                           
  5712                           ;HHora.c: 86:     return string;
  5713                           
  5714                           ;incstack = 0
  5715  001BAE  0E51               	movlw	_string& (0+255)
  5716  001BB0  0012               	return		;funcret
  5717  001BB2                     __end_of_HGetTime:
  5718                           	callstack 0
  5719                           
  5720 ;; *************** function _HClearNouMinut *****************
  5721 ;; Defined at:
  5722 ;;		line 20 in file "HHora.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;		None
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;		None
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		None
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1
  5736 ;;      Params:         0       0       0
  5737 ;;      Locals:         0       0       0
  5738 ;;      Temps:          0       0       0
  5739 ;;      Totals:         0       0       0
  5740 ;;Total ram usage:        0 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; Hardware stack levels required when called: 2
  5743 ;; This function calls:
  5744 ;;		Nothing
  5745 ;; This function is called by:
  5746 ;;		_MTMenu
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text41
  5751  001BB2                     __ptext41:
  5752                           	callstack 0
  5753  001BB2                     _HClearNouMinut:
  5754                           	callstack 27
  5755                           
  5756                           ;HHora.c: 21:     nouMinut = 0;
  5757                           
  5758                           ;incstack = 0
  5759  001BB2  9678               	bcf	(_nouMinut/(0+8))^0,_nouMinut& (0+7),c
  5760  001BB4  0012               	return		;funcret
  5761  001BB6                     __end_of_HClearNouMinut:
  5762                           	callstack 0
  5763                           
  5764 ;; *************** function _HActualitzarHora *****************
  5765 ;; Defined at:
  5766 ;;		line 94 in file "HHora.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5769 ;;		 -> horaTmp(5), 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;		None
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1    wreg      void 
  5774 ;; Registers used:
  5775 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1
  5781 ;;      Params:         1       0       0
  5782 ;;      Locals:         0       0       0
  5783 ;;      Temps:          0       0       0
  5784 ;;      Totals:         1       0       0
  5785 ;;Total ram usage:        1 bytes
  5786 ;; Hardware stack levels used: 1
  5787 ;; Hardware stack levels required when called: 2
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_MTMenu
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text42
  5796  00184E                     __ptext42:
  5797                           	callstack 0
  5798  00184E                     _HActualitzarHora:
  5799                           	callstack 27
  5800                           
  5801                           ;HHora.c: 95:     string[0] = nova[0];
  5802                           
  5803                           ;incstack = 0
  5804  00184E  5060               	movf	HActualitzarHora@nova^0,w,c
  5805  001850  6ED9               	movwf	fsr2l,c
  5806  001852  6ADA               	clrf	fsr2h,c
  5807  001854  50DF               	movf	indf2,w,c
  5808  001856  6E51               	movwf	_string^0,c
  5809                           
  5810                           ;HHora.c: 96:     string[1] = nova[1];
  5811  001858  5060               	movf	HActualitzarHora@nova^0,w,c
  5812  00185A  6ED9               	movwf	fsr2l,c
  5813  00185C  6ADA               	clrf	fsr2h,c
  5814  00185E  2AD9               	incf	fsr2l,f,c
  5815  001860  50DF               	movf	indf2,w,c
  5816  001862  6E52               	movwf	(_string+1)^0,c
  5817                           
  5818                           ;HHora.c: 97:     string[3] = nova[2];
  5819  001864  5060               	movf	HActualitzarHora@nova^0,w,c
  5820  001866  6ED9               	movwf	fsr2l,c
  5821  001868  6ADA               	clrf	fsr2h,c
  5822  00186A  0E02               	movlw	2
  5823  00186C  26D9               	addwf	fsr2l,f,c
  5824  00186E  50DF               	movf	indf2,w,c
  5825  001870  6E54               	movwf	(_string+3)^0,c
  5826                           
  5827                           ;HHora.c: 98:     string[4] = nova[3];
  5828  001872  5060               	movf	HActualitzarHora@nova^0,w,c
  5829  001874  6ED9               	movwf	fsr2l,c
  5830  001876  6ADA               	clrf	fsr2h,c
  5831  001878  0E03               	movlw	3
  5832  00187A  26D9               	addwf	fsr2l,f,c
  5833  00187C  50DF               	movf	indf2,w,c
  5834  00187E  6E55               	movwf	(_string+4)^0,c
  5835  001880  0012               	return		;funcret
  5836  001882                     __end_of_HActualitzarHora:
  5837                           	callstack 0
  5838                           
  5839 ;; *************** function _GLCDMostraMenu *****************
  5840 ;; Defined at:
  5841 ;;		line 30 in file "GLCDGestioLCD.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;  num             1    wreg     unsigned char 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  num             1    5[COMRAM] unsigned char 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      void 
  5848 ;; Registers used:
  5849 ;;		wreg
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1
  5855 ;;      Params:         0       0       0
  5856 ;;      Locals:         1       0       0
  5857 ;;      Temps:          0       0       0
  5858 ;;      Totals:         1       0       0
  5859 ;;Total ram usage:        1 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; Hardware stack levels required when called: 2
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_MTMenu
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text43
  5870  001AA6                     __ptext43:
  5871                           	callstack 0
  5872  001AA6                     _GLCDMostraMenu:
  5873                           	callstack 27
  5874                           
  5875                           ;incstack = 0
  5876                           ;GLCDMostraMenu@num stored from wreg
  5877  001AA6  6E60               	movwf	GLCDMostraMenu@num^0,c
  5878                           
  5879                           ;GLCDGestioLCD.c: 31:     newString = 1;
  5880  001AA8  8878               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5881                           
  5882                           ;GLCDGestioLCD.c: 32:     menuDalt = num;
  5883  001AAA  C060  F025         	movff	GLCDMostraMenu@num,_menuDalt
  5884                           
  5885                           ;GLCDGestioLCD.c: 33:     ferMenu = 1;
  5886  001AAE  8A78               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5887  001AB0  0012               	return		;funcret
  5888  001AB2                     __end_of_GLCDMostraMenu:
  5889                           	callstack 0
  5890                           
  5891 ;; *************** function _LcLCD *****************
  5892 ;; Defined at:
  5893 ;;		line 272 in file "LcTLCD.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;		None
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1    wreg      void 
  5900 ;; Registers used:
  5901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1
  5907 ;;      Params:         0       0       0
  5908 ;;      Locals:         0       0       0
  5909 ;;      Temps:          0       0       0
  5910 ;;      Totals:         0       0       0
  5911 ;;Total ram usage:        0 bytes
  5912 ;; Hardware stack levels used: 1
  5913 ;; Hardware stack levels required when called: 6
  5914 ;; This function calls:
  5915 ;;		_LcPutChar
  5916 ;; This function is called by:
  5917 ;;		_main
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text44
  5922  001702                     __ptext44:
  5923                           	callstack 0
  5924  001702                     _LcLCD:
  5925                           	callstack 24
  5926                           
  5927                           ;LcTLCD.c: 273:     if(nou_s == 1){
  5928                           
  5929                           ;incstack = 0
  5930  001702  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5931  001704  0012               	return	
  5932                           
  5933                           ;LcTLCD.c: 274:         LcPutChar(*s_ptr);
  5934  001706  D818               	call	PL34	;call to abstracted procedure
  5935  001708  64F7               	cpfsgt	tblptrh,c
  5936  00170A  D003               	bra	u6067
  5937  00170C  0008               	tblrd		*
  5938  00170E  50F5               	movf	tablat,w,c
  5939  001710  D001               	bra	u6060
  5940  001712                     u6067:
  5941  001712  D819               	call	PL48	;call to abstracted procedure
  5942  001714                     u6060:
  5943  001714  EC2D  F00B         	call	_LcPutChar
  5944                           
  5945                           ;LcTLCD.c: 275:         s_ptr++;
  5946  001718  4A05               	infsnz	_s_ptr^0,f,c
  5947  00171A  2A06               	incf	(_s_ptr+1)^0,f,c
  5948                           
  5949                           ;LcTLCD.c: 276:         if(*s_ptr == '\0'){
  5950  00171C  D80D               	call	PL34	;call to abstracted procedure
  5951  00171E  64F7               	cpfsgt	tblptrh,c
  5952  001720  D003               	bra	u6077
  5953  001722  0008               	tblrd		*
  5954  001724  50F5               	movf	tablat,w,c
  5955  001726  D001               	bra	u6070
  5956  001728                     u6077:
  5957  001728  D80E               	call	PL48	;call to abstracted procedure
  5958  00172A                     u6070:
  5959  00172A  0900               	iorlw	0
  5960  00172C  A4D8               	btfss	status,2,c
  5961  00172E  0012               	return	
  5962                           
  5963                           ;LcTLCD.c: 277:             nou_s = 0;
  5964  001730  9079               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5965                           
  5966                           ;LcTLCD.c: 278:             s_ptr=0;
  5967  001732  6A05               	clrf	_s_ptr^0,c
  5968  001734  6A06               	clrf	(_s_ptr+1)^0,c
  5969  001736  0012               	return		;funcret
  5970  001738                     __end_of_LcLCD:
  5971                           	callstack 0
  5972  001738                     PL34:
  5973                           	callstack 24
  5974  001738  C005  FFF6         	movff	_s_ptr,tblptrl
  5975  00173C  C006  FFF7         	movff	_s_ptr+1,tblptrh
  5976  001740  6AF8               	clrf	tblptru,c
  5977  001742  0E01               	movlw	(high __ramtop+-1)
  5978  001744  0012               	return	
  5979  001746                     __end_ofPL34:
  5980                           	callstack 0
  5981  001746                     PL48:
  5982                           	callstack 24
  5983  001746  CFF6 FFE1          	movff	tblptrl,fsr1l
  5984  00174A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5985  00174E  50E7               	movf	indf1,w,c
  5986  001750  0012               	return	
  5987  001752                     __end_ofPL48:
  5988                           	callstack 0
  5989                           
  5990 ;; *************** function _LcInit *****************
  5991 ;; Defined at:
  5992 ;;		line 41 in file "LcTLCD.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  rows            1    wreg     unsigned char 
  5995 ;;  columns         1   16[COMRAM] unsigned char 
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;  rows            1   17[COMRAM] unsigned char 
  5998 ;;  i               2   18[COMRAM] int 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1
  6008 ;;      Params:         1       0       0
  6009 ;;      Locals:         3       0       0
  6010 ;;      Temps:          0       0       0
  6011 ;;      Totals:         4       0       0
  6012 ;;Total ram usage:        4 bytes
  6013 ;; Hardware stack levels used: 1
  6014 ;; Hardware stack levels required when called: 5
  6015 ;; This function calls:
  6016 ;;		_CantaIR
  6017 ;;		_EscriuPrimeraOrdre
  6018 ;;		_Espera
  6019 ;;		_LcCursorOff
  6020 ;;		_TiGetTimer
  6021 ;;		_WaitForBusy
  6022 ;; This function is called by:
  6023 ;;		_main
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text45
  6028  00104C                     __ptext45:
  6029                           	callstack 0
  6030  00104C                     _LcInit:
  6031                           	callstack 25
  6032                           
  6033                           ;incstack = 0
  6034                           ;LcInit@rows stored from wreg
  6035  00104C  6E6C               	movwf	LcInit@rows^0,c
  6036                           
  6037                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  6038  00104E  EC41  F00C         	call	_TiGetTimer	;wreg free
  6039  001052  6E2B               	movwf	_Timer^0,c
  6040                           
  6041                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  6042  001054  C06C  F02F         	movff	LcInit@rows,_Rows
  6043  001058  C06B  F02E         	movff	LcInit@columns,_Columns
  6044                           
  6045                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  6046  00105C  6A2C               	clrf	_ColumnAct^0,c
  6047  00105E  6A2D               	clrf	_RowAct^0,c
  6048                           
  6049                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  6050  001060  9894               	bcf	148,4,c	;volatile
  6051  001062  9E95               	bcf	149,7,c	;volatile
  6052  001064  9A94               	bcf	148,5,c	;volatile
  6053                           
  6054                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  6055  001066  6A6D               	clrf	LcInit@i^0,c
  6056  001068  6A6E               	clrf	(LcInit@i+1)^0,c
  6057  00106A                     l4247:
  6058                           
  6059                           ;LcTLCD.c: 53:   Espera(Timer, 200);
  6060  00106A  6A68               	clrf	(Espera@ms+1)^0,c
  6061  00106C  0EC8               	movlw	200
  6062  00106E  6E67               	movwf	Espera@ms^0,c
  6063  001070  502B               	movf	_Timer^0,w,c
  6064  001072  ECCD  F00C         	call	_Espera
  6065                           
  6066                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  6067  001076  0E03               	movlw	3
  6068  001078  EC1C  F00A         	call	_EscriuPrimeraOrdre
  6069                           
  6070                           ;LcTLCD.c: 57:   Espera(Timer, 10);
  6071  00107C  6A68               	clrf	(Espera@ms+1)^0,c
  6072  00107E  0E0A               	movlw	10
  6073  001080  6E67               	movwf	Espera@ms^0,c
  6074  001082  502B               	movf	_Timer^0,w,c
  6075  001084  ECCD  F00C         	call	_Espera
  6076                           
  6077                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  6078  001088  0E03               	movlw	3
  6079  00108A  EC1C  F00A         	call	_EscriuPrimeraOrdre
  6080                           
  6081                           ;LcTLCD.c: 59:   Espera(Timer, 2);
  6082  00108E  D836               	call	PL42	;call to abstracted procedure
  6083  001090  ECCD  F00C         	call	_Espera
  6084                           
  6085                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  6086  001094  0E03               	movlw	3
  6087  001096  EC1C  F00A         	call	_EscriuPrimeraOrdre
  6088                           
  6089                           ;LcTLCD.c: 61:   Espera(Timer, 2);
  6090  00109A  D830               	call	PL42	;call to abstracted procedure
  6091  00109C  ECCD  F00C         	call	_Espera
  6092                           
  6093                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  6094  0010A0  0E02               	movlw	2
  6095  0010A2  EC1C  F00A         	call	_EscriuPrimeraOrdre
  6096                           
  6097                           ;LcTLCD.c: 65:   Espera(Timer, 2);
  6098  0010A6  D82A               	call	PL42	;call to abstracted procedure
  6099  0010A8  ECCD  F00C         	call	_Espera
  6100                           
  6101                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  6102  0010AC  0E28               	movlw	40
  6103  0010AE  ECDE  F00C         	call	_CantaIR
  6104                           
  6105                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  6106  0010B2  ECEC  F00B         	call	_WaitForBusy	;wreg free
  6107  0010B6  0E08               	movlw	8
  6108  0010B8  ECDE  F00C         	call	_CantaIR
  6109                           
  6110                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  6111  0010BC  ECEC  F00B         	call	_WaitForBusy	;wreg free
  6112  0010C0  0E01               	movlw	1
  6113  0010C2  ECDE  F00C         	call	_CantaIR
  6114                           
  6115                           ;LcTLCD.c: 71:   Espera(Timer,6);
  6116  0010C6  EC02  F00D         	call	PL58	;call to abstracted procedure
  6117  0010CA  ECCD  F00C         	call	_Espera
  6118                           
  6119                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  6120  0010CE  ECEC  F00B         	call	_WaitForBusy	;wreg free
  6121  0010D2  0E06               	movlw	6
  6122  0010D4  ECDE  F00C         	call	_CantaIR
  6123                           
  6124                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  6125  0010D8  ECEC  F00B         	call	_WaitForBusy	;wreg free
  6126  0010DC  0E0F               	movlw	15
  6127  0010DE  ECDE  F00C         	call	_CantaIR
  6128                           
  6129                           ;LcTLCD.c: 74:  }
  6130  0010E2  4A6D               	infsnz	LcInit@i^0,f,c
  6131  0010E4  2A6E               	incf	(LcInit@i+1)^0,f,c
  6132  0010E6  BE6E               	btfsc	(LcInit@i+1)^0,7,c
  6133  0010E8  D7C0               	goto	l4247
  6134  0010EA  506E               	movf	(LcInit@i+1)^0,w,c
  6135  0010EC  E002 EF86  F00D    	bnz	_LcCursorOff
  6136  0010F2  0E02               	movlw	2
  6137  0010F4  5C6D               	subwf	LcInit@i^0,w,c
  6138  0010F6  E3B9               	bnc	l4247
  6139                           
  6140                           ;LcTLCD.c: 79:     LcCursorOff();
  6141  0010F8  EF86  F00D         	goto	_LcCursorOff	;wreg free
  6142  0010FC                     __end_of_LcInit:
  6143                           	callstack 0
  6144  0010FC                     PL42:
  6145                           	callstack 25
  6146  0010FC  6A68               	clrf	(Espera@ms+1)^0,c
  6147  0010FE  0E02               	movlw	2
  6148  001100  6E67               	movwf	Espera@ms^0,c
  6149  001102  502B               	movf	_Timer^0,w,c
  6150  001104  0012               	return	
  6151  001106                     __end_ofPL42:
  6152                           	callstack 0
  6153                           
  6154 ;; *************** function _LcCursorOff *****************
  6155 ;; Defined at:
  6156 ;;		line 101 in file "LcTLCD.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;		None
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  1    wreg      void 
  6163 ;; Registers used:
  6164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1
  6170 ;;      Params:         0       0       0
  6171 ;;      Locals:         0       0       0
  6172 ;;      Temps:          0       0       0
  6173 ;;      Totals:         0       0       0
  6174 ;;Total ram usage:        0 bytes
  6175 ;; Hardware stack levels used: 1
  6176 ;; Hardware stack levels required when called: 4
  6177 ;; This function calls:
  6178 ;;		_CantaIR
  6179 ;;		_WaitForBusy
  6180 ;; This function is called by:
  6181 ;;		_LcInit
  6182 ;;		_MTMenu
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text46
  6187  001B0C                     __ptext46:
  6188                           	callstack 0
  6189  001B0C                     _LcCursorOff:
  6190                           	callstack 25
  6191                           
  6192                           ;LcTLCD.c: 104:  WaitForBusy();
  6193                           
  6194                           ;incstack = 0
  6195  001B0C  ECEC  F00B         	call	_WaitForBusy	;wreg free
  6196                           
  6197                           ;LcTLCD.c: 105:  CantaIR(0x08 | 0x04);
  6198  001B10  0E0C               	movlw	12
  6199  001B12  EFDE  F00C         	goto	_CantaIR
  6200  001B16                     __end_of_LcCursorOff:
  6201                           	callstack 0
  6202                           
  6203 ;; *************** function _EscriuPrimeraOrdre *****************
  6204 ;; Defined at:
  6205 ;;		line 237 in file "LcTLCD.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  ordre           1    wreg     unsigned char 
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;  ordre           1    6[COMRAM] unsigned char 
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1    wreg      void 
  6212 ;; Registers used:
  6213 ;;		wreg, status,2, status,0
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1
  6219 ;;      Params:         0       0       0
  6220 ;;      Locals:         1       0       0
  6221 ;;      Temps:          1       0       0
  6222 ;;      Totals:         2       0       0
  6223 ;;Total ram usage:        2 bytes
  6224 ;; Hardware stack levels used: 1
  6225 ;; Hardware stack levels required when called: 2
  6226 ;; This function calls:
  6227 ;;		Nothing
  6228 ;; This function is called by:
  6229 ;;		_LcInit
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text47
  6234  001438                     __ptext47:
  6235                           	callstack 0
  6236  001438                     _EscriuPrimeraOrdre:
  6237                           	callstack 27
  6238                           
  6239                           ;incstack = 0
  6240                           ;EscriuPrimeraOrdre@ordre stored from wreg
  6241  001438  6E61               	movwf	EscriuPrimeraOrdre@ordre^0,c
  6242                           
  6243                           ;LcTLCD.c: 239:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  6244  00143A  9694               	bcf	148,3,c	;volatile
  6245                           
  6246                           ;LcTLCD.c: 240:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  6247  00143C  D82F               	call	PL40	;call to abstracted procedure
  6248  00143E  888B               	bsf	139,4,c	;volatile
  6249                           
  6250                           ;LcTLCD.c: 241:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  6251  001440  A661               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  6252  001442  D003               	goto	u340
  6253  001444  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6254  001446  2A60               	incf	??_EscriuPrimeraOrdre^0,f,c
  6255  001448  D001               	goto	u358
  6256  00144A                     u340:
  6257  00144A  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6258  00144C                     u358:
  6259  00144C  4660               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6260  00144E  D82D               	call	PL66	;call to abstracted procedure
  6261  001450  0BF7               	andlw	-9
  6262  001452  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6263  001454  6E8B               	movwf	139,c	;volatile
  6264                           
  6265                           ;LcTLCD.c: 242:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  6266  001456  A461               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  6267  001458  D003               	goto	u360
  6268  00145A  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6269  00145C  2A60               	incf	??_EscriuPrimeraOrdre^0,f,c
  6270  00145E  D001               	goto	u378
  6271  001460                     u360:
  6272  001460  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6273  001462                     u378:
  6274  001462  D823               	call	PL66	;call to abstracted procedure
  6275  001464  0BFB               	andlw	-5
  6276  001466  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6277  001468  6E8B               	movwf	139,c	;volatile
  6278                           
  6279                           ;LcTLCD.c: 243:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  6280  00146A  A261               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  6281  00146C  D003               	goto	u380
  6282  00146E  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6283  001470  2A60               	incf	??_EscriuPrimeraOrdre^0,f,c
  6284  001472  D001               	goto	u398
  6285  001474                     u380:
  6286  001474  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6287  001476                     u398:
  6288  001476  4660               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6289  001478  508B               	movf	139,w,c	;volatile
  6290  00147A  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6291  00147C  0BFD               	andlw	-3
  6292  00147E  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6293  001480  6E8B               	movwf	139,c	;volatile
  6294                           
  6295                           ;LcTLCD.c: 244:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  6296  001482  A061               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  6297  001484  D003               	goto	u400
  6298  001486  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6299  001488  2A60               	incf	??_EscriuPrimeraOrdre^0,f,c
  6300  00148A  D001               	goto	u418
  6301  00148C                     u400:
  6302  00148C  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6303  00148E                     u418:
  6304  00148E  508B               	movf	139,w,c	;volatile
  6305  001490  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6306  001492  0BFE               	andlw	-2
  6307  001494  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6308  001496  6E8B               	movwf	139,c	;volatile
  6309                           
  6310                           ;LcTLCD.c: 245:  (LATCbits.LATC4 = 0);
  6311  001498  988B               	bcf	139,4,c	;volatile
  6312  00149A  0012               	return		;funcret
  6313  00149C                     __end_of_EscriuPrimeraOrdre:
  6314                           	callstack 0
  6315  00149C                     PL40:
  6316                           	callstack 24
  6317  00149C  9494               	bcf	148,2,c	;volatile
  6318  00149E  9294               	bcf	148,1,c	;volatile
  6319  0014A0  9094               	bcf	148,0,c	;volatile
  6320  0014A2  9A8B               	bcf	139,5,c	;volatile
  6321  0014A4  9E8C               	bcf	140,7,c	;volatile
  6322  0014A6  888B               	bsf	139,4,c	;volatile
  6323  0014A8  0012               	return	
  6324  0014AA                     __end_ofPL40:
  6325                           	callstack 0
  6326  0014AA                     PL66:
  6327                           	callstack 27
  6328  0014AA  4660               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6329  0014AC  4660               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6330  0014AE  508B               	movf	139,w,c	;volatile
  6331  0014B0  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6332  0014B2  0012               	return	
  6333  0014B4                     __end_ofPL66:
  6334                           	callstack 0
  6335                           
  6336 ;; *************** function _JMotor *****************
  6337 ;; Defined at:
  6338 ;;		line 17 in file "JJoc.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;		None
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      void 
  6345 ;; Registers used:
  6346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1
  6352 ;;      Params:         0       0       0
  6353 ;;      Locals:         0       0       0
  6354 ;;      Temps:          2       0       0
  6355 ;;      Totals:         2       0       0
  6356 ;;Total ram usage:        2 bytes
  6357 ;; Hardware stack levels used: 1
  6358 ;; Hardware stack levels required when called: 5
  6359 ;; This function calls:
  6360 ;;		_AlPlay
  6361 ;;		_AlStop
  6362 ;;		_HClearNouSegon
  6363 ;;		_HNouSegon
  6364 ;;		_HTempsJocs
  6365 ;;		_LcGotoXY
  6366 ;;		_LcLliure
  6367 ;;		_LcNewString
  6368 ;;		_SIONovaDireccio
  6369 ;;		_SIOStartGame
  6370 ;;		_SIOUsuariActual
  6371 ;; This function is called by:
  6372 ;;		_main
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text48
  6377  00130C                     __ptext48:
  6378                           	callstack 0
  6379  00130C                     _JMotor:
  6380                           	callstack 25
  6381                           
  6382                           ;JJoc.c: 18:     static char state = 0;;JJoc.c: 20:  switch(state) {
  6383                           
  6384                           ;incstack = 0
  6385  00130C  D040               	goto	l5241
  6386  00130E                     l5199:
  6387                           
  6388                           ;JJoc.c: 22:    if (usuariActual != -1 && LcLliure()) {
  6389  00130E  2841               	incf	_usuariActual^0,w,c
  6390  001310  B4D8               	btfsc	status,2,c
  6391  001312  0012               	return	
  6392  001314  EC71  F00D         	call	_LcLliure	;wreg free
  6393  001318  A0D8               	btfss	status,0,c
  6394  00131A  0012               	return	
  6395                           
  6396                           ;JJoc.c: 23:     SIOStartGame(usuariActual);
  6397  00131C  5041               	movf	_usuariActual^0,w,c
  6398  00131E  ECAF  F00D         	call	_SIOStartGame
  6399                           
  6400                           ;JJoc.c: 24:     AlPlay();
  6401  001322  ECE3  F00D         	call	_AlPlay	;wreg free
  6402                           
  6403                           ;JJoc.c: 25:     LcGotoXY(0,1);
  6404  001326  EC51  F004         	call	PL32	;call to abstracted procedure
  6405  00132A  ECD2  F009         	call	_LcGotoXY
  6406                           
  6407                           ;JJoc.c: 26:     LcNewString(stringText);
  6408  00132E  0E4F               	movlw	low _stringText
  6409  001330  6E63               	movwf	LcNewString@new_s^0,c
  6410  001332  0E1D               	movlw	high _stringText
  6411  001334  6E64               	movwf	(LcNewString@new_s+1)^0,c
  6412  001336  EC6B  F00D         	call	_LcNewString	;wreg free
  6413                           
  6414                           ;JJoc.c: 27:     state++;
  6415  00133A  2A0A               	incf	JMotor@state^0,f,c
  6416  00133C  0012               	return	
  6417  00133E                     l5213:
  6418                           
  6419                           ;JJoc.c: 31:             if (SIOUsuariActual() == -1) {
  6420  00133E  ECDB  F00D         	call	_SIOUsuariActual	;wreg free
  6421  001342  0AFF               	xorlw	255
  6422  001344  E105               	bnz	l5221
  6423                           
  6424                           ;JJoc.c: 32:     AlStop();
  6425  001346  ECE1  F00D         	call	_AlStop	;wreg free
  6426                           
  6427                           ;JJoc.c: 33:     usuariActual = -1;
  6428  00134A  6841               	setf	_usuariActual^0,c
  6429                           
  6430                           ;JJoc.c: 34:     state--;
  6431  00134C  060A               	decf	JMotor@state^0,f,c
  6432                           
  6433                           ;JJoc.c: 35:    } else if (HNouSegon() && LcLliure()) {
  6434  00134E  0012               	return	
  6435  001350                     l5221:
  6436  001350  EC59  F00D         	call	_HNouSegon	;wreg free
  6437  001354  E315               	bnc	l5233
  6438  001356  EC71  F00D         	call	_LcLliure	;wreg free
  6439  00135A  E312               	bnc	l5233
  6440                           
  6441                           ;JJoc.c: 36:     HClearNouSegon();
  6442  00135C  ECDF  F00D         	call	_HClearNouSegon	;wreg free
  6443                           
  6444                           ;JJoc.c: 37:     LcGotoXY(2,1);
  6445  001360  0E01               	movlw	1
  6446  001362  6E68               	movwf	LcGotoXY@Row^0,c
  6447  001364  0E02               	movlw	2
  6448  001366  ECD2  F009         	call	_LcGotoXY
  6449                           
  6450                           ;JJoc.c: 38:     LcNewString(HTempsJocs());
  6451  00136A  ECDD  F00D         	call	_HTempsJocs	;wreg free
  6452  00136E  6E70               	movwf	??_JMotor^0,c
  6453  001370  C070  F063         	movff	??_JMotor,LcNewString@new_s
  6454  001374  6A64               	clrf	(LcNewString@new_s+1)^0,c
  6455  001376  EC6B  F00D         	call	_LcNewString	;wreg free
  6456                           
  6457                           ;JJoc.c: 39:     SIONovaDireccio(12);
  6458  00137A  0E0C               	movlw	12
  6459  00137C  EFB3  F00D         	goto	_SIONovaDireccio
  6460  001380                     l5233:
  6461  001380  BE0B               	btfsc	_novaDireccio^0,7,c
  6462  001382  0012               	return	
  6463                           
  6464                           ;JJoc.c: 42:     SIONovaDireccio(novaDireccio);
  6465  001384  500B               	movf	_novaDireccio^0,w,c
  6466  001386  ECB3  F00D         	call	_SIONovaDireccio
  6467                           
  6468                           ;JJoc.c: 43:     novaDireccio = -1;
  6469  00138A  680B               	setf	_novaDireccio^0,c
  6470  00138C  0012               	return	
  6471  00138E                     l5241:
  6472  00138E  500A               	movf	JMotor@state^0,w,c
  6473  001390  6E70               	movwf	??_JMotor^0,c
  6474  001392  6A71               	clrf	(??_JMotor+1)^0,c
  6475                           
  6476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6477                           ; Switch size 1, requested type "space"
  6478                           ; Number of cases is 1, Range of values is 0 to 0
  6479                           ; switch strategies available:
  6480                           ; Name         Instructions Cycles
  6481                           ; simple_byte            4     3 (average)
  6482                           ;	Chosen strategy is simple_byte
  6483  001394  5071               	movf	(??_JMotor+1)^0,w,c
  6484  001396  A4D8               	btfss	status,2,c
  6485  001398  0012               	return	
  6486                           
  6487                           ; Switch size 1, requested type "space"
  6488                           ; Number of cases is 2, Range of values is 0 to 1
  6489                           ; switch strategies available:
  6490                           ; Name         Instructions Cycles
  6491                           ; simple_byte            7     4 (average)
  6492                           ;	Chosen strategy is simple_byte
  6493  00139A  5070               	movf	??_JMotor^0,w,c
  6494  00139C  E0B8               	bz	l5199
  6495  00139E  0A01               	xorlw	1	; case 1
  6496  0013A0  E0CE               	bz	l5213
  6497  0013A2  0012               	return		;funcret
  6498  0013A4                     __end_of_JMotor:
  6499                           	callstack 0
  6500                           
  6501 ;; *************** function _SIOUsuariActual *****************
  6502 ;; Defined at:
  6503 ;;		line 109 in file "SSIO.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;		None
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      char 
  6510 ;; Registers used:
  6511 ;;		wreg, status,2
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1
  6517 ;;      Params:         0       0       0
  6518 ;;      Locals:         0       0       0
  6519 ;;      Temps:          0       0       0
  6520 ;;      Totals:         0       0       0
  6521 ;;Total ram usage:        0 bytes
  6522 ;; Hardware stack levels used: 1
  6523 ;; Hardware stack levels required when called: 2
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_JMotor
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text49
  6532  001BB6                     __ptext49:
  6533                           	callstack 0
  6534  001BB6                     _SIOUsuariActual:
  6535                           	callstack 27
  6536                           
  6537                           ;SSIO.c: 110:     return usuariActualSIO;
  6538                           
  6539                           ;incstack = 0
  6540  001BB6  5040               	movf	_usuariActualSIO^0,w,c
  6541  001BB8  0012               	return		;funcret
  6542  001BBA                     __end_of_SIOUsuariActual:
  6543                           	callstack 0
  6544                           
  6545 ;; *************** function _SIOStartGame *****************
  6546 ;; Defined at:
  6547 ;;		line 105 in file "SSIO.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  usuari          1    wreg     unsigned char 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;  usuari          1    5[COMRAM] unsigned char 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  1    wreg      void 
  6554 ;; Registers used:
  6555 ;;		wreg
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1
  6561 ;;      Params:         0       0       0
  6562 ;;      Locals:         1       0       0
  6563 ;;      Temps:          0       0       0
  6564 ;;      Totals:         1       0       0
  6565 ;;Total ram usage:        1 bytes
  6566 ;; Hardware stack levels used: 1
  6567 ;; Hardware stack levels required when called: 2
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_JMotor
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text50
  6576  001B5E                     __ptext50:
  6577                           	callstack 0
  6578  001B5E                     _SIOStartGame:
  6579                           	callstack 27
  6580                           
  6581                           ;incstack = 0
  6582                           ;SIOStartGame@usuari stored from wreg
  6583  001B5E  6E60               	movwf	SIOStartGame@usuari^0,c
  6584                           
  6585                           ;SSIO.c: 106:     usuariActualSIO = usuari;
  6586  001B60  C060  F040         	movff	SIOStartGame@usuari,_usuariActualSIO
  6587  001B64  0012               	return		;funcret
  6588  001B66                     __end_of_SIOStartGame:
  6589                           	callstack 0
  6590                           
  6591 ;; *************** function _SIONovaDireccio *****************
  6592 ;; Defined at:
  6593 ;;		line 101 in file "SSIO.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  num             1    wreg     unsigned char 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  num             1    5[COMRAM] unsigned char 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      void 
  6600 ;; Registers used:
  6601 ;;		wreg
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1
  6607 ;;      Params:         0       0       0
  6608 ;;      Locals:         1       0       0
  6609 ;;      Temps:          0       0       0
  6610 ;;      Totals:         1       0       0
  6611 ;;Total ram usage:        1 bytes
  6612 ;; Hardware stack levels used: 1
  6613 ;; Hardware stack levels required when called: 2
  6614 ;; This function calls:
  6615 ;;		Nothing
  6616 ;; This function is called by:
  6617 ;;		_JMotor
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text51
  6622  001B66                     __ptext51:
  6623                           	callstack 0
  6624  001B66                     _SIONovaDireccio:
  6625                           	callstack 27
  6626                           
  6627                           ;incstack = 0
  6628                           ;SIONovaDireccio@num stored from wreg
  6629  001B66  6E60               	movwf	SIONovaDireccio@num^0,c
  6630                           
  6631                           ;SSIO.c: 102:     direccio = num;
  6632  001B68  C060  F03F         	movff	SIONovaDireccio@num,_direccio
  6633  001B6C  0012               	return		;funcret
  6634  001B6E                     __end_of_SIONovaDireccio:
  6635                           	callstack 0
  6636                           
  6637 ;; *************** function _HTempsJocs *****************
  6638 ;; Defined at:
  6639 ;;		line 90 in file "HHora.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;		None
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      PTR unsigned char 
  6646 ;; Registers used:
  6647 ;;		wreg
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1
  6653 ;;      Params:         2       0       0
  6654 ;;      Locals:         0       0       0
  6655 ;;      Temps:          0       0       0
  6656 ;;      Totals:         2       0       0
  6657 ;;Total ram usage:        2 bytes
  6658 ;; Hardware stack levels used: 1
  6659 ;; Hardware stack levels required when called: 2
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		_JMotor
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text52
  6668  001BBA                     __ptext52:
  6669                           	callstack 0
  6670  001BBA                     _HTempsJocs:
  6671                           	callstack 27
  6672                           
  6673                           ;HHora.c: 91:     return tempsJugant;
  6674                           
  6675                           ;incstack = 0
  6676  001BBA  0E4B               	movlw	_tempsJugant& (0+255)
  6677  001BBC  0012               	return		;funcret
  6678  001BBE                     __end_of_HTempsJocs:
  6679                           	callstack 0
  6680                           
  6681 ;; *************** function _HNouSegon *****************
  6682 ;; Defined at:
  6683 ;;		line 101 in file "HHora.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;		None
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;		None
  6688 ;; Return value:  Size  Location     Type
  6689 ;;		None               void
  6690 ;; Registers used:
  6691 ;;		status,0
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1
  6697 ;;      Params:         0       0       0
  6698 ;;      Locals:         0       0       0
  6699 ;;      Temps:          0       0       0
  6700 ;;      Totals:         0       0       0
  6701 ;;Total ram usage:        0 bytes
  6702 ;; Hardware stack levels used: 1
  6703 ;; Hardware stack levels required when called: 2
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_JMotor
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text53
  6712  001AB2                     __ptext53:
  6713                           	callstack 0
  6714  001AB2                     _HNouSegon:
  6715                           	callstack 27
  6716                           
  6717                           ;HHora.c: 102:     return nouSegon;
  6718                           
  6719                           ;incstack = 0
  6720  001AB2  B478               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  6721  001AB4  D002               	goto	l2173
  6722  001AB6  90D8               	bcf	status,0,c
  6723  001AB8  0012               	return	
  6724  001ABA                     l2173:
  6725  001ABA  80D8               	bsf	status,0,c
  6726  001ABC  0012               	return		;funcret
  6727  001ABE                     __end_of_HNouSegon:
  6728                           	callstack 0
  6729                           
  6730 ;; *************** function _HClearNouSegon *****************
  6731 ;; Defined at:
  6732 ;;		line 105 in file "HHora.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;		None
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;		None
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      void 
  6739 ;; Registers used:
  6740 ;;		None
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1
  6746 ;;      Params:         0       0       0
  6747 ;;      Locals:         0       0       0
  6748 ;;      Temps:          0       0       0
  6749 ;;      Totals:         0       0       0
  6750 ;;Total ram usage:        0 bytes
  6751 ;; Hardware stack levels used: 1
  6752 ;; Hardware stack levels required when called: 2
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_JMotor
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           	psect	text54
  6761  001BBE                     __ptext54:
  6762                           	callstack 0
  6763  001BBE                     _HClearNouSegon:
  6764                           	callstack 27
  6765                           
  6766                           ;HHora.c: 106:     nouSegon = 0;
  6767                           
  6768                           ;incstack = 0
  6769  001BBE  9478               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  6770  001BC0  0012               	return		;funcret
  6771  001BC2                     __end_of_HClearNouSegon:
  6772                           	callstack 0
  6773                           
  6774 ;; *************** function _AlStop *****************
  6775 ;; Defined at:
  6776 ;;		line 20 in file "AlTAltaveu.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;		None
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		None
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1
  6790 ;;      Params:         0       0       0
  6791 ;;      Locals:         0       0       0
  6792 ;;      Temps:          0       0       0
  6793 ;;      Totals:         0       0       0
  6794 ;;Total ram usage:        0 bytes
  6795 ;; Hardware stack levels used: 1
  6796 ;; Hardware stack levels required when called: 2
  6797 ;; This function calls:
  6798 ;;		Nothing
  6799 ;; This function is called by:
  6800 ;;		_JMotor
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text55
  6805  001BC2                     __ptext55:
  6806                           	callstack 0
  6807  001BC2                     _AlStop:
  6808                           	callstack 27
  6809                           
  6810                           ;AlTAltaveu.c: 21:     reproduir = 0;
  6811                           
  6812                           ;incstack = 0
  6813  001BC2  9E78               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  6814  001BC4  0012               	return		;funcret
  6815  001BC6                     __end_of_AlStop:
  6816                           	callstack 0
  6817                           
  6818 ;; *************** function _AlPlay *****************
  6819 ;; Defined at:
  6820 ;;		line 17 in file "AlTAltaveu.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;		None
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;		None
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		None
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMRAM   BANK0   BANK1
  6834 ;;      Params:         0       0       0
  6835 ;;      Locals:         0       0       0
  6836 ;;      Temps:          0       0       0
  6837 ;;      Totals:         0       0       0
  6838 ;;Total ram usage:        0 bytes
  6839 ;; Hardware stack levels used: 1
  6840 ;; Hardware stack levels required when called: 2
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_JMotor
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text56
  6849  001BC6                     __ptext56:
  6850                           	callstack 0
  6851  001BC6                     _AlPlay:
  6852                           	callstack 27
  6853                           
  6854                           ;AlTAltaveu.c: 18:     reproduir = 1;
  6855                           
  6856                           ;incstack = 0
  6857  001BC6  8E78               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  6858  001BC8  0012               	return		;funcret
  6859  001BCA                     __end_of_AlPlay:
  6860                           	callstack 0
  6861                           
  6862 ;; *************** function _HInit *****************
  6863 ;; Defined at:
  6864 ;;		line 24 in file "HHora.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;		None
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;		None
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      void 
  6871 ;; Registers used:
  6872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1
  6878 ;;      Params:         0       0       0
  6879 ;;      Locals:         0       0       0
  6880 ;;      Temps:          0       0       0
  6881 ;;      Totals:         0       0       0
  6882 ;;Total ram usage:        0 bytes
  6883 ;; Hardware stack levels used: 1
  6884 ;; Hardware stack levels required when called: 3
  6885 ;; This function calls:
  6886 ;;		_TiGetTimer
  6887 ;;		_TiResetTics
  6888 ;; This function is called by:
  6889 ;;		_main
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           	psect	text57
  6894  001A62                     __ptext57:
  6895                           	callstack 0
  6896  001A62                     _HInit:
  6897                           	callstack 27
  6898                           
  6899                           ;HHora.c: 25:     timerHora = TiGetTimer();
  6900                           
  6901                           ;incstack = 0
  6902  001A62  EC41  F00C         	call	_TiGetTimer	;wreg free
  6903  001A66  6E13               	movwf	_timerHora^0,c
  6904                           
  6905                           ;HHora.c: 26:     TiResetTics(timerHora);
  6906  001A68  5013               	movf	_timerHora^0,w,c
  6907  001A6A  ECEC  F00C         	call	_TiResetTics
  6908                           
  6909                           ;HHora.c: 27:     nouMinut = 0;
  6910  001A6E  9678               	bcf	(_nouMinut/(0+8))^0,_nouMinut& (0+7),c
  6911  001A70  0012               	return		;funcret
  6912  001A72                     __end_of_HInit:
  6913                           	callstack 0
  6914                           
  6915 ;; *************** function _HHoraMotor *****************
  6916 ;; Defined at:
  6917 ;;		line 30 in file "HHora.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;		None
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1
  6931 ;;      Params:         0       0       0
  6932 ;;      Locals:         0       0       0
  6933 ;;      Temps:          2       0       0
  6934 ;;      Totals:         2       0       0
  6935 ;;Total ram usage:        2 bytes
  6936 ;; Hardware stack levels used: 1
  6937 ;; Hardware stack levels required when called: 3
  6938 ;; This function calls:
  6939 ;;		_TiGetTics
  6940 ;;		_TiResetTics
  6941 ;; This function is called by:
  6942 ;;		_main
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           	psect	text58
  6947  00126E                     __ptext58:
  6948                           	callstack 0
  6949  00126E                     _HHoraMotor:
  6950                           	callstack 27
  6951                           
  6952                           ;HHora.c: 32:     static char state = 0;;HHora.c: 33:  switch(state) {
  6953                           
  6954                           ;incstack = 0
  6955  00126E  D045               	goto	l5399
  6956  001270                     l5337:
  6957                           
  6958                           ;HHora.c: 35:    if (TiGetTics(timerHora) >= 2000) {
  6959  001270  5013               	movf	_timerHora^0,w,c
  6960  001272  ECBA  F00C         	call	_TiGetTics
  6961  001276  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  6962  001278  0012               	return	
  6963  00127A  ECA6  F005         	call	PL44	;call to abstracted procedure
  6964  00127E  A0D8               	btfss	status,0,c
  6965  001280  0012               	return	
  6966                           
  6967                           ;HHora.c: 36:     TiResetTics(timerHora);
  6968  001282  5013               	movf	_timerHora^0,w,c
  6969  001284  ECEC  F00C         	call	_TiResetTics
  6970                           
  6971                           ;HHora.c: 37:     segons++;
  6972  001288  2A14               	incf	_segons^0,f,c
  6973                           
  6974                           ;HHora.c: 38:     nouSegon=1;
  6975  00128A  8478               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  6976                           
  6977                           ;HHora.c: 40:     tempsJugant[4]++;
  6978  00128C  2A4F               	incf	(_tempsJugant+4)^0,f,c
  6979                           
  6980                           ;HHora.c: 41:     if(tempsJugant[4] == ('9'+1)){
  6981  00128E  0E3A               	movlw	58
  6982  001290  184F               	xorwf	(_tempsJugant+4)^0,w,c
  6983  001292  E103               	bnz	l5353
  6984                           
  6985                           ;HHora.c: 42:      tempsJugant[4] = '0';
  6986  001294  0E30               	movlw	48
  6987  001296  6E4F               	movwf	(_tempsJugant+4)^0,c
  6988                           
  6989                           ;HHora.c: 43:      tempsJugant[3]++;
  6990  001298  2A4E               	incf	(_tempsJugant+3)^0,f,c
  6991  00129A                     l5353:
  6992                           
  6993                           ;HHora.c: 45:     if(segons >= 60){
  6994  00129A  0E3B               	movlw	59
  6995  00129C  6414               	cpfsgt	_segons^0,c
  6996  00129E  D008               	goto	l5365
  6997                           
  6998                           ;HHora.c: 46:      segons = 0;
  6999  0012A0  6A14               	clrf	_segons^0,c
  7000                           
  7001                           ;HHora.c: 48:      string[4]++;
  7002  0012A2  2A55               	incf	(_string+4)^0,f,c
  7003                           
  7004                           ;HHora.c: 49:      if(string[4] == ('9'+1)){
  7005  0012A4  0E3A               	movlw	58
  7006  0012A6  1855               	xorwf	(_string+4)^0,w,c
  7007  0012A8  E103               	bnz	l5365
  7008                           
  7009                           ;HHora.c: 50:       string[4] = '0';
  7010  0012AA  0E30               	movlw	48
  7011  0012AC  6E55               	movwf	(_string+4)^0,c
  7012                           
  7013                           ;HHora.c: 51:       string[3]++;
  7014  0012AE  2A54               	incf	(_string+3)^0,f,c
  7015  0012B0                     l5365:
  7016                           
  7017                           ;HHora.c: 55:     if(string[3] == '6'){
  7018  0012B0  0E36               	movlw	54
  7019  0012B2  1854               	xorwf	(_string+3)^0,w,c
  7020  0012B4  E10A               	bnz	l5377
  7021                           
  7022                           ;HHora.c: 56:      string[4] = '0';
  7023  0012B6  0E30               	movlw	48
  7024  0012B8  6E55               	movwf	(_string+4)^0,c
  7025                           
  7026                           ;HHora.c: 57:      string[3] = '0';
  7027  0012BA  6E54               	movwf	(_string+3)^0,c
  7028                           
  7029                           ;HHora.c: 58:      string[1]++;
  7030  0012BC  2A52               	incf	(_string+1)^0,f,c
  7031                           
  7032                           ;HHora.c: 59:      if(string[1] == ('9'+1)){
  7033  0012BE  0E3A               	movlw	58
  7034  0012C0  1852               	xorwf	(_string+1)^0,w,c
  7035  0012C2  E103               	bnz	l5377
  7036                           
  7037                           ;HHora.c: 60:       string[1] = '0';
  7038  0012C4  0E30               	movlw	48
  7039  0012C6  6E52               	movwf	(_string+1)^0,c
  7040                           
  7041                           ;HHora.c: 61:       string[0]++;
  7042  0012C8  2A51               	incf	_string^0,f,c
  7043  0012CA                     l5377:
  7044                           
  7045                           ;HHora.c: 65:     if(tempsJugant[3] == '6'){
  7046  0012CA  0E36               	movlw	54
  7047  0012CC  184E               	xorwf	(_tempsJugant+3)^0,w,c
  7048  0012CE  E10A               	bnz	l5389
  7049                           
  7050                           ;HHora.c: 66:      tempsJugant[4] = '0';
  7051  0012D0  0E30               	movlw	48
  7052  0012D2  6E4F               	movwf	(_tempsJugant+4)^0,c
  7053                           
  7054                           ;HHora.c: 67:      tempsJugant[3] = '0';
  7055  0012D4  6E4E               	movwf	(_tempsJugant+3)^0,c
  7056                           
  7057                           ;HHora.c: 68:      tempsJugant[1]++;
  7058  0012D6  2A4C               	incf	(_tempsJugant+1)^0,f,c
  7059                           
  7060                           ;HHora.c: 69:      if(tempsJugant[1] == ('9'+1)){
  7061  0012D8  0E3A               	movlw	58
  7062  0012DA  184C               	xorwf	(_tempsJugant+1)^0,w,c
  7063  0012DC  E103               	bnz	l5389
  7064                           
  7065                           ;HHora.c: 70:       tempsJugant[1] = '0';
  7066  0012DE  0E30               	movlw	48
  7067  0012E0  6E4C               	movwf	(_tempsJugant+1)^0,c
  7068                           
  7069                           ;HHora.c: 71:       tempsJugant[0]++;
  7070  0012E2  2A4B               	incf	_tempsJugant^0,f,c
  7071  0012E4                     l5389:
  7072                           
  7073                           ;HHora.c: 75:     if(string[0] >= '2' && string[1] >= '4'){
  7074  0012E4  0E31               	movlw	49
  7075  0012E6  6451               	cpfsgt	_string^0,c
  7076  0012E8  D006               	goto	l5395
  7077  0012EA  0E33               	movlw	51
  7078  0012EC  6452               	cpfsgt	(_string+1)^0,c
  7079  0012EE  D003               	goto	l5395
  7080                           
  7081                           ;HHora.c: 76:      string[1] = '0';
  7082  0012F0  0E30               	movlw	48
  7083  0012F2  6E52               	movwf	(_string+1)^0,c
  7084                           
  7085                           ;HHora.c: 77:      string[0] = '0';
  7086  0012F4  6E51               	movwf	_string^0,c
  7087  0012F6                     l5395:
  7088                           
  7089                           ;HHora.c: 79:     state = 0;
  7090  0012F6  6A12               	clrf	HHoraMotor@state^0,c
  7091  0012F8  0012               	return	
  7092  0012FA                     l5399:
  7093  0012FA  5012               	movf	HHoraMotor@state^0,w,c
  7094  0012FC  6E67               	movwf	??_HHoraMotor^0,c
  7095  0012FE  6A68               	clrf	(??_HHoraMotor+1)^0,c
  7096                           
  7097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7098                           ; Switch size 1, requested type "space"
  7099                           ; Number of cases is 1, Range of values is 0 to 0
  7100                           ; switch strategies available:
  7101                           ; Name         Instructions Cycles
  7102                           ; simple_byte            4     3 (average)
  7103                           ;	Chosen strategy is simple_byte
  7104  001300  5068               	movf	(??_HHoraMotor+1)^0,w,c
  7105  001302  A4D8               	btfss	status,2,c
  7106  001304  0012               	return	
  7107                           
  7108                           ; Switch size 1, requested type "space"
  7109                           ; Number of cases is 1, Range of values is 0 to 0
  7110                           ; switch strategies available:
  7111                           ; Name         Instructions Cycles
  7112                           ; simple_byte            4     3 (average)
  7113                           ;	Chosen strategy is simple_byte
  7114  001306  5067               	movf	??_HHoraMotor^0,w,c
  7115  001308  E0B3               	bz	l5337
  7116  00130A  0012               	return		;funcret
  7117  00130C                     __end_of_HHoraMotor:
  7118                           	callstack 0
  7119                           
  7120 ;; *************** function _GLCDMotor *****************
  7121 ;; Defined at:
  7122 ;;		line 36 in file "GLCDGestioLCD.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;		None
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;		None
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1    wreg      void 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMRAM   BANK0   BANK1
  7136 ;;      Params:         0       0       0
  7137 ;;      Locals:         0       0       0
  7138 ;;      Temps:          2       0       0
  7139 ;;      Totals:         2       0       0
  7140 ;;Total ram usage:        2 bytes
  7141 ;; Hardware stack levels used: 1
  7142 ;; Hardware stack levels required when called: 8
  7143 ;; This function calls:
  7144 ;;		_LcClear
  7145 ;;		_LcGotoXY
  7146 ;;		_LcLliure
  7147 ;;		_LcNewString
  7148 ;;		_LcPutChar
  7149 ;;		_LcPutFletxa
  7150 ;;		_TiGetTics
  7151 ;;		_TiResetTics
  7152 ;; This function is called by:
  7153 ;;		_main
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text59
  7158  0008BA                     __ptext59:
  7159                           	callstack 0
  7160  0008BA                     _GLCDMotor:
  7161                           	callstack 22
  7162                           
  7163                           ;GLCDGestioLCD.c: 37:  static char state = 0;;GLCDGestioLCD.c: 38:     static char j=0;;
      +                          GLCDGestioLCD.c: 39:     static char max1 = 15;;GLCDGestioLCD.c: 40:     static char min
      +                          1 = 0;;GLCDGestioLCD.c: 41:     static char min2 = 0;;GLCDGestioLCD.c: 42:     static ch
      +                          ar max2 = 15;;GLCDGestioLCD.c: 43:     static char k1 = 0;;GLCDGestioLCD.c: 44:     stat
      +                          ic char k2 = 0;;GLCDGestioLCD.c: 45:     static char length1=0;;GLCDGestioLCD.c: 46:    
      +                           static char length2=0;;GLCDGestioLCD.c: 48:     switch(state) {
  7164                           
  7165                           ;incstack = 0
  7166  0008BA  D102               	goto	l4535
  7167  0008BC                     l4343:
  7168                           
  7169                           ;GLCDGestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  7170  0008BC  0E11               	movlw	17
  7171  0008BE  6016               	cpfslt	GLCDMotor@length1^0,c
  7172  0008C0  D00E               	goto	l4353
  7173  0008C2  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7174  0008C4  D00C               	goto	l4353
  7175                           
  7176                           ;GLCDGestioLCD.c: 51:     LcGotoXY(0,0);
  7177  0008C6  0E00               	movlw	0
  7178  0008C8  6A68               	clrf	LcGotoXY@Row^0,c
  7179  0008CA  ECD2  F009         	call	_LcGotoXY
  7180                           
  7181                           ;GLCDGestioLCD.c: 52:     LcNewString(menu[menuDalt]);
  7182  0008CE  5025               	movf	_menuDalt^0,w,c
  7183  0008D0  0D16               	mullw	22
  7184  0008D2  D935               	call	PL36	;call to abstracted procedure
  7185  0008D4  EC6B  F00D         	call	_LcNewString	;wreg free
  7186                           
  7187                           ;GLCDGestioLCD.c: 53:     state = 5;
  7188  0008D8  0E05               	movlw	5
  7189  0008DA  6E1C               	movwf	GLCDMotor@state^0,c
  7190                           
  7191                           ;GLCDGestioLCD.c: 54:    }
  7192  0008DC  0C05               	retlw	5
  7193  0008DE                     l4353:
  7194  0008DE  0E10               	movlw	16
  7195  0008E0  6416               	cpfsgt	GLCDMotor@length1^0,c
  7196  0008E2  0C10               	retlw	16
  7197  0008E4  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7198  0008E6  0C10               	retlw	16
  7199  0008E8                     u3630:
  7200                           
  7201                           ;GLCDGestioLCD.c: 56:     state++;
  7202  0008E8  2A1C               	incf	GLCDMotor@state^0,f,c
  7203  0008EA  0012               	return	
  7204  0008EC                     l4359:
  7205                           
  7206                           ;GLCDGestioLCD.c: 60:    if (j>=16) {
  7207  0008EC  0E0F               	movlw	15
  7208  0008EE  641B               	cpfsgt	GLCDMotor@j^0,c
  7209  0008F0  D012               	goto	l4373
  7210                           
  7211                           ;GLCDGestioLCD.c: 61:     min1++;
  7212  0008F2  2A1A               	incf	GLCDMotor@min1^0,f,c
  7213                           
  7214                           ;GLCDGestioLCD.c: 62:     max1++;
  7215  0008F4  2A48               	incf	GLCDMotor@max1^0,f,c
  7216                           
  7217                           ;GLCDGestioLCD.c: 63:     if (menu[menuDalt][max1] == '\0') max1=0;
  7218  0008F6  D90A               	call	PL2	;call to abstracted procedure
  7219  0008F8  5048               	movf	GLCDMotor@max1^0,w,c
  7220  0008FA  D913               	call	PL4	;call to abstracted procedure
  7221  0008FC  E101               	bnz	l4367
  7222  0008FE  6A48               	clrf	GLCDMotor@max1^0,c
  7223  000900                     l4367:
  7224                           
  7225                           ;GLCDGestioLCD.c: 64:     if (menu[menuDalt][min1] == '\0') min1=0;
  7226  000900  D905               	call	PL2	;call to abstracted procedure
  7227  000902  501A               	movf	GLCDMotor@min1^0,w,c
  7228  000904  D90E               	call	PL4	;call to abstracted procedure
  7229  000906  E101               	bnz	l708
  7230  000908  6A1A               	clrf	GLCDMotor@min1^0,c
  7231  00090A                     l708:
  7232                           
  7233                           ;GLCDGestioLCD.c: 65:     j=0;
  7234  00090A  6A1B               	clrf	GLCDMotor@j^0,c
  7235                           
  7236                           ;GLCDGestioLCD.c: 66:     k1=min1;
  7237  00090C  C01A  F018         	movff	GLCDMotor@min1,GLCDMotor@k1
  7238                           
  7239                           ;GLCDGestioLCD.c: 67:     state = 6;
  7240  000910  0E06               	movlw	6
  7241  000912  6E1C               	movwf	GLCDMotor@state^0,c
  7242                           
  7243                           ;GLCDGestioLCD.c: 68:    }
  7244  000914  0C06               	retlw	6
  7245  000916                     l4373:
  7246  000916  0E10               	movlw	16
  7247  000918  601B               	cpfslt	GLCDMotor@j^0,c
  7248  00091A  0C10               	retlw	16
  7249                           
  7250                           ;GLCDGestioLCD.c: 70:     LcGotoXY(j,0);
  7251  00091C  6A68               	clrf	LcGotoXY@Row^0,c
  7252  00091E  501B               	movf	GLCDMotor@j^0,w,c
  7253  000920  ECD2  F009         	call	_LcGotoXY
  7254                           
  7255                           ;GLCDGestioLCD.c: 71:     LcPutChar(menu[menuDalt][k1]);
  7256  000924  D8F3               	call	PL2	;call to abstracted procedure
  7257  000926  5018               	movf	GLCDMotor@k1^0,w,c
  7258  000928  D8FC               	call	PL4	;call to abstracted procedure
  7259  00092A  EC2D  F00B         	call	_LcPutChar
  7260                           
  7261                           ;GLCDGestioLCD.c: 72:     j++;
  7262  00092E  2A1B               	incf	GLCDMotor@j^0,f,c
  7263                           
  7264                           ;GLCDGestioLCD.c: 73:     k1++;
  7265  000930  2A18               	incf	GLCDMotor@k1^0,f,c
  7266                           
  7267                           ;GLCDGestioLCD.c: 74:     if(menu[menuDalt][k1] == '\0') k1 = 0;
  7268  000932  D8EC               	call	PL2	;call to abstracted procedure
  7269  000934  5018               	movf	GLCDMotor@k1^0,w,c
  7270  000936  D8F5               	call	PL4	;call to abstracted procedure
  7271  000938  B4D8               	btfsc	status,2,c
  7272  00093A  6A18               	clrf	GLCDMotor@k1^0,c
  7273  00093C  0012               	return	
  7274  00093E                     l4387:
  7275                           
  7276                           ;GLCDGestioLCD.c: 78:    if (menuDalt<5) {
  7277  00093E  0E05               	movlw	5
  7278  000940  6025               	cpfslt	_menuDalt^0,c
  7279  000942  D016               	goto	u3730
  7280                           
  7281                           ;GLCDGestioLCD.c: 79:     LcPutFletxa();
  7282  000944  EC5F  F00D         	call	_LcPutFletxa	;wreg free
  7283  000948  D7CF               	goto	u3630
  7284  00094A                     u3700:
  7285                           
  7286                           ;GLCDGestioLCD.c: 83:     LcPutFletxa();
  7287  00094A  EC5F  F00D         	call	_LcPutFletxa	;wreg free
  7288  00094E                     l4397:
  7289                           
  7290                           ;GLCDGestioLCD.c: 84:     state = 0;
  7291  00094E  6A1C               	clrf	GLCDMotor@state^0,c
  7292  000950  0012               	return	
  7293  000952                     l4399:
  7294                           
  7295                           ;GLCDGestioLCD.c: 88:    if (LcLliure() && menuDalt<5) {
  7296  000952  EC71  F00D         	call	_LcLliure	;wreg free
  7297  000956  E308               	bnc	l4407
  7298  000958  0E05               	movlw	5
  7299  00095A  6025               	cpfslt	_menuDalt^0,c
  7300  00095C  D005               	goto	l4407
  7301                           
  7302                           ;GLCDGestioLCD.c: 89:     LcPutFletxa();
  7303  00095E  EC5F  F00D         	call	_LcPutFletxa	;wreg free
  7304                           
  7305                           ;GLCDGestioLCD.c: 90:     state = 7;
  7306  000962  0E07               	movlw	7
  7307  000964  6E1C               	movwf	GLCDMotor@state^0,c
  7308                           
  7309                           ;GLCDGestioLCD.c: 91:    }
  7310  000966  0C07               	retlw	7
  7311  000968                     l4407:
  7312  000968  EC71  F00D         	call	_LcLliure	;wreg free
  7313  00096C  A0D8               	btfss	status,0,c
  7314  00096E  0012               	return	
  7315  000970                     u3730:
  7316  000970  0E04               	movlw	4
  7317  000972  6425               	cpfsgt	_menuDalt^0,c
  7318  000974  0C04               	retlw	4
  7319  000976  D7E9               	goto	u3700
  7320  000978                     l720:
  7321                           
  7322                           ;GLCDGestioLCD.c: 98:    if (newString != 0 && ferMenu == 1) {
  7323  000978  B878               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  7324  00097A  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7325  00097C  0012               	return	
  7326                           
  7327                           ;GLCDGestioLCD.c: 99:     length1 = 0;
  7328  00097E  6A16               	clrf	GLCDMotor@length1^0,c
  7329                           
  7330                           ;GLCDGestioLCD.c: 100:     length2 = 0;
  7331  000980  6A15               	clrf	GLCDMotor@length2^0,c
  7332                           
  7333                           ;GLCDGestioLCD.c: 101:     LcGotoXY(0,0);
  7334  000982  0E00               	movlw	0
  7335  000984  6A68               	clrf	LcGotoXY@Row^0,c
  7336  000986  ECD2  F009         	call	_LcGotoXY
  7337                           
  7338                           ;GLCDGestioLCD.c: 102:     min1 = 0;
  7339  00098A  6A1A               	clrf	GLCDMotor@min1^0,c
  7340                           
  7341                           ;GLCDGestioLCD.c: 103:     max1 = 15;
  7342  00098C  0E0F               	movlw	15
  7343  00098E  6E48               	movwf	GLCDMotor@max1^0,c
  7344                           
  7345                           ;GLCDGestioLCD.c: 104:     min2 = 0;
  7346  000990  6A19               	clrf	GLCDMotor@min2^0,c
  7347                           
  7348                           ;GLCDGestioLCD.c: 105:     max2 = 15;
  7349  000992  0E0F               	movlw	15
  7350  000994  6E47               	movwf	GLCDMotor@max2^0,c
  7351                           
  7352                           ;GLCDGestioLCD.c: 106:     j = 0;
  7353  000996  6A1B               	clrf	GLCDMotor@j^0,c
  7354                           
  7355                           ;GLCDGestioLCD.c: 107:     k1 = 0;
  7356  000998  6A18               	clrf	GLCDMotor@k1^0,c
  7357                           
  7358                           ;GLCDGestioLCD.c: 108:     k2 = 0;
  7359  00099A  6A17               	clrf	GLCDMotor@k2^0,c
  7360                           
  7361                           ;GLCDGestioLCD.c: 109:     newString = 0;
  7362  00099C  9878               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  7363  00099E  D7A4               	goto	u3630
  7364  0009A0                     l4439:
  7365                           
  7366                           ;GLCDGestioLCD.c: 114:    if (menu[menuDalt][length1] == '\0' && menuDalt>=5) {
  7367  0009A0  D8B5               	call	PL2	;call to abstracted procedure
  7368  0009A2  5016               	movf	GLCDMotor@length1^0,w,c
  7369  0009A4  D8BE               	call	PL4	;call to abstracted procedure
  7370  0009A6  E104               	bnz	l4445
  7371  0009A8  0E04               	movlw	4
  7372  0009AA  6425               	cpfsgt	_menuDalt^0,c
  7373  0009AC  D001               	goto	l4445
  7374  0009AE  D79C               	goto	u3630
  7375  0009B0                     l4445:
  7376  0009B0  D8AD               	call	PL2	;call to abstracted procedure
  7377  0009B2  5016               	movf	GLCDMotor@length1^0,w,c
  7378  0009B4  D8B6               	call	PL4	;call to abstracted procedure
  7379  0009B6  E002               	bz	l4449
  7380                           
  7381                           ;GLCDGestioLCD.c: 118:     length1++;
  7382  0009B8  2A16               	incf	GLCDMotor@length1^0,f,c
  7383                           
  7384                           ;GLCDGestioLCD.c: 119:    }
  7385  0009BA  0012               	return	
  7386  0009BC                     l4449:
  7387  0009BC  0E05               	movlw	5
  7388  0009BE  6025               	cpfslt	_menuDalt^0,c
  7389  0009C0  0C05               	retlw	5
  7390  0009C2  D8A4               	call	PL2	;call to abstracted procedure
  7391  0009C4  5016               	movf	GLCDMotor@length1^0,w,c
  7392  0009C6  D8AD               	call	PL4	;call to abstracted procedure
  7393  0009C8  A4D8               	btfss	status,2,c
  7394  0009CA  0012               	return	
  7395                           
  7396                           ;GLCDGestioLCD.c: 121:     state = 13;
  7397  0009CC  0E0D               	movlw	13
  7398  0009CE  6E1C               	movwf	GLCDMotor@state^0,c
  7399  0009D0  0C0D               	retlw	13
  7400  0009D2                     l4455:
  7401                           
  7402                           ;GLCDGestioLCD.c: 125:    if (length2 < 17 && ferMenu == 1) {
  7403  0009D2  0E11               	movlw	17
  7404  0009D4  6015               	cpfslt	GLCDMotor@length2^0,c
  7405  0009D6  D010               	goto	l4465
  7406  0009D8  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7407  0009DA  D00E               	goto	l4465
  7408                           
  7409                           ;GLCDGestioLCD.c: 126:     LcGotoXY(0,1);
  7410  0009DC  EC51  F004         	call	PL32	;call to abstracted procedure
  7411  0009E0  ECD2  F009         	call	_LcGotoXY
  7412                           
  7413                           ;GLCDGestioLCD.c: 127:     LcNewString(menu[menuDalt+1]);
  7414  0009E4  5025               	movf	_menuDalt^0,w,c
  7415  0009E6  0D16               	mullw	22
  7416  0009E8  0E16               	movlw	22
  7417  0009EA  26F3               	addwf	243,f,c
  7418  0009EC  0E00               	movlw	0
  7419  0009EE  22F4               	addwfc	244,f,c
  7420  0009F0  D8A6               	call	PL36	;call to abstracted procedure
  7421  0009F2  EC6B  F00D         	call	_LcNewString	;wreg free
  7422  0009F6  D778               	goto	u3630
  7423  0009F8                     l4465:
  7424  0009F8  0E10               	movlw	16
  7425  0009FA  6415               	cpfsgt	GLCDMotor@length2^0,c
  7426  0009FC  0C10               	retlw	16
  7427  0009FE  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7428  000A00  0C10               	retlw	16
  7429                           
  7430                           ;GLCDGestioLCD.c: 131:     state = 9;
  7431  000A02  0E09               	movlw	9
  7432  000A04  6E1C               	movwf	GLCDMotor@state^0,c
  7433  000A06  0C09               	retlw	9
  7434  000A08                     l4471:
  7435                           
  7436                           ;GLCDGestioLCD.c: 135:    if (j<16) {
  7437  000A08  0E10               	movlw	16
  7438  000A0A  601B               	cpfslt	GLCDMotor@j^0,c
  7439  000A0C  D014               	goto	l4485
  7440                           
  7441                           ;GLCDGestioLCD.c: 136:     LcGotoXY(j,1);
  7442  000A0E  0E01               	movlw	1
  7443  000A10  6E68               	movwf	LcGotoXY@Row^0,c
  7444  000A12  501B               	movf	GLCDMotor@j^0,w,c
  7445  000A14  ECD2  F009         	call	_LcGotoXY
  7446                           
  7447                           ;GLCDGestioLCD.c: 137:     LcPutChar(menu[menuDalt+1][k2]);
  7448  000A18  D879               	call	PL2	;call to abstracted procedure
  7449  000A1A  5017               	movf	GLCDMotor@k2^0,w,c
  7450  000A1C  D88C               	call	PL6	;call to abstracted procedure
  7451  000A1E  D881               	call	PL4	;call to abstracted procedure
  7452  000A20  EC2D  F00B         	call	_LcPutChar
  7453                           
  7454                           ;GLCDGestioLCD.c: 138:     j++;
  7455  000A24  2A1B               	incf	GLCDMotor@j^0,f,c
  7456                           
  7457                           ;GLCDGestioLCD.c: 139:     k2++;
  7458  000A26  2A17               	incf	GLCDMotor@k2^0,f,c
  7459                           
  7460                           ;GLCDGestioLCD.c: 140:     if(menu[menuDalt+1][k2] == '\0') k2 = 0;
  7461  000A28  D871               	call	PL2	;call to abstracted procedure
  7462  000A2A  5017               	movf	GLCDMotor@k2^0,w,c
  7463  000A2C  D884               	call	PL6	;call to abstracted procedure
  7464  000A2E  D879               	call	PL4	;call to abstracted procedure
  7465  000A30  B4D8               	btfsc	status,2,c
  7466  000A32  6A17               	clrf	GLCDMotor@k2^0,c
  7467  000A34  0012               	return	
  7468  000A36                     l4485:
  7469  000A36  0E0F               	movlw	15
  7470  000A38  641B               	cpfsgt	GLCDMotor@j^0,c
  7471  000A3A  0C0F               	retlw	15
  7472                           
  7473                           ;GLCDGestioLCD.c: 143:     min2++;
  7474  000A3C  2A19               	incf	GLCDMotor@min2^0,f,c
  7475                           
  7476                           ;GLCDGestioLCD.c: 144:     max2++;
  7477  000A3E  2A47               	incf	GLCDMotor@max2^0,f,c
  7478                           
  7479                           ;GLCDGestioLCD.c: 145:     if (menu[menuDalt+1][max2] == '\0') max2=0;
  7480  000A40  D865               	call	PL2	;call to abstracted procedure
  7481  000A42  5047               	movf	GLCDMotor@max2^0,w,c
  7482  000A44  D878               	call	PL6	;call to abstracted procedure
  7483  000A46  D86D               	call	PL4	;call to abstracted procedure
  7484  000A48  E101               	bnz	l4493
  7485  000A4A  6A47               	clrf	GLCDMotor@max2^0,c
  7486  000A4C                     l4493:
  7487                           
  7488                           ;GLCDGestioLCD.c: 146:     if (menu[menuDalt+1][min2] == '\0') min2=0;
  7489  000A4C  D85F               	call	PL2	;call to abstracted procedure
  7490  000A4E  5019               	movf	GLCDMotor@min2^0,w,c
  7491  000A50  D872               	call	PL6	;call to abstracted procedure
  7492  000A52  D867               	call	PL4	;call to abstracted procedure
  7493  000A54  E101               	bnz	l738
  7494  000A56  6A19               	clrf	GLCDMotor@min2^0,c
  7495  000A58                     l738:
  7496                           
  7497                           ;GLCDGestioLCD.c: 147:     j=0;
  7498  000A58  6A1B               	clrf	GLCDMotor@j^0,c
  7499                           
  7500                           ;GLCDGestioLCD.c: 148:     k2=min2;
  7501  000A5A  C019  F017         	movff	GLCDMotor@min2,GLCDMotor@k2
  7502  000A5E  D744               	goto	u3630
  7503  000A60                     l4499:
  7504                           
  7505                           ;GLCDGestioLCD.c: 153:    if (TiGetTics(timerGLCD)>= 2000 && newString == 0 && ferMenu =
      +                          = 1) {
  7506  000A60  501D               	movf	_timerGLCD^0,w,c
  7507  000A62  ECBA  F00C         	call	_TiGetTics
  7508  000A66  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  7509  000A68  D00A               	goto	l740
  7510  000A6A  D870               	call	PL44	;call to abstracted procedure
  7511  000A6C  E308               	bnc	l740
  7512  000A6E  A878               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  7513  000A70  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7514  000A72  D005               	goto	l740
  7515                           
  7516                           ;GLCDGestioLCD.c: 154:     LcClear();
  7517  000A74  ECFA  F00C         	call	_LcClear	;wreg free
  7518  000A78                     l4507:
  7519                           
  7520                           ;GLCDGestioLCD.c: 155:     state = 2;
  7521  000A78  0E02               	movlw	2
  7522  000A7A  6E1C               	movwf	GLCDMotor@state^0,c
  7523                           
  7524                           ;GLCDGestioLCD.c: 156:    }
  7525  000A7C  0C02               	retlw	2
  7526  000A7E                     l740:
  7527  000A7E  B878               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  7528  000A80  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7529  000A82  0012               	return	
  7530                           
  7531                           ;GLCDGestioLCD.c: 158:     LcClear();
  7532  000A84  ECFA  F00C         	call	_LcClear	;wreg free
  7533  000A88  D762               	goto	l4397
  7534  000A8A                     l4515:
  7535                           
  7536                           ;GLCDGestioLCD.c: 163:    TiResetTics(timerGLCD);
  7537  000A8A  501D               	movf	_timerGLCD^0,w,c
  7538  000A8C  ECEC  F00C         	call	_TiResetTics
  7539  000A90  D72B               	goto	u3630
  7540  000A92                     l4519:
  7541                           
  7542                           ;GLCDGestioLCD.c: 167:    if (LcLliure()) {
  7543  000A92  EC71  F00D         	call	_LcLliure	;wreg free
  7544  000A96  A0D8               	btfss	status,0,c
  7545  000A98  0012               	return	
  7546                           
  7547                           ;GLCDGestioLCD.c: 168:     TiResetTics(timerGLCD);
  7548  000A9A  501D               	movf	_timerGLCD^0,w,c
  7549  000A9C  ECEC  F00C         	call	_TiResetTics
  7550                           
  7551                           ;GLCDGestioLCD.c: 169:     state = 11;
  7552  000AA0  0E0B               	movlw	11
  7553  000AA2  6E1C               	movwf	GLCDMotor@state^0,c
  7554  000AA4  0C0B               	retlw	11
  7555  000AA6                     l4525:
  7556                           
  7557                           ;GLCDGestioLCD.c: 173:    if (menu[menuDalt+1][length2] != '\0') {
  7558  000AA6  D832               	call	PL2	;call to abstracted procedure
  7559  000AA8  5015               	movf	GLCDMotor@length2^0,w,c
  7560  000AAA  D845               	call	PL6	;call to abstracted procedure
  7561  000AAC  D83A               	call	PL4	;call to abstracted procedure
  7562  000AAE  E002               	bz	l4529
  7563                           
  7564                           ;GLCDGestioLCD.c: 174:     length2++;
  7565  000AB0  2A15               	incf	GLCDMotor@length2^0,f,c
  7566                           
  7567                           ;GLCDGestioLCD.c: 175:    }
  7568  000AB2  0012               	return	
  7569  000AB4                     l4529:
  7570  000AB4  D82B               	call	PL2	;call to abstracted procedure
  7571  000AB6  5015               	movf	GLCDMotor@length2^0,w,c
  7572  000AB8  D83E               	call	PL6	;call to abstracted procedure
  7573  000ABA  D833               	call	PL4	;call to abstracted procedure
  7574  000ABC  E0DD               	bz	l4507
  7575  000ABE  0012               	return	
  7576  000AC0                     l4535:
  7577  000AC0  501C               	movf	GLCDMotor@state^0,w,c
  7578  000AC2  6E71               	movwf	??_GLCDMotor^0,c
  7579  000AC4  6A72               	clrf	(??_GLCDMotor+1)^0,c
  7580                           
  7581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7582                           ; Switch size 1, requested type "space"
  7583                           ; Number of cases is 1, Range of values is 0 to 0
  7584                           ; switch strategies available:
  7585                           ; Name         Instructions Cycles
  7586                           ; simple_byte            4     3 (average)
  7587                           ;	Chosen strategy is simple_byte
  7588  000AC6  5072               	movf	(??_GLCDMotor+1)^0,w,c
  7589  000AC8  A4D8               	btfss	status,2,c
  7590  000ACA  0012               	return	
  7591                           
  7592                           ; Switch size 1, requested type "space"
  7593                           ; Number of cases is 12, Range of values is 0 to 13
  7594                           ; switch strategies available:
  7595                           ; Name         Instructions Cycles
  7596                           ; simple_byte           37    19 (average)
  7597                           ;	Chosen strategy is simple_byte
  7598  000ACC  5071               	movf	??_GLCDMotor^0,w,c
  7599  000ACE  E101 D753          	bz	l720
  7600  000AD2  0A01               	xorlw	1	; case 1
  7601  000AD4  E101 D764          	bz	l4439
  7602  000AD8  0A03               	xorlw	3	; case 2
  7603  000ADA  E101 D6EF          	bz	l4343
  7604  000ADE  0A01               	xorlw	1	; case 3
  7605  000AE0  E101 D704          	bz	l4359
  7606  000AE4  0A06               	xorlw	6	; case 5
  7607  000AE6  E101 D734          	bz	l4399
  7608  000AEA  0A03               	xorlw	3	; case 6
  7609  000AEC  E101 D727          	bz	l4387
  7610  000AF0  0A01               	xorlw	1	; case 7
  7611  000AF2  E101 D76E          	bz	l4455
  7612  000AF6  0A0F               	xorlw	15	; case 8
  7613  000AF8  E0CC               	bz	l4519
  7614  000AFA  0A01               	xorlw	1	; case 9
  7615  000AFC  E085               	bz	l4471
  7616  000AFE  0A03               	xorlw	3	; case 10
  7617  000B00  E0C4               	bz	l4515
  7618  000B02  0A01               	xorlw	1	; case 11
  7619  000B04  E0AD               	bz	l4499
  7620  000B06  0A06               	xorlw	6	; case 13
  7621  000B08  E0CE               	bz	l4525
  7622  000B0A  0012               	return		;funcret
  7623  000B0C                     __end_of_GLCDMotor:
  7624                           	callstack 0
  7625  000B0C                     PL2:
  7626                           	callstack 22
  7627  000B0C  5025               	movf	_menuDalt^0,w,c
  7628  000B0E  0D16               	mullw	22
  7629  000B10  0ECB               	movlw	low _menu
  7630  000B12  6E71               	movwf	??_GLCDMotor^0,c
  7631  000B14  0E1C               	movlw	high _menu
  7632  000B16  6E72               	movwf	(??_GLCDMotor+1)^0,c
  7633  000B18  50F3               	movf	243,w,c
  7634  000B1A  2671               	addwf	??_GLCDMotor^0,f,c
  7635  000B1C  50F4               	movf	244,w,c
  7636  000B1E  2272               	addwfc	(??_GLCDMotor+1)^0,f,c
  7637  000B20  0012               	return	
  7638  000B22                     __end_ofPL2:
  7639                           	callstack 0
  7640  000B22                     PL4:
  7641                           	callstack 22
  7642  000B22  2671               	addwf	??_GLCDMotor^0,f,c
  7643  000B24  0E00               	movlw	0
  7644  000B26  2272               	addwfc	(??_GLCDMotor+1)^0,f,c
  7645  000B28  C071  FFF6         	movff	??_GLCDMotor,tblptrl
  7646  000B2C  C072  FFF7         	movff	??_GLCDMotor+1,tblptrh
  7647  000B30                     	if	0	;tblptru may be non-zero
  7648  000B30                     	endif
  7649  000B30                     	if	0	;tblptru may be non-zero
  7650  000B30                     	endif
  7651  000B30  0008               	tblrd		*
  7652  000B32  50F5               	movf	tablat,w,c
  7653  000B34  0012               	return	
  7654  000B36                     __end_ofPL4:
  7655                           	callstack 0
  7656  000B36                     PL6:
  7657                           	callstack 22
  7658  000B36  2671               	addwf	??_GLCDMotor^0,f,c
  7659  000B38  0E00               	movlw	0
  7660  000B3A  2272               	addwfc	(??_GLCDMotor+1)^0,f,c
  7661  000B3C  0C16               	retlw	22
  7662  000B3E                     __end_ofPL6:
  7663                           	callstack 0
  7664  000B3E                     PL36:
  7665                           	callstack 22
  7666  000B3E  0ECB               	movlw	low _menu
  7667  000B40  24F3               	addwf	243,w,c
  7668  000B42  6E63               	movwf	LcNewString@new_s^0,c
  7669  000B44  0E1C               	movlw	high _menu
  7670  000B46  20F4               	addwfc	prodh,w,c
  7671  000B48  6E64               	movwf	(LcNewString@new_s+1)^0,c
  7672  000B4A  0012               	return	
  7673  000B4C                     __end_ofPL36:
  7674                           	callstack 0
  7675  000B4C                     PL44:
  7676                           	callstack 27
  7677  000B4C  0ED0               	movlw	208
  7678  000B4E  5C60               	subwf	?_TiGetTics^0,w,c
  7679  000B50  0E07               	movlw	7
  7680  000B52  5861               	subwfb	(?_TiGetTics+1)^0,w,c
  7681  000B54  0012               	return	
  7682  000B56                     __end_ofPL44:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function _LcPutFletxa *****************
  7686 ;; Defined at:
  7687 ;;		line 256 in file "LcTLCD.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;		None
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1
  7701 ;;      Params:         0       0       0
  7702 ;;      Locals:         0       0       0
  7703 ;;      Temps:          0       0       0
  7704 ;;      Totals:         0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; Hardware stack levels required when called: 7
  7708 ;; This function calls:
  7709 ;;		_LcGotoXY
  7710 ;;		_LcInsertFletxa
  7711 ;; This function is called by:
  7712 ;;		_MTMenu
  7713 ;;		_GLCDMotor
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           	psect	text60
  7718  001ABE                     __ptext60:
  7719                           	callstack 0
  7720  001ABE                     _LcPutFletxa:
  7721                           	callstack 22
  7722                           
  7723                           ;LcTLCD.c: 257:     LcGotoXY(0,0);
  7724                           
  7725                           ;incstack = 0
  7726  001ABE  0E00               	movlw	0
  7727  001AC0  6A68               	clrf	LcGotoXY@Row^0,c
  7728  001AC2  ECD2  F009         	call	_LcGotoXY
  7729                           
  7730                           ;LcTLCD.c: 259:     LcInsertFletxa();
  7731  001AC6  EF65  F00D         	goto	_LcInsertFletxa	;wreg free
  7732  001ACA                     __end_of_LcPutFletxa:
  7733                           	callstack 0
  7734                           
  7735 ;; *************** function _LcInsertFletxa *****************
  7736 ;; Defined at:
  7737 ;;		line 252 in file "LcTLCD.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      void 
  7744 ;; Registers used:
  7745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1
  7751 ;;      Params:         0       0       0
  7752 ;;      Locals:         0       0       0
  7753 ;;      Temps:          0       0       0
  7754 ;;      Totals:         0       0       0
  7755 ;;Total ram usage:        0 bytes
  7756 ;; Hardware stack levels used: 1
  7757 ;; Hardware stack levels required when called: 6
  7758 ;; This function calls:
  7759 ;;		_LcPutChar
  7760 ;; This function is called by:
  7761 ;;		_LcPutFletxa
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text61
  7766  001ACA                     __ptext61:
  7767                           	callstack 0
  7768  001ACA                     _LcInsertFletxa:
  7769                           	callstack 22
  7770                           
  7771                           ;LcTLCD.c: 253:     LcPutChar('-');
  7772                           
  7773                           ;incstack = 0
  7774  001ACA  0E2D               	movlw	45
  7775  001ACC  EC2D  F00B         	call	_LcPutChar
  7776                           
  7777                           ;LcTLCD.c: 254:     LcPutChar('>');
  7778  001AD0  0E3E               	movlw	62
  7779  001AD2  EF2D  F00B         	goto	_LcPutChar
  7780  001AD6                     __end_of_LcInsertFletxa:
  7781                           	callstack 0
  7782                           
  7783 ;; *************** function _LcPutChar *****************
  7784 ;; Defined at:
  7785 ;;		line 135 in file "LcTLCD.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  c               1    wreg     unsigned char 
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;  c               1   21[COMRAM] unsigned char 
  7790 ;; Return value:  Size  Location     Type
  7791 ;;                  1    wreg      void 
  7792 ;; Registers used:
  7793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7794 ;; Tracked objects:
  7795 ;;		On entry : 0/0
  7796 ;;		On exit  : 0/0
  7797 ;;		Unchanged: 0/0
  7798 ;; Data sizes:     COMRAM   BANK0   BANK1
  7799 ;;      Params:         0       0       0
  7800 ;;      Locals:         1       0       0
  7801 ;;      Temps:          0       0       0
  7802 ;;      Totals:         1       0       0
  7803 ;;Total ram usage:        1 bytes
  7804 ;; Hardware stack levels used: 1
  7805 ;; Hardware stack levels required when called: 5
  7806 ;; This function calls:
  7807 ;;		_CantaData
  7808 ;;		_LcGotoXY
  7809 ;;		_WaitForBusy
  7810 ;; This function is called by:
  7811 ;;		_LcInsertFletxa
  7812 ;;		_LcLCD
  7813 ;;		_MTMenu
  7814 ;;		_GLCDMotor
  7815 ;;		_SIOMotor
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text62
  7820  00165A                     __ptext62:
  7821                           	callstack 0
  7822  00165A                     _LcPutChar:
  7823                           	callstack 24
  7824                           
  7825                           ;incstack = 0
  7826                           ;LcPutChar@c stored from wreg
  7827  00165A  6E70               	movwf	LcPutChar@c^0,c
  7828                           
  7829                           ;LcTLCD.c: 145:  WaitForBusy(); CantaData(c);
  7830  00165C  ECEC  F00B         	call	_WaitForBusy	;wreg free
  7831  001660  5070               	movf	LcPutChar@c^0,w,c
  7832  001662  EC0B  F00C         	call	_CantaData
  7833                           
  7834                           ;LcTLCD.c: 147:  ++ColumnAct;
  7835  001666  2A2C               	incf	_ColumnAct^0,f,c
  7836                           
  7837                           ;LcTLCD.c: 148:  if (Rows == 3) {
  7838  001668  0E03               	movlw	3
  7839  00166A  182F               	xorwf	_Rows^0,w,c
  7840  00166C  E107               	bnz	l4007
  7841                           
  7842                           ;LcTLCD.c: 149:   if (ColumnAct >= 20) {
  7843  00166E  0E13               	movlw	19
  7844  001670  642C               	cpfsgt	_ColumnAct^0,c
  7845  001672  0C13               	retlw	19
  7846                           
  7847                           ;LcTLCD.c: 150:    ColumnAct = 0;
  7848  001674  6A2C               	clrf	_ColumnAct^0,c
  7849                           
  7850                           ;LcTLCD.c: 151:    if (++RowAct >= 4) RowAct = 0;
  7851  001676  2A2D               	incf	_RowAct^0,f,c
  7852  001678  0E03               	movlw	3
  7853  00167A  D009               	goto	L3
  7854  00167C                     l4007:
  7855                           
  7856                           ;LcTLCD.c: 155:  if (Rows == 2) {
  7857  00167C  0E02               	movlw	2
  7858  00167E  182F               	xorwf	_Rows^0,w,c
  7859  001680  E10A               	bnz	l4019
  7860                           
  7861                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) {
  7862  001682  0E27               	movlw	39
  7863  001684  642C               	cpfsgt	_ColumnAct^0,c
  7864  001686  0C27               	retlw	39
  7865                           
  7866                           ;LcTLCD.c: 157:    ColumnAct = 0;
  7867  001688  6A2C               	clrf	_ColumnAct^0,c
  7868                           
  7869                           ;LcTLCD.c: 158:    if (++RowAct >= 2) RowAct = 0;
  7870  00168A  2A2D               	incf	_RowAct^0,f,c
  7871  00168C  0E01               	movlw	1
  7872  00168E                     L3:
  7873  00168E  642D               	cpfsgt	_RowAct^0,c
  7874  001690  D009               	goto	l4025
  7875  001692  6A2D               	clrf	_RowAct^0,c
  7876  001694  D007               	goto	l4025
  7877  001696                     l4019:
  7878                           
  7879                           ;LcTLCD.c: 162:  if (RowAct == 1) {
  7880  001696  042D               	decf	_RowAct^0,w,c
  7881  001698  A4D8               	btfss	status,2,c
  7882  00169A  0012               	return	
  7883                           
  7884                           ;LcTLCD.c: 163:   if (ColumnAct >= 40) ColumnAct = 0;
  7885  00169C  0E27               	movlw	39
  7886  00169E  642C               	cpfsgt	_ColumnAct^0,c
  7887  0016A0  D001               	goto	l4025
  7888  0016A2  6A2C               	clrf	_ColumnAct^0,c
  7889  0016A4                     l4025:
  7890                           
  7891                           ;LcTLCD.c: 164:   LcGotoXY(ColumnAct, RowAct);
  7892  0016A4  C02D  F068         	movff	_RowAct,LcGotoXY@Row
  7893  0016A8  502C               	movf	_ColumnAct^0,w,c
  7894  0016AA  EFD2  F009         	goto	_LcGotoXY
  7895  0016AE                     __end_of_LcPutChar:
  7896                           	callstack 0
  7897                           
  7898 ;; *************** function _LcGotoXY *****************
  7899 ;; Defined at:
  7900 ;;		line 108 in file "LcTLCD.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;  Column          1    wreg     unsigned char 
  7903 ;;  Row             1   13[COMRAM] unsigned char 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  Column          1   20[COMRAM] unsigned char 
  7906 ;;  Fisics          2   18[COMRAM] int 
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  1    wreg      void 
  7909 ;; Registers used:
  7910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMRAM   BANK0   BANK1
  7916 ;;      Params:         1       0       0
  7917 ;;      Locals:         5       0       0
  7918 ;;      Temps:          2       0       0
  7919 ;;      Totals:         8       0       0
  7920 ;;Total ram usage:        8 bytes
  7921 ;; Hardware stack levels used: 1
  7922 ;; Hardware stack levels required when called: 4
  7923 ;; This function calls:
  7924 ;;		_CantaIR
  7925 ;;		_WaitForBusy
  7926 ;; This function is called by:
  7927 ;;		_LcPutChar
  7928 ;;		_LcPutFletxa
  7929 ;;		_MTMenu
  7930 ;;		_GLCDMotor
  7931 ;;		_JMotor
  7932 ;;		_SIOMotor
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           	psect	text63
  7937  0013A4                     __ptext63:
  7938                           	callstack 0
  7939  0013A4                     _LcGotoXY:
  7940                           	callstack 24
  7941                           
  7942                           ;incstack = 0
  7943                           ;LcGotoXY@Column stored from wreg
  7944  0013A4  6E6F               	movwf	LcGotoXY@Column^0,c
  7945                           
  7946                           ;LcTLCD.c: 112:  int Fisics;;LcTLCD.c: 114:  switch (Rows) {
  7947  0013A6  D030               	goto	l3957
  7948  0013A8                     l3937:
  7949                           
  7950                           ;LcTLCD.c: 116:    Fisics = Column + (!Row ? 0 : 0x40); break;
  7951  0013A8  5068               	movf	LcGotoXY@Row^0,w,c
  7952  0013AA  E004               	bz	l152
  7953  0013AC  6A6C               	clrf	(_LcGotoXY$499+1)^0,c
  7954  0013AE  0E40               	movlw	64
  7955  0013B0  6E6B               	movwf	_LcGotoXY$499^0,c
  7956  0013B2  D002               	goto	l3941
  7957  0013B4                     l152:
  7958  0013B4  6A6B               	clrf	_LcGotoXY$499^0,c
  7959  0013B6  6A6C               	clrf	(_LcGotoXY$499+1)^0,c
  7960  0013B8                     l3941:
  7961  0013B8  506F               	movf	LcGotoXY@Column^0,w,c
  7962  0013BA  246B               	addwf	_LcGotoXY$499^0,w,c
  7963  0013BC  6E6D               	movwf	LcGotoXY@Fisics^0,c
  7964  0013BE  0E00               	movlw	0
  7965  0013C0  206C               	addwfc	(_LcGotoXY$499+1)^0,w,c
  7966  0013C2  6E6E               	movwf	(LcGotoXY@Fisics+1)^0,c
  7967  0013C4  D02E               	goto	l3959
  7968  0013C6                     l156:
  7969                           
  7970                           ;LcTLCD.c: 118:    Fisics = Column;
  7971  0013C6  C06F  F06D         	movff	LcGotoXY@Column,LcGotoXY@Fisics
  7972  0013CA  6A6E               	clrf	(LcGotoXY@Fisics+1)^0,c
  7973                           
  7974                           ;LcTLCD.c: 119:    if (Row == 1) Fisics += 0x40; else
  7975  0013CC  0468               	decf	LcGotoXY@Row^0,w,c
  7976  0013CE  E102               	bnz	l3947
  7977  0013D0  0E40               	movlw	64
  7978  0013D2  D004               	goto	L4
  7979  0013D4                     l3947:
  7980                           
  7981                           ;LcTLCD.c: 120:    if (Row == 2) Fisics += Columns; else
  7982  0013D4  0E02               	movlw	2
  7983  0013D6  1868               	xorwf	LcGotoXY@Row^0,w,c
  7984  0013D8  E104               	bnz	l3951
  7985  0013DA  502E               	movf	_Columns^0,w,c
  7986  0013DC                     L4:
  7987  0013DC  266D               	addwf	LcGotoXY@Fisics^0,f,c
  7988  0013DE  0E00               	movlw	0
  7989  0013E0  D00D               	goto	L5
  7990  0013E2                     l3951:
  7991                           
  7992                           ;LcTLCD.c: 121:    if (Row == 3) Fisics += 0x40+Columns;
  7993  0013E2  0E03               	movlw	3
  7994  0013E4  1868               	xorwf	LcGotoXY@Row^0,w,c
  7995  0013E6  E11D               	bnz	l3959
  7996  0013E8  502E               	movf	_Columns^0,w,c
  7997  0013EA  6E69               	movwf	??_LcGotoXY^0,c
  7998  0013EC  6A6A               	clrf	(??_LcGotoXY+1)^0,c
  7999  0013EE  0E40               	movlw	64
  8000  0013F0  2669               	addwf	??_LcGotoXY^0,f,c
  8001  0013F2  0E00               	movlw	0
  8002  0013F4  226A               	addwfc	(??_LcGotoXY+1)^0,f,c
  8003  0013F6  5069               	movf	??_LcGotoXY^0,w,c
  8004  0013F8  266D               	addwf	LcGotoXY@Fisics^0,f,c
  8005  0013FA  506A               	movf	(??_LcGotoXY+1)^0,w,c
  8006  0013FC                     L5:
  8007  0013FC  226E               	addwfc	(LcGotoXY@Fisics+1)^0,f,c
  8008                           
  8009                           ;LcTLCD.c: 122:    break;
  8010  0013FE  D011               	goto	l3959
  8011  001400                     l163:
  8012                           
  8013                           ;LcTLCD.c: 125:    Fisics = Column; break;
  8014  001400  C06F  F06D         	movff	LcGotoXY@Column,LcGotoXY@Fisics
  8015  001404  6A6E               	clrf	(LcGotoXY@Fisics+1)^0,c
  8016  001406  D00D               	goto	l3959
  8017  001408                     l3957:
  8018  001408  502F               	movf	_Rows^0,w,c
  8019  00140A  6E69               	movwf	??_LcGotoXY^0,c
  8020  00140C  6A6A               	clrf	(??_LcGotoXY+1)^0,c
  8021                           
  8022                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8023                           ; Switch size 1, requested type "space"
  8024                           ; Number of cases is 1, Range of values is 0 to 0
  8025                           ; switch strategies available:
  8026                           ; Name         Instructions Cycles
  8027                           ; simple_byte            4     3 (average)
  8028                           ;	Chosen strategy is simple_byte
  8029  00140E  506A               	movf	(??_LcGotoXY+1)^0,w,c
  8030  001410  E1F7               	bnz	l163
  8031                           
  8032                           ; Switch size 1, requested type "space"
  8033                           ; Number of cases is 3, Range of values is 1 to 4
  8034                           ; switch strategies available:
  8035                           ; Name         Instructions Cycles
  8036                           ; simple_byte           10     6 (average)
  8037                           ;	Chosen strategy is simple_byte
  8038  001412  5069               	movf	??_LcGotoXY^0,w,c
  8039  001414  0A01               	xorlw	1	; case 1
  8040  001416  E0F4               	bz	l163
  8041  001418  0A03               	xorlw	3	; case 2
  8042  00141A  E0C6               	bz	l3937
  8043  00141C  0A06               	xorlw	6	; case 4
  8044  00141E  E0D3               	bz	l156
  8045  001420  D7EF               	goto	l163
  8046  001422                     l3959:
  8047                           
  8048                           ;LcTLCD.c: 128:  WaitForBusy();
  8049  001422  ECEC  F00B         	call	_WaitForBusy	;wreg free
  8050                           
  8051                           ;LcTLCD.c: 129:  CantaIR(0x80 | Fisics);
  8052  001426  506D               	movf	LcGotoXY@Fisics^0,w,c
  8053  001428  0980               	iorlw	128
  8054  00142A  ECDE  F00C         	call	_CantaIR
  8055                           
  8056                           ;LcTLCD.c: 131:  RowAct = Row;
  8057  00142E  C068  F02D         	movff	LcGotoXY@Row,_RowAct
  8058                           
  8059                           ;LcTLCD.c: 132:  ColumnAct = Column;
  8060  001432  C06F  F02C         	movff	LcGotoXY@Column,_ColumnAct
  8061  001436  0012               	return		;funcret
  8062  001438                     __end_of_LcGotoXY:
  8063                           	callstack 0
  8064                           
  8065 ;; *************** function _CantaData *****************
  8066 ;; Defined at:
  8067 ;;		line 203 in file "LcTLCD.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  Data            1    wreg     unsigned char 
  8070 ;; Auto vars:     Size  Location     Type
  8071 ;;  Data            1    7[COMRAM] unsigned char 
  8072 ;; Return value:  Size  Location     Type
  8073 ;;                  1    wreg      void 
  8074 ;; Registers used:
  8075 ;;		wreg, status,2, status,0, cstack
  8076 ;; Tracked objects:
  8077 ;;		On entry : 0/0
  8078 ;;		On exit  : 0/0
  8079 ;;		Unchanged: 0/0
  8080 ;; Data sizes:     COMRAM   BANK0   BANK1
  8081 ;;      Params:         0       0       0
  8082 ;;      Locals:         1       0       0
  8083 ;;      Temps:          0       0       0
  8084 ;;      Totals:         1       0       0
  8085 ;;Total ram usage:        1 bytes
  8086 ;; Hardware stack levels used: 1
  8087 ;; Hardware stack levels required when called: 3
  8088 ;; This function calls:
  8089 ;;		_CantaPartAlta
  8090 ;;		_CantaPartBaixa
  8091 ;; This function is called by:
  8092 ;;		_LcPutChar
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           	psect	text64
  8097  001816                     __ptext64:
  8098                           	callstack 0
  8099  001816                     _CantaData:
  8100                           	callstack 25
  8101                           
  8102                           ;incstack = 0
  8103                           ;CantaData@Data stored from wreg
  8104  001816  6E62               	movwf	CantaData@Data^0,c
  8105                           
  8106                           ;LcTLCD.c: 204:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8107  001818  9694               	bcf	148,3,c	;volatile
  8108  00181A  9494               	bcf	148,2,c	;volatile
  8109  00181C  9294               	bcf	148,1,c	;volatile
  8110  00181E  9094               	bcf	148,0,c	;volatile
  8111                           
  8112                           ;LcTLCD.c: 205:  (LATCbits.LATC5 = 1);
  8113  001820  8A8B               	bsf	139,5,c	;volatile
  8114                           
  8115                           ;LcTLCD.c: 206:  (LATDbits.LATD7 = 0);
  8116  001822  9E8C               	bcf	140,7,c	;volatile
  8117                           
  8118                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  8119  001824  888B               	bsf	139,4,c	;volatile
  8120                           
  8121                           ;LcTLCD.c: 208:  CantaPartAlta(Data);
  8122  001826  5062               	movf	CantaData@Data^0,w,c
  8123  001828  ECC8  F00A         	call	_CantaPartAlta
  8124                           
  8125                           ;LcTLCD.c: 209:  (LATCbits.LATC4 = 1);
  8126                           
  8127                           ;LcTLCD.c: 210:  (LATCbits.LATC4 = 0);
  8128                           
  8129                           ;LcTLCD.c: 211:  (LATCbits.LATC4 = 0);
  8130                           
  8131                           ;LcTLCD.c: 212:  (LATCbits.LATC4 = 1);
  8132  00182C  D80B               	call	PL60	;call to abstracted procedure
  8133                           
  8134                           ;LcTLCD.c: 213:  CantaPartBaixa(Data);
  8135  00182E  5062               	movf	CantaData@Data^0,w,c
  8136  001830  EC95  F00A         	call	_CantaPartBaixa
  8137                           
  8138                           ;LcTLCD.c: 214:  (LATCbits.LATC4 = 1);
  8139                           
  8140                           ;LcTLCD.c: 215:  (LATCbits.LATC4 = 0);
  8141                           
  8142                           ;LcTLCD.c: 216:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8143  001834  D000               	goto	PL30	;call to abstracted procedure
  8144  001836                     __end_of_CantaData:
  8145                           	callstack 0
  8146  001836                     PL30:
  8147                           	callstack 24
  8148  001836  888B               	bsf	139,4,c	;volatile
  8149  001838  988B               	bcf	139,4,c	;volatile
  8150  00183A  8694               	bsf	148,3,c	;volatile
  8151  00183C  8494               	bsf	148,2,c	;volatile
  8152  00183E  8294               	bsf	148,1,c	;volatile
  8153  001840  8094               	bsf	148,0,c	;volatile
  8154  001842  0012               	return		;funcret
  8155  001844                     __end_ofPL30:
  8156                           	callstack 0
  8157  001844                     PL60:
  8158                           	callstack 24
  8159  001844  888B               	bsf	139,4,c	;volatile
  8160  001846  988B               	bcf	139,4,c	;volatile
  8161  001848  988B               	bcf	139,4,c	;volatile
  8162  00184A  888B               	bsf	139,4,c	;volatile
  8163  00184C  0012               	return	
  8164  00184E                     __end_ofPL60:
  8165                           	callstack 0
  8166                           
  8167 ;; *************** function _LcNewString *****************
  8168 ;; Defined at:
  8169 ;;		line 248 in file "LcTLCD.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  8172 ;;		 -> stringScore(4), stringText(16), usuaris.username(11), usuaris(240), 
  8173 ;;		 -> string(6), tempsJugant(6), menu(132), enterNewName(15), 
  8174 ;;		 -> deleteUser(12), highScore(12), Score(7), STR_6(12), 
  8175 ;;		 -> STR_5(12), STR_4(15), STR_3(10), STR_2(13), 
  8176 ;;		 -> STR_1(15), 
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      void 
  8181 ;; Registers used:
  8182 ;;		wreg, status,2, status,0
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1
  8188 ;;      Params:         2       0       0
  8189 ;;      Locals:         0       0       0
  8190 ;;      Temps:          0       0       0
  8191 ;;      Totals:         2       0       0
  8192 ;;Total ram usage:        2 bytes
  8193 ;; Hardware stack levels used: 1
  8194 ;; Hardware stack levels required when called: 2
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_MTMenu
  8199 ;;		_GLCDMotor
  8200 ;;		_JMotor
  8201 ;;		_SIOMotor
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text65
  8206  001AD6                     __ptext65:
  8207                           	callstack 0
  8208  001AD6                     _LcNewString:
  8209                           	callstack 27
  8210                           
  8211                           ;LcTLCD.c: 249:     s_ptr = new_s;
  8212                           
  8213                           ;incstack = 0
  8214  001AD6  C063  F005         	movff	LcNewString@new_s,_s_ptr
  8215  001ADA  C064  F006         	movff	LcNewString@new_s+1,_s_ptr+1
  8216                           
  8217                           ;LcTLCD.c: 250:     nou_s = 1;
  8218  001ADE  8079               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8219  001AE0  0012               	return		;funcret
  8220  001AE2                     __end_of_LcNewString:
  8221                           	callstack 0
  8222                           
  8223 ;; *************** function _LcLliure *****************
  8224 ;; Defined at:
  8225 ;;		line 283 in file "LcTLCD.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;		None
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;		None
  8230 ;; Return value:  Size  Location     Type
  8231 ;;		None               void
  8232 ;; Registers used:
  8233 ;;		status,0
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1
  8239 ;;      Params:         0       0       0
  8240 ;;      Locals:         0       0       0
  8241 ;;      Temps:          0       0       0
  8242 ;;      Totals:         0       0       0
  8243 ;;Total ram usage:        0 bytes
  8244 ;; Hardware stack levels used: 1
  8245 ;; Hardware stack levels required when called: 2
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_MTMenu
  8250 ;;		_GLCDMotor
  8251 ;;		_JMotor
  8252 ;;		_SIOMotor
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text66
  8257  001AE2                     __ptext66:
  8258                           	callstack 0
  8259  001AE2                     _LcLliure:
  8260                           	callstack 27
  8261                           
  8262                           ;LcTLCD.c: 284:     return !nou_s;
  8263                           
  8264                           ;incstack = 0
  8265  001AE2  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8266  001AE4  D002               	goto	l4077
  8267  001AE6  90D8               	bcf	status,0,c
  8268  001AE8  0012               	return	
  8269  001AEA                     l4077:
  8270  001AEA  80D8               	bsf	status,0,c
  8271  001AEC  0012               	return		;funcret
  8272  001AEE                     __end_of_LcLliure:
  8273                           	callstack 0
  8274                           
  8275 ;; *************** function _LcClear *****************
  8276 ;; Defined at:
  8277 ;;		line 87 in file "LcTLCD.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;		None
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;		None
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  1    wreg      void 
  8284 ;; Registers used:
  8285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMRAM   BANK0   BANK1
  8291 ;;      Params:         0       0       0
  8292 ;;      Locals:         0       0       0
  8293 ;;      Temps:          0       0       0
  8294 ;;      Totals:         0       0       0
  8295 ;;Total ram usage:        0 bytes
  8296 ;; Hardware stack levels used: 1
  8297 ;; Hardware stack levels required when called: 4
  8298 ;; This function calls:
  8299 ;;		_CantaIR
  8300 ;;		_Espera
  8301 ;;		_WaitForBusy
  8302 ;; This function is called by:
  8303 ;;		_MTMenu
  8304 ;;		_GLCDMotor
  8305 ;;		_SIOMotor
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text67
  8310  0019F4                     __ptext67:
  8311                           	callstack 0
  8312  0019F4                     _LcClear:
  8313                           	callstack 25
  8314                           
  8315                           ;LcTLCD.c: 90:  WaitForBusy(); CantaIR(0x01);
  8316                           
  8317                           ;incstack = 0
  8318  0019F4  ECEC  F00B         	call	_WaitForBusy	;wreg free
  8319  0019F8  0E01               	movlw	1
  8320  0019FA  ECDE  F00C         	call	_CantaIR
  8321                           
  8322                           ;LcTLCD.c: 91:  Espera(Timer, 6);
  8323  0019FE  D802               	call	PL58	;call to abstracted procedure
  8324  001A00  EFCD  F00C         	goto	_Espera
  8325  001A04                     __end_of_LcClear:
  8326                           	callstack 0
  8327  001A04                     PL58:
  8328                           	callstack 25
  8329  001A04  6A68               	clrf	(Espera@ms+1)^0,c
  8330  001A06  0E06               	movlw	6
  8331  001A08  6E67               	movwf	Espera@ms^0,c
  8332  001A0A  502B               	movf	_Timer^0,w,c
  8333  001A0C  0012               	return	
  8334  001A0E                     __end_ofPL58:
  8335                           	callstack 0
  8336                           
  8337 ;; *************** function _WaitForBusy *****************
  8338 ;; Defined at:
  8339 ;;		line 219 in file "LcTLCD.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;		None
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;  Busy            1   12[COMRAM] unsigned char 
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1    wreg      void 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1
  8353 ;;      Params:         0       0       0
  8354 ;;      Locals:         1       0       0
  8355 ;;      Temps:          0       0       0
  8356 ;;      Totals:         1       0       0
  8357 ;;Total ram usage:        1 bytes
  8358 ;; Hardware stack levels used: 1
  8359 ;; Hardware stack levels required when called: 3
  8360 ;; This function calls:
  8361 ;;		_TiGetTics
  8362 ;;		_TiResetTics
  8363 ;; This function is called by:
  8364 ;;		_LcInit
  8365 ;;		_LcClear
  8366 ;;		_LcCursorOn
  8367 ;;		_LcCursorOff
  8368 ;;		_LcGotoXY
  8369 ;;		_LcPutChar
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text68
  8374  0017D8                     __ptext68:
  8375                           	callstack 0
  8376  0017D8                     _WaitForBusy:
  8377                           	callstack 25
  8378                           
  8379                           ;LcTLCD.c: 220:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8380                           
  8381                           ;incstack = 0
  8382  0017D8  8694               	bsf	148,3,c	;volatile
  8383  0017DA  8494               	bsf	148,2,c	;volatile
  8384  0017DC  8294               	bsf	148,1,c	;volatile
  8385  0017DE  8094               	bsf	148,0,c	;volatile
  8386                           
  8387                           ;LcTLCD.c: 221:  (LATCbits.LATC5 = 0);
  8388  0017E0  9A8B               	bcf	139,5,c	;volatile
  8389                           
  8390                           ;LcTLCD.c: 222:  (LATDbits.LATD7 = 1);
  8391  0017E2  8E8C               	bsf	140,7,c	;volatile
  8392                           
  8393                           ;LcTLCD.c: 223:  TiResetTics(Timer);
  8394  0017E4  502B               	movf	_Timer^0,w,c
  8395  0017E6  ECEC  F00C         	call	_TiResetTics
  8396  0017EA                     l3911:
  8397                           
  8398                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8399  0017EA  888B               	bsf	139,4,c	;volatile
  8400  0017EC  888B               	bsf	139,4,c	;volatile
  8401                           
  8402                           ;LcTLCD.c: 226:   Busy = (PORTCbits.RC3);
  8403  0017EE  0E00               	movlw	0
  8404  0017F0  B682               	btfsc	130,3,c	;volatile
  8405  0017F2  0E01               	movlw	1
  8406  0017F4  6E67               	movwf	WaitForBusy@Busy^0,c
  8407                           
  8408                           ;LcTLCD.c: 227:   (LATCbits.LATC4 = 0);
  8409  0017F6  988B               	bcf	139,4,c	;volatile
  8410                           
  8411                           ;LcTLCD.c: 228:   (LATCbits.LATC4 = 0);
  8412  0017F8  988B               	bcf	139,4,c	;volatile
  8413                           
  8414                           ;LcTLCD.c: 229:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8415  0017FA  888B               	bsf	139,4,c	;volatile
  8416  0017FC  888B               	bsf	139,4,c	;volatile
  8417                           
  8418                           ;LcTLCD.c: 231:   (LATCbits.LATC4 = 0);
  8419  0017FE  988B               	bcf	139,4,c	;volatile
  8420                           
  8421                           ;LcTLCD.c: 232:   (LATCbits.LATC4 = 0);
  8422  001800  988B               	bcf	139,4,c	;volatile
  8423                           
  8424                           ;LcTLCD.c: 233:   if (TiGetTics(Timer)) break;
  8425  001802  502B               	movf	_Timer^0,w,c
  8426  001804  ECBA  F00C         	call	_TiGetTics
  8427  001808  5060               	movf	?_TiGetTics^0,w,c
  8428  00180A  1061               	iorwf	(?_TiGetTics+1)^0,w,c
  8429  00180C  E001               	bz	l3933
  8430  00180E  0012               	return	
  8431  001810                     l3933:
  8432                           
  8433                           ;LcTLCD.c: 234:  } while(Busy);
  8434  001810  5067               	movf	WaitForBusy@Busy^0,w,c
  8435  001812  E1EB               	bnz	l3911
  8436  001814  0012               	return		;funcret
  8437  001816                     __end_of_WaitForBusy:
  8438                           	callstack 0
  8439                           
  8440 ;; *************** function _Espera *****************
  8441 ;; Defined at:
  8442 ;;		line 168 in file "LcTLCD.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  Timer           1    wreg     unsigned char 
  8445 ;;  ms              2   12[COMRAM] int 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  Timer           1   15[COMRAM] unsigned char 
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  1    wreg      void 
  8450 ;; Registers used:
  8451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMRAM   BANK0   BANK1
  8457 ;;      Params:         2       0       0
  8458 ;;      Locals:         1       0       0
  8459 ;;      Temps:          1       0       0
  8460 ;;      Totals:         4       0       0
  8461 ;;Total ram usage:        4 bytes
  8462 ;; Hardware stack levels used: 1
  8463 ;; Hardware stack levels required when called: 3
  8464 ;; This function calls:
  8465 ;;		_TiGetTics
  8466 ;;		_TiResetTics
  8467 ;; This function is called by:
  8468 ;;		_LcInit
  8469 ;;		_LcClear
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text69
  8474  00199A                     __ptext69:
  8475                           	callstack 0
  8476  00199A                     _Espera:
  8477                           	callstack 25
  8478                           
  8479                           ;incstack = 0
  8480                           ;Espera@Timer stored from wreg
  8481  00199A  6E6A               	movwf	Espera@Timer^0,c
  8482                           
  8483                           ;LcTLCD.c: 169:  TiResetTics(Timer);
  8484  00199C  506A               	movf	Espera@Timer^0,w,c
  8485  00199E  ECEC  F00C         	call	_TiResetTics
  8486  0019A2                     l4029:
  8487  0019A2  506A               	movf	Espera@Timer^0,w,c
  8488  0019A4  ECBA  F00C         	call	_TiGetTics
  8489  0019A8  5067               	movf	Espera@ms^0,w,c
  8490  0019AA  5C60               	subwf	?_TiGetTics^0,w,c
  8491  0019AC  5061               	movf	(?_TiGetTics+1)^0,w,c
  8492  0019AE  0A80               	xorlw	128
  8493  0019B0  6E69               	movwf	??_Espera^0,c
  8494  0019B2  5068               	movf	(Espera@ms+1)^0,w,c
  8495  0019B4  0A80               	xorlw	128
  8496  0019B6  5869               	subwfb	??_Espera^0,w,c
  8497  0019B8  E3F4               	bnc	l4029
  8498  0019BA  0012               	return		;funcret
  8499  0019BC                     __end_of_Espera:
  8500                           	callstack 0
  8501                           
  8502 ;; *************** function _CantaIR *****************
  8503 ;; Defined at:
  8504 ;;		line 187 in file "LcTLCD.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  IR              1    wreg     unsigned char 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;  IR              1    7[COMRAM] unsigned char 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      void 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2, status,0, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1
  8518 ;;      Params:         0       0       0
  8519 ;;      Locals:         1       0       0
  8520 ;;      Temps:          0       0       0
  8521 ;;      Totals:         1       0       0
  8522 ;;Total ram usage:        1 bytes
  8523 ;; Hardware stack levels used: 1
  8524 ;; Hardware stack levels required when called: 3
  8525 ;; This function calls:
  8526 ;;		_CantaPartAlta
  8527 ;;		_CantaPartBaixa
  8528 ;; This function is called by:
  8529 ;;		_LcScroll
  8530 ;;		_LcInit
  8531 ;;		_LcClear
  8532 ;;		_LcCursorOn
  8533 ;;		_LcCursorOff
  8534 ;;		_LcGotoXY
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text70
  8539  0019BC                     __ptext70:
  8540                           	callstack 0
  8541  0019BC                     _CantaIR:
  8542                           	callstack 24
  8543                           
  8544                           ;incstack = 0
  8545                           ;CantaIR@IR stored from wreg
  8546  0019BC  6E62               	movwf	CantaIR@IR^0,c
  8547                           
  8548                           ;LcTLCD.c: 188:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8549  0019BE  9694               	bcf	148,3,c	;volatile
  8550                           
  8551                           ;LcTLCD.c: 189:  (LATCbits.LATC5 = 0);
  8552                           
  8553                           ;LcTLCD.c: 190:  (LATDbits.LATD7 = 0);
  8554                           
  8555                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  8556  0019C0  EC4E  F00A         	call	PL40	;call to abstracted procedure
  8557                           
  8558                           ;LcTLCD.c: 192:  CantaPartAlta(IR);
  8559  0019C4  5062               	movf	CantaIR@IR^0,w,c
  8560  0019C6  ECC8  F00A         	call	_CantaPartAlta
  8561                           
  8562                           ;LcTLCD.c: 193:  (LATCbits.LATC4 = 1);
  8563                           
  8564                           ;LcTLCD.c: 194:  (LATCbits.LATC4 = 0);
  8565                           
  8566                           ;LcTLCD.c: 195:  (LATCbits.LATC4 = 0);
  8567                           
  8568                           ;LcTLCD.c: 196:  (LATCbits.LATC4 = 1);
  8569  0019CA  EC22  F00C         	call	PL60	;call to abstracted procedure
  8570                           
  8571                           ;LcTLCD.c: 197:  CantaPartBaixa(IR);
  8572  0019CE  5062               	movf	CantaIR@IR^0,w,c
  8573  0019D0  EC95  F00A         	call	_CantaPartBaixa
  8574                           
  8575                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  8576                           
  8577                           ;LcTLCD.c: 199:  (LATCbits.LATC4 = 0);
  8578                           
  8579                           ;LcTLCD.c: 200:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8580  0019D4  EF1B  F00C         	goto	PL30	;call to abstracted procedure
  8581  0019D8                     __end_of_CantaIR:
  8582                           	callstack 0
  8583                           
  8584 ;; *************** function _CantaPartBaixa *****************
  8585 ;; Defined at:
  8586 ;;		line 180 in file "LcTLCD.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;  c               1    wreg     unsigned char 
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;  c               1    6[COMRAM] unsigned char 
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  1    wreg      void 
  8593 ;; Registers used:
  8594 ;;		wreg, status,2, status,0
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMRAM   BANK0   BANK1
  8600 ;;      Params:         0       0       0
  8601 ;;      Locals:         1       0       0
  8602 ;;      Temps:          1       0       0
  8603 ;;      Totals:         2       0       0
  8604 ;;Total ram usage:        2 bytes
  8605 ;; Hardware stack levels used: 1
  8606 ;; Hardware stack levels required when called: 2
  8607 ;; This function calls:
  8608 ;;		Nothing
  8609 ;; This function is called by:
  8610 ;;		_CantaIR
  8611 ;;		_CantaData
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text71
  8616  00152A                     __ptext71:
  8617                           	callstack 0
  8618  00152A                     _CantaPartBaixa:
  8619                           	callstack 24
  8620                           
  8621                           ;incstack = 0
  8622                           ;CantaPartBaixa@c stored from wreg
  8623  00152A  6E61               	movwf	CantaPartBaixa@c^0,c
  8624                           
  8625                           ;LcTLCD.c: 181:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  8626  00152C  A661               	btfss	CantaPartBaixa@c^0,3,c
  8627  00152E  D003               	goto	u3200
  8628  001530  6A60               	clrf	??_CantaPartBaixa^0,c
  8629  001532  2A60               	incf	??_CantaPartBaixa^0,f,c
  8630  001534  D001               	goto	u3218
  8631  001536                     u3200:
  8632  001536  6A60               	clrf	??_CantaPartBaixa^0,c
  8633  001538                     u3218:
  8634  001538  4660               	rlncf	??_CantaPartBaixa^0,f,c
  8635  00153A  D825               	call	PL62	;call to abstracted procedure
  8636  00153C  0BF7               	andlw	-9
  8637  00153E  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8638  001540  6E8B               	movwf	139,c	;volatile
  8639                           
  8640                           ;LcTLCD.c: 182:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  8641  001542  A461               	btfss	CantaPartBaixa@c^0,2,c
  8642  001544  D003               	goto	u3220
  8643  001546  6A60               	clrf	??_CantaPartBaixa^0,c
  8644  001548  2A60               	incf	??_CantaPartBaixa^0,f,c
  8645  00154A  D001               	goto	u3238
  8646  00154C                     u3220:
  8647  00154C  6A60               	clrf	??_CantaPartBaixa^0,c
  8648  00154E                     u3238:
  8649  00154E  D81B               	call	PL62	;call to abstracted procedure
  8650  001550  0BFB               	andlw	-5
  8651  001552  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8652  001554  6E8B               	movwf	139,c	;volatile
  8653                           
  8654                           ;LcTLCD.c: 183:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  8655  001556  A261               	btfss	CantaPartBaixa@c^0,1,c
  8656  001558  D003               	goto	u3240
  8657  00155A  6A60               	clrf	??_CantaPartBaixa^0,c
  8658  00155C  2A60               	incf	??_CantaPartBaixa^0,f,c
  8659  00155E  D001               	goto	u3258
  8660  001560                     u3240:
  8661  001560  6A60               	clrf	??_CantaPartBaixa^0,c
  8662  001562                     u3258:
  8663  001562  4660               	rlncf	??_CantaPartBaixa^0,f,c
  8664  001564  508B               	movf	139,w,c	;volatile
  8665  001566  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8666  001568  0BFD               	andlw	-3
  8667  00156A  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8668  00156C  6E8B               	movwf	139,c	;volatile
  8669                           
  8670                           ;LcTLCD.c: 184:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  8671  00156E  A061               	btfss	CantaPartBaixa@c^0,0,c
  8672  001570  D003               	goto	u3260
  8673  001572  6A60               	clrf	??_CantaPartBaixa^0,c
  8674  001574  2A60               	incf	??_CantaPartBaixa^0,f,c
  8675  001576  D001               	goto	u3278
  8676  001578                     u3260:
  8677  001578  6A60               	clrf	??_CantaPartBaixa^0,c
  8678  00157A                     u3278:
  8679  00157A  508B               	movf	139,w,c	;volatile
  8680  00157C  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8681  00157E  0BFE               	andlw	-2
  8682  001580  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8683  001582  6E8B               	movwf	139,c	;volatile
  8684  001584  0012               	return		;funcret
  8685  001586                     __end_of_CantaPartBaixa:
  8686                           	callstack 0
  8687  001586                     PL62:
  8688                           	callstack 24
  8689  001586  4660               	rlncf	??_CantaPartBaixa^0,f,c
  8690  001588  4660               	rlncf	??_CantaPartBaixa^0,f,c
  8691  00158A  508B               	movf	139,w,c	;volatile
  8692  00158C  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8693  00158E  0012               	return	
  8694  001590                     __end_ofPL62:
  8695                           	callstack 0
  8696                           
  8697 ;; *************** function _CantaPartAlta *****************
  8698 ;; Defined at:
  8699 ;;		line 173 in file "LcTLCD.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  c               1    wreg     unsigned char 
  8702 ;; Auto vars:     Size  Location     Type
  8703 ;;  c               1    6[COMRAM] unsigned char 
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  1    wreg      void 
  8706 ;; Registers used:
  8707 ;;		wreg, status,2, status,0
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMRAM   BANK0   BANK1
  8713 ;;      Params:         0       0       0
  8714 ;;      Locals:         1       0       0
  8715 ;;      Temps:          1       0       0
  8716 ;;      Totals:         2       0       0
  8717 ;;Total ram usage:        2 bytes
  8718 ;; Hardware stack levels used: 1
  8719 ;; Hardware stack levels required when called: 2
  8720 ;; This function calls:
  8721 ;;		Nothing
  8722 ;; This function is called by:
  8723 ;;		_CantaIR
  8724 ;;		_CantaData
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text72
  8729  001590                     __ptext72:
  8730                           	callstack 0
  8731  001590                     _CantaPartAlta:
  8732                           	callstack 24
  8733                           
  8734                           ;incstack = 0
  8735                           ;CantaPartAlta@c stored from wreg
  8736  001590  6E61               	movwf	CantaPartAlta@c^0,c
  8737                           
  8738                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  8739  001592  AE61               	btfss	CantaPartAlta@c^0,7,c
  8740  001594  D003               	goto	u3120
  8741  001596  6A60               	clrf	??_CantaPartAlta^0,c
  8742  001598  2A60               	incf	??_CantaPartAlta^0,f,c
  8743  00159A  D001               	goto	u3138
  8744  00159C                     u3120:
  8745  00159C  6A60               	clrf	??_CantaPartAlta^0,c
  8746  00159E                     u3138:
  8747  00159E  4660               	rlncf	??_CantaPartAlta^0,f,c
  8748  0015A0  D825               	call	PL56	;call to abstracted procedure
  8749  0015A2  0BF7               	andlw	-9
  8750  0015A4  1860               	xorwf	??_CantaPartAlta^0,w,c
  8751  0015A6  6E8B               	movwf	139,c	;volatile
  8752                           
  8753                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  8754  0015A8  AC61               	btfss	CantaPartAlta@c^0,6,c
  8755  0015AA  D003               	goto	u3140
  8756  0015AC  6A60               	clrf	??_CantaPartAlta^0,c
  8757  0015AE  2A60               	incf	??_CantaPartAlta^0,f,c
  8758  0015B0  D001               	goto	u3158
  8759  0015B2                     u3140:
  8760  0015B2  6A60               	clrf	??_CantaPartAlta^0,c
  8761  0015B4                     u3158:
  8762  0015B4  D81B               	call	PL56	;call to abstracted procedure
  8763  0015B6  0BFB               	andlw	-5
  8764  0015B8  1860               	xorwf	??_CantaPartAlta^0,w,c
  8765  0015BA  6E8B               	movwf	139,c	;volatile
  8766                           
  8767                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  8768  0015BC  AA61               	btfss	CantaPartAlta@c^0,5,c
  8769  0015BE  D003               	goto	u3160
  8770  0015C0  6A60               	clrf	??_CantaPartAlta^0,c
  8771  0015C2  2A60               	incf	??_CantaPartAlta^0,f,c
  8772  0015C4  D001               	goto	u3178
  8773  0015C6                     u3160:
  8774  0015C6  6A60               	clrf	??_CantaPartAlta^0,c
  8775  0015C8                     u3178:
  8776  0015C8  4660               	rlncf	??_CantaPartAlta^0,f,c
  8777  0015CA  508B               	movf	139,w,c	;volatile
  8778  0015CC  1860               	xorwf	??_CantaPartAlta^0,w,c
  8779  0015CE  0BFD               	andlw	-3
  8780  0015D0  1860               	xorwf	??_CantaPartAlta^0,w,c
  8781  0015D2  6E8B               	movwf	139,c	;volatile
  8782                           
  8783                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  8784  0015D4  A861               	btfss	CantaPartAlta@c^0,4,c
  8785  0015D6  D003               	goto	u3180
  8786  0015D8  6A60               	clrf	??_CantaPartAlta^0,c
  8787  0015DA  2A60               	incf	??_CantaPartAlta^0,f,c
  8788  0015DC  D001               	goto	u3198
  8789  0015DE                     u3180:
  8790  0015DE  6A60               	clrf	??_CantaPartAlta^0,c
  8791  0015E0                     u3198:
  8792  0015E0  508B               	movf	139,w,c	;volatile
  8793  0015E2  1860               	xorwf	??_CantaPartAlta^0,w,c
  8794  0015E4  0BFE               	andlw	-2
  8795  0015E6  1860               	xorwf	??_CantaPartAlta^0,w,c
  8796  0015E8  6E8B               	movwf	139,c	;volatile
  8797  0015EA  0012               	return		;funcret
  8798  0015EC                     __end_of_CantaPartAlta:
  8799                           	callstack 0
  8800  0015EC                     PL56:
  8801                           	callstack 24
  8802  0015EC  4660               	rlncf	??_CantaPartAlta^0,f,c
  8803  0015EE  4660               	rlncf	??_CantaPartAlta^0,f,c
  8804  0015F0  508B               	movf	139,w,c	;volatile
  8805  0015F2  1860               	xorwf	??_CantaPartAlta^0,w,c
  8806  0015F4  0012               	return	
  8807  0015F6                     __end_ofPL56:
  8808                           	callstack 0
  8809                           
  8810 ;; *************** function _GLCDInit *****************
  8811 ;; Defined at:
  8812 ;;		line 26 in file "GLCDGestioLCD.c"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;		None
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;		None
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  1    wreg      void 
  8819 ;; Registers used:
  8820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMRAM   BANK0   BANK1
  8826 ;;      Params:         0       0       0
  8827 ;;      Locals:         0       0       0
  8828 ;;      Temps:          0       0       0
  8829 ;;      Totals:         0       0       0
  8830 ;;Total ram usage:        0 bytes
  8831 ;; Hardware stack levels used: 1
  8832 ;; Hardware stack levels required when called: 3
  8833 ;; This function calls:
  8834 ;;		_TiGetTimer
  8835 ;; This function is called by:
  8836 ;;		_main
  8837 ;; This function uses a non-reentrant model
  8838 ;;
  8839                           
  8840                           	psect	text73
  8841  001B6E                     __ptext73:
  8842                           	callstack 0
  8843  001B6E                     _GLCDInit:
  8844                           	callstack 27
  8845                           
  8846                           ;GLCDGestioLCD.c: 27:     timerGLCD=TiGetTimer();
  8847                           
  8848                           ;incstack = 0
  8849  001B6E  EC41  F00C         	call	_TiGetTimer	;wreg free
  8850  001B72  6E1D               	movwf	_timerGLCD^0,c
  8851  001B74  0012               	return		;funcret
  8852  001B76                     __end_of_GLCDInit:
  8853                           	callstack 0
  8854                           
  8855 ;; *************** function _CtoA *****************
  8856 ;; Defined at:
  8857 ;;		line 23 in file "CtoA.c"
  8858 ;; Parameters:    Size  Location     Type
  8859 ;;		None
  8860 ;; Auto vars:     Size  Location     Type
  8861 ;;		None
  8862 ;; Return value:  Size  Location     Type
  8863 ;;                  1    wreg      void 
  8864 ;; Registers used:
  8865 ;;		wreg, status,2, status,0
  8866 ;; Tracked objects:
  8867 ;;		On entry : 0/0
  8868 ;;		On exit  : 0/0
  8869 ;;		Unchanged: 0/0
  8870 ;; Data sizes:     COMRAM   BANK0   BANK1
  8871 ;;      Params:         0       0       0
  8872 ;;      Locals:         0       0       0
  8873 ;;      Temps:          2       0       0
  8874 ;;      Totals:         2       0       0
  8875 ;;Total ram usage:        2 bytes
  8876 ;; Hardware stack levels used: 1
  8877 ;; Hardware stack levels required when called: 2
  8878 ;; This function calls:
  8879 ;;		Nothing
  8880 ;; This function is called by:
  8881 ;;		_main
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           
  8885                           	psect	text74
  8886  0016AE                     __ptext74:
  8887                           	callstack 0
  8888  0016AE                     _CtoA:
  8889                           	callstack 28
  8890                           
  8891                           ;CtoA.c: 24:  static char state = 0;;CtoA.c: 25:     switch(state){
  8892                           
  8893                           ;incstack = 0
  8894  0016AE  D01E               	goto	l3407
  8895  0016B0                     l3377:
  8896                           
  8897                           ;CtoA.c: 27:    if (convertir != 250) {
  8898  0016B0  0EFA               	movlw	250
  8899  0016B2  183E               	xorwf	_convertir^0,w,c
  8900  0016B4  B4D8               	btfsc	status,2,c
  8901  0016B6  0012               	return	
  8902                           
  8903                           ;CtoA.c: 28:     stringScore[2]++;
  8904  0016B8  2A59               	incf	(_stringScore+2)^0,f,c
  8905                           
  8906                           ;CtoA.c: 29:             if (stringScore[2] == 58) {
  8907  0016BA  0E3A               	movlw	58
  8908  0016BC  1859               	xorwf	(_stringScore+2)^0,w,c
  8909  0016BE  E103               	bnz	l3387
  8910                           
  8911                           ;CtoA.c: 30:                 stringScore[2] = '0';
  8912  0016C0  0E30               	movlw	48
  8913  0016C2  6E59               	movwf	(_stringScore+2)^0,c
  8914                           
  8915                           ;CtoA.c: 31:                 stringScore[1]++;
  8916  0016C4  2A58               	incf	(_stringScore+1)^0,f,c
  8917  0016C6                     l3387:
  8918                           
  8919                           ;CtoA.c: 33:             if (stringScore[1] == 58) {
  8920  0016C6  0E3A               	movlw	58
  8921  0016C8  1858               	xorwf	(_stringScore+1)^0,w,c
  8922  0016CA  E103               	bnz	l3393
  8923                           
  8924                           ;CtoA.c: 34:                 stringScore[1] = '0';
  8925  0016CC  0E30               	movlw	48
  8926  0016CE  6E58               	movwf	(_stringScore+1)^0,c
  8927                           
  8928                           ;CtoA.c: 35:                 stringScore[0]++;
  8929  0016D0  2A57               	incf	_stringScore^0,f,c
  8930  0016D2                     l3393:
  8931                           
  8932                           ;CtoA.c: 37:             convertir--;
  8933  0016D2  063E               	decf	_convertir^0,f,c
  8934                           
  8935                           ;CtoA.c: 38:     state = 1;
  8936  0016D4  0E01               	movlw	1
  8937  0016D6  6E07               	movwf	CtoA@state^0,c
  8938  0016D8  0C01               	retlw	1
  8939  0016DA                     l3395:
  8940                           
  8941                           ;CtoA.c: 42:    if (convertir == 0) {
  8942  0016DA  503E               	movf	_convertir^0,w,c
  8943  0016DC  E104               	bnz	l3401
  8944                           
  8945                           ;CtoA.c: 43:     convertir = 250;
  8946  0016DE  0EFA               	movlw	250
  8947  0016E0  6E3E               	movwf	_convertir^0,c
  8948  0016E2                     l3399:
  8949                           
  8950                           ;CtoA.c: 44:     state = 0;
  8951  0016E2  6A07               	clrf	CtoA@state^0,c
  8952                           
  8953                           ;CtoA.c: 45:    }
  8954  0016E4  0012               	return	
  8955  0016E6                     l3401:
  8956  0016E6  503E               	movf	_convertir^0,w,c
  8957  0016E8  E1FC               	bnz	l3399
  8958  0016EA  0012               	return	
  8959  0016EC                     l3407:
  8960  0016EC  5007               	movf	CtoA@state^0,w,c
  8961  0016EE  6E60               	movwf	??_CtoA^0,c
  8962  0016F0  6A61               	clrf	(??_CtoA+1)^0,c
  8963                           
  8964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8965                           ; Switch size 1, requested type "space"
  8966                           ; Number of cases is 1, Range of values is 0 to 0
  8967                           ; switch strategies available:
  8968                           ; Name         Instructions Cycles
  8969                           ; simple_byte            4     3 (average)
  8970                           ;	Chosen strategy is simple_byte
  8971  0016F2  5061               	movf	(??_CtoA+1)^0,w,c
  8972  0016F4  A4D8               	btfss	status,2,c
  8973  0016F6  0012               	return	
  8974                           
  8975                           ; Switch size 1, requested type "space"
  8976                           ; Number of cases is 2, Range of values is 0 to 1
  8977                           ; switch strategies available:
  8978                           ; Name         Instructions Cycles
  8979                           ; simple_byte            7     4 (average)
  8980                           ;	Chosen strategy is simple_byte
  8981  0016F8  5060               	movf	??_CtoA^0,w,c
  8982  0016FA  E0DA               	bz	l3377
  8983  0016FC  0A01               	xorlw	1	; case 1
  8984  0016FE  E0ED               	bz	l3395
  8985  001700  0012               	return		;funcret
  8986  001702                     __end_of_CtoA:
  8987                           	callstack 0
  8988                           
  8989 ;; *************** function _AlTAltaveu *****************
  8990 ;; Defined at:
  8991 ;;		line 24 in file "AlTAltaveu.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;		None
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;		None
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      void 
  8998 ;; Registers used:
  8999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1
  9005 ;;      Params:         0       0       0
  9006 ;;      Locals:         0       0       0
  9007 ;;      Temps:          3       0       0
  9008 ;;      Totals:         3       0       0
  9009 ;;Total ram usage:        3 bytes
  9010 ;; Hardware stack levels used: 1
  9011 ;; Hardware stack levels required when called: 3
  9012 ;; This function calls:
  9013 ;;		_TiGetTics
  9014 ;;		_TiResetTics
  9015 ;; This function is called by:
  9016 ;;		_main
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text75
  9021  001106                     __ptext75:
  9022                           	callstack 0
  9023  001106                     _AlTAltaveu:
  9024                           	callstack 27
  9025                           
  9026                           ;AlTAltaveu.c: 25:  static char state = 0;;AlTAltaveu.c: 27:  switch(state) {
  9027                           
  9028                           ;incstack = 0
  9029  001106  D03E               	goto	l4335
  9030  001108                     l302:
  9031                           
  9032                           ;AlTAltaveu.c: 29:    if (reproduir == 1) {
  9033  001108  AE78               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  9034  00110A  0012               	return	
  9035                           
  9036                           ;AlTAltaveu.c: 30:     nota = 1;
  9037  00110C  0E01               	movlw	1
  9038  00110E  6E28               	movwf	_nota^0,c
  9039                           
  9040                           ;AlTAltaveu.c: 31:     TiResetTics(timer_nota);
  9041  001110  5029               	movf	_timer_nota^0,w,c
  9042  001112  ECEC  F00C         	call	_TiResetTics
  9043                           
  9044                           ;AlTAltaveu.c: 32:     TiResetTics(timer_durada);
  9045  001116  5027               	movf	_timer_durada^0,w,c
  9046  001118  ECEC  F00C         	call	_TiResetTics
  9047                           
  9048                           ;AlTAltaveu.c: 33:     state++;
  9049  00111C  2A26               	incf	AlTAltaveu@state^0,f,c
  9050  00111E  0012               	return	
  9051  001120                     l305:
  9052                           
  9053                           ;AlTAltaveu.c: 38:    if (reproduir == 0) {
  9054  001120  AE78               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  9055                           
  9056                           ;AlTAltaveu.c: 39:     state--;
  9057  001122  0626               	decf	AlTAltaveu@state^0,f,c
  9058                           
  9059                           ;AlTAltaveu.c: 41:    if (TiGetTics(timer_nota) > nota) {
  9060  001124  5029               	movf	_timer_nota^0,w,c
  9061  001126  ECBA  F00C         	call	_TiGetTics
  9062  00112A  D83B               	call	PL18	;call to abstracted procedure
  9063  00112C  E205               	bc	l4313
  9064                           
  9065                           ;AlTAltaveu.c: 42:     LATBbits.LB0 = 1;
  9066  00112E  808A               	bsf	138,0,c	;volatile
  9067                           
  9068                           ;AlTAltaveu.c: 43:     TiResetTics(timer_nota);
  9069  001130  5029               	movf	_timer_nota^0,w,c
  9070  001132  ECEC  F00C         	call	_TiResetTics
  9071                           
  9072                           ;AlTAltaveu.c: 44:     state++;
  9073  001136  2A26               	incf	AlTAltaveu@state^0,f,c
  9074  001138                     l4313:
  9075                           
  9076                           ;AlTAltaveu.c: 46:    if (TiGetTics(timer_durada) > 1500) {
  9077  001138  5027               	movf	_timer_durada^0,w,c
  9078  00113A  ECBA  F00C         	call	_TiGetTics
  9079  00113E  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  9080  001140  0012               	return	
  9081  001142  0EDD               	movlw	221
  9082  001144  5C60               	subwf	?_TiGetTics^0,w,c
  9083  001146  0E05               	movlw	5
  9084  001148  5861               	subwfb	(?_TiGetTics+1)^0,w,c
  9085  00114A  A0D8               	btfss	status,0,c
  9086  00114C  0012               	return	
  9087                           
  9088                           ;AlTAltaveu.c: 47:     state = 3;
  9089  00114E  0E03               	movlw	3
  9090  001150  6E26               	movwf	AlTAltaveu@state^0,c
  9091  001152  0C03               	retlw	3
  9092  001154                     l4317:
  9093                           
  9094                           ;AlTAltaveu.c: 51:    if (TiGetTics(timer_nota) > nota) {
  9095  001154  5029               	movf	_timer_nota^0,w,c
  9096  001156  ECBA  F00C         	call	_TiGetTics
  9097  00115A  D823               	call	PL18	;call to abstracted procedure
  9098  00115C  B0D8               	btfsc	status,0,c
  9099  00115E  0012               	return	
  9100                           
  9101                           ;AlTAltaveu.c: 52:     LATBbits.LB0 = 0;
  9102  001160  908A               	bcf	138,0,c	;volatile
  9103                           
  9104                           ;AlTAltaveu.c: 53:     TiResetTics(timer_nota);
  9105  001162  5029               	movf	_timer_nota^0,w,c
  9106  001164  ECEC  F00C         	call	_TiResetTics
  9107                           
  9108                           ;AlTAltaveu.c: 54:     state--;
  9109  001168  0626               	decf	AlTAltaveu@state^0,f,c
  9110  00116A  0012               	return	
  9111  00116C                     l4325:
  9112                           
  9113                           ;AlTAltaveu.c: 58:    TiResetTics(timer_durada);
  9114  00116C  5027               	movf	_timer_durada^0,w,c
  9115  00116E  ECEC  F00C         	call	_TiResetTics
  9116                           
  9117                           ;AlTAltaveu.c: 59:    nota++;
  9118  001172  2A28               	incf	_nota^0,f,c
  9119                           
  9120                           ;AlTAltaveu.c: 60:    if(nota>10){
  9121  001174  0E0A               	movlw	10
  9122  001176  6428               	cpfsgt	_nota^0,c
  9123  001178  D002               	goto	l312
  9124                           
  9125                           ;AlTAltaveu.c: 61:                 nota=1;
  9126  00117A  0E01               	movlw	1
  9127  00117C  6E28               	movwf	_nota^0,c
  9128  00117E                     l312:
  9129                           
  9130                           ;AlTAltaveu.c: 63:             state = 1;
  9131  00117E  0E01               	movlw	1
  9132  001180  6E26               	movwf	AlTAltaveu@state^0,c
  9133                           
  9134                           ;AlTAltaveu.c: 64:   break;
  9135  001182  0C01               	retlw	1
  9136  001184                     l4335:
  9137  001184  5026               	movf	AlTAltaveu@state^0,w,c
  9138  001186  6E67               	movwf	??_AlTAltaveu^0,c
  9139  001188  6A68               	clrf	(??_AlTAltaveu+1)^0,c
  9140                           
  9141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9142                           ; Switch size 1, requested type "space"
  9143                           ; Number of cases is 1, Range of values is 0 to 0
  9144                           ; switch strategies available:
  9145                           ; Name         Instructions Cycles
  9146                           ; simple_byte            4     3 (average)
  9147                           ;	Chosen strategy is simple_byte
  9148  00118A  5068               	movf	(??_AlTAltaveu+1)^0,w,c
  9149  00118C  A4D8               	btfss	status,2,c
  9150  00118E  0012               	return	
  9151                           
  9152                           ; Switch size 1, requested type "space"
  9153                           ; Number of cases is 4, Range of values is 0 to 3
  9154                           ; switch strategies available:
  9155                           ; Name         Instructions Cycles
  9156                           ; simple_byte           13     7 (average)
  9157                           ;	Chosen strategy is simple_byte
  9158  001190  5067               	movf	??_AlTAltaveu^0,w,c
  9159  001192  E0BA               	bz	l302
  9160  001194  0A01               	xorlw	1	; case 1
  9161  001196  E0C4               	bz	l305
  9162  001198  0A03               	xorlw	3	; case 2
  9163  00119A  E0DC               	bz	l4317
  9164  00119C  0A01               	xorlw	1	; case 3
  9165  00119E  E0E6               	bz	l4325
  9166  0011A0  0012               	return		;funcret
  9167  0011A2                     __end_of_AlTAltaveu:
  9168                           	callstack 0
  9169  0011A2                     PL18:
  9170                           	callstack 27
  9171  0011A2  5028               	movf	_nota^0,w,c
  9172  0011A4  6E67               	movwf	??_AlTAltaveu^0,c
  9173  0011A6  6A68               	clrf	(??_AlTAltaveu+1)^0,c
  9174  0011A8  5060               	movf	?_TiGetTics^0,w,c
  9175  0011AA  5C67               	subwf	??_AlTAltaveu^0,w,c
  9176  0011AC  5068               	movf	(??_AlTAltaveu+1)^0,w,c
  9177  0011AE  0A80               	xorlw	128
  9178  0011B0  6E69               	movwf	(??_AlTAltaveu+2)^0,c
  9179  0011B2  5061               	movf	(?_TiGetTics+1)^0,w,c
  9180  0011B4  0A80               	xorlw	128
  9181  0011B6  5869               	subwfb	(??_AlTAltaveu+2)^0,w,c
  9182  0011B8  0012               	return	
  9183  0011BA                     __end_ofPL18:
  9184                           	callstack 0
  9185                           
  9186 ;; *************** function _TiResetTics *****************
  9187 ;; Defined at:
  9188 ;;		line 55 in file "TiTTimer.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  Handle          1    wreg     unsigned char 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;  Handle          1    5[COMRAM] unsigned char 
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      void 
  9195 ;; Registers used:
  9196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1
  9202 ;;      Params:         0       0       0
  9203 ;;      Locals:         1       0       0
  9204 ;;      Temps:          0       0       0
  9205 ;;      Totals:         1       0       0
  9206 ;;Total ram usage:        1 bytes
  9207 ;; Hardware stack levels used: 1
  9208 ;; Hardware stack levels required when called: 2
  9209 ;; This function calls:
  9210 ;;		Nothing
  9211 ;; This function is called by:
  9212 ;;		_Espera
  9213 ;;		_WaitForBusy
  9214 ;;		_AlTAltaveu
  9215 ;;		_MTMenu
  9216 ;;		_TeTeclat
  9217 ;;		_GLCDMotor
  9218 ;;		_HInit
  9219 ;;		_HHoraMotor
  9220 ;;		_SMotor
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text76
  9225  0019D8                     __ptext76:
  9226                           	callstack 0
  9227  0019D8                     _TiResetTics:
  9228                           	callstack 27
  9229                           
  9230                           ;incstack = 0
  9231                           ;TiResetTics@Handle stored from wreg
  9232  0019D8  6E60               	movwf	TiResetTics@Handle^0,c
  9233                           
  9234                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  9235  0019DA  5060               	movf	TiResetTics@Handle^0,w,c
  9236  0019DC  D805               	call	PL24	;call to abstracted procedure
  9237  0019DE  C003  FFDE         	movff	_h_Tics,postinc2
  9238  0019E2  C004  FFDD         	movff	_h_Tics+1,postdec2
  9239  0019E6  0012               	return		;funcret
  9240  0019E8                     __end_of_TiResetTics:
  9241                           	callstack 0
  9242  0019E8                     PL24:
  9243                           	callstack 22
  9244  0019E8  0D03               	mullw	3
  9245  0019EA  50F3               	movf	243,w,c
  9246  0019EC  0FA7               	addlw	low _s_Timers
  9247  0019EE  6ED9               	movwf	fsr2l,c
  9248  0019F0  6ADA               	clrf	fsr2h,c
  9249  0019F2  0012               	return	
  9250  0019F4                     __end_ofPL24:
  9251                           	callstack 0
  9252                           
  9253 ;; *************** function _TiGetTics *****************
  9254 ;; Defined at:
  9255 ;;		line 61 in file "TiTTimer.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;  Handle          1    wreg     unsigned char 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  Handle          1    9[COMRAM] unsigned char 
  9260 ;;  actual          2   10[COMRAM] volatile unsigned int 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  2    5[COMRAM] int 
  9263 ;; Registers used:
  9264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMRAM   BANK0   BANK1
  9270 ;;      Params:         2       0       0
  9271 ;;      Locals:         3       0       0
  9272 ;;      Temps:          2       0       0
  9273 ;;      Totals:         7       0       0
  9274 ;;Total ram usage:        7 bytes
  9275 ;; Hardware stack levels used: 1
  9276 ;; Hardware stack levels required when called: 2
  9277 ;; This function calls:
  9278 ;;		Nothing
  9279 ;; This function is called by:
  9280 ;;		_Espera
  9281 ;;		_WaitForBusy
  9282 ;;		_AlTAltaveu
  9283 ;;		_MTMenu
  9284 ;;		_TeTeclat
  9285 ;;		_GLCDMotor
  9286 ;;		_HHoraMotor
  9287 ;;		_SMotor
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text77
  9292  001974                     __ptext77:
  9293                           	callstack 0
  9294  001974                     _TiGetTics:
  9295                           	callstack 27
  9296                           
  9297                           ;incstack = 0
  9298                           ;TiGetTics@Handle stored from wreg
  9299  001974  6E64               	movwf	TiGetTics@Handle^0,c
  9300                           
  9301                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  9302  001976  C003  F065         	movff	_h_Tics,TiGetTics@actual	;volatile
  9303  00197A  C004  F066         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  9304                           
  9305                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  9306  00197E  5064               	movf	TiGetTics@Handle^0,w,c
  9307  001980  ECF4  F00C         	call	PL24	;call to abstracted procedure
  9308  001984  CFDE F062          	movff	postinc2,??_TiGetTics
  9309  001988  CFDD F063          	movff	postdec2,??_TiGetTics+1
  9310  00198C  5062               	movf	??_TiGetTics^0,w,c
  9311  00198E  5C65               	subwf	TiGetTics@actual^0,w,c	;volatile
  9312  001990  6E60               	movwf	?_TiGetTics^0,c
  9313  001992  5063               	movf	(??_TiGetTics+1)^0,w,c
  9314  001994  5866               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  9315  001996  6E61               	movwf	(?_TiGetTics+1)^0,c
  9316  001998  0012               	return		;funcret
  9317  00199A                     __end_of_TiGetTics:
  9318                           	callstack 0
  9319                           
  9320 ;; *************** function _AlInit *****************
  9321 ;; Defined at:
  9322 ;;		line 11 in file "AlTAltaveu.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;		None
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;		None
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  1    wreg      void 
  9329 ;; Registers used:
  9330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMRAM   BANK0   BANK1
  9336 ;;      Params:         0       0       0
  9337 ;;      Locals:         0       0       0
  9338 ;;      Temps:          0       0       0
  9339 ;;      Totals:         0       0       0
  9340 ;;Total ram usage:        0 bytes
  9341 ;; Hardware stack levels used: 1
  9342 ;; Hardware stack levels required when called: 3
  9343 ;; This function calls:
  9344 ;;		_TiGetTimer
  9345 ;; This function is called by:
  9346 ;;		_main
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text78
  9351  001A72                     __ptext78:
  9352                           	callstack 0
  9353  001A72                     _AlInit:
  9354                           	callstack 27
  9355                           
  9356                           ;AlTAltaveu.c: 12:     timer_nota = TiGetTimer();
  9357                           
  9358                           ;incstack = 0
  9359  001A72  EC41  F00C         	call	_TiGetTimer	;wreg free
  9360  001A76  6E29               	movwf	_timer_nota^0,c
  9361                           
  9362                           ;AlTAltaveu.c: 13:     timer_durada = TiGetTimer();
  9363  001A78  EC41  F00C         	call	_TiGetTimer	;wreg free
  9364  001A7C  6E27               	movwf	_timer_durada^0,c
  9365                           
  9366                           ;AlTAltaveu.c: 14:     reproduir=0;
  9367  001A7E  9E78               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  9368  001A80  0012               	return		;funcret
  9369  001A82                     __end_of_AlInit:
  9370                           	callstack 0
  9371                           
  9372 ;; *************** function _TiGetTimer *****************
  9373 ;; Defined at:
  9374 ;;		line 70 in file "TiTTimer.c"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;		None
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;		None
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      unsigned char 
  9381 ;; Registers used:
  9382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMRAM   BANK0   BANK1
  9388 ;;      Params:         0       0       0
  9389 ;;      Locals:         0       0       0
  9390 ;;      Temps:          1       0       0
  9391 ;;      Totals:         1       0       0
  9392 ;;Total ram usage:        1 bytes
  9393 ;; Hardware stack levels used: 1
  9394 ;; Hardware stack levels required when called: 2
  9395 ;; This function calls:
  9396 ;;		Nothing
  9397 ;; This function is called by:
  9398 ;;		_LcInit
  9399 ;;		_AlInit
  9400 ;;		_Minit
  9401 ;;		_TeInit
  9402 ;;		_GLCDInit
  9403 ;;		_HInit
  9404 ;;		_Sinit
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text79
  9409  001882                     __ptext79:
  9410                           	callstack 0
  9411  001882                     _TiGetTimer:
  9412                           	callstack 27
  9413                           
  9414                           ;TiTTimer.c: 74:     counter=0;
  9415                           
  9416                           ;incstack = 0
  9417  001882  6A2A               	clrf	_counter^0,c
  9418                           
  9419                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9420  001884  D005               	goto	l4045
  9421  001886                     l4037:
  9422                           
  9423                           ;TiTTimer.c: 76:         counter++;
  9424  001886  2A2A               	incf	_counter^0,f,c
  9425                           
  9426                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  9427  001888  0E08               	movlw	8
  9428  00188A  182A               	xorwf	_counter^0,w,c
  9429  00188C  E101               	bnz	l4045
  9430  00188E  0CFF               	retlw	255
  9431  001890                     l4045:
  9432                           
  9433                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9434  001890  D807               	call	PL16	;call to abstracted procedure
  9435  001892  04DE               	decf	postinc2,w,c
  9436  001894  E0F8               	bz	l4037
  9437                           
  9438                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  9439  001896  D804               	call	PL16	;call to abstracted procedure
  9440  001898  0E01               	movlw	1
  9441  00189A  6EDF               	movwf	indf2,c
  9442                           
  9443                           ;TiTTimer.c: 80:     return (counter);
  9444  00189C  502A               	movf	_counter^0,w,c
  9445  00189E  0012               	return		;funcret
  9446  0018A0                     __end_of_TiGetTimer:
  9447                           	callstack 0
  9448  0018A0                     PL16:
  9449                           	callstack 28
  9450  0018A0  502A               	movf	_counter^0,w,c
  9451  0018A2  0D03               	mullw	3
  9452  0018A4  50F3               	movf	243,w,c
  9453  0018A6  0FA9               	addlw	low (_s_Timers+2)
  9454  0018A8  6ED9               	movwf	fsr2l,c
  9455  0018AA  6ADA               	clrf	fsr2h,c
  9456  0018AC  0012               	return	
  9457  0018AE                     __end_ofPL16:
  9458                           	callstack 0
  9459                           
  9460 ;; *************** function _AdMotor *****************
  9461 ;; Defined at:
  9462 ;;		line 12 in file "AdAdcon.c"
  9463 ;; Parameters:    Size  Location     Type
  9464 ;;		None
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;		None
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  1    wreg      void 
  9469 ;; Registers used:
  9470 ;;		wreg, status,2, status,0, cstack
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMRAM   BANK0   BANK1
  9476 ;;      Params:         0       0       0
  9477 ;;      Locals:         0       0       0
  9478 ;;      Temps:          2       0       0
  9479 ;;      Totals:         2       0       0
  9480 ;;Total ram usage:        2 bytes
  9481 ;; Hardware stack levels used: 1
  9482 ;; Hardware stack levels required when called: 3
  9483 ;; This function calls:
  9484 ;;		_JnovaTecla
  9485 ;; This function is called by:
  9486 ;;		_main
  9487 ;; This function uses a non-reentrant model
  9488 ;;
  9489                           
  9490                           	psect	text80
  9491  0011BA                     __ptext80:
  9492                           	callstack 0
  9493  0011BA                     _AdMotor:
  9494                           	callstack 27
  9495                           
  9496                           ;AdAdcon.c: 13:  static char state = 0;;AdAdcon.c: 14:     switch(state) {
  9497                           
  9498                           ;incstack = 0
  9499  0011BA  D04E               	goto	l5473
  9500  0011BC                     l922:
  9501                           
  9502                           ;AdAdcon.c: 16:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9503  0011BC  B2C2               	btfsc	194,1,c	;volatile
  9504  0011BE  D00A               	goto	l923
  9505  0011C0  0EC8               	movlw	200
  9506  0011C2  60C4               	cpfslt	196,c	;volatile
  9507  0011C4  D007               	goto	l923
  9508  0011C6  0E32               	movlw	50
  9509  0011C8  64C4               	cpfsgt	196,c	;volatile
  9510  0011CA  D004               	goto	l923
  9511  0011CC                     u5460:
  9512                           
  9513                           ;AdAdcon.c: 17:     ADCON0 = 0x07;
  9514  0011CC  0E07               	movlw	7
  9515  0011CE  6EC2               	movwf	194,c	;volatile
  9516                           
  9517                           ;AdAdcon.c: 18:     state++;
  9518  0011D0  2A0E               	incf	AdMotor@state^0,f,c
  9519                           
  9520                           ;AdAdcon.c: 19:    }
  9521  0011D2  0C07               	retlw	7
  9522  0011D4                     l923:
  9523  0011D4  B2C2               	btfsc	194,1,c	;volatile
  9524  0011D6  D00B               	goto	l925
  9525  0011D8  0EC7               	movlw	199
  9526  0011DA  64C4               	cpfsgt	196,c	;volatile
  9527  0011DC  D008               	goto	l925
  9528                           
  9529                           ;AdAdcon.c: 21:     if(ultimaTeclaAD != 2)JnovaTecla(2);
  9530  0011DE  0E02               	movlw	2
  9531  0011E0  180F               	xorwf	_ultimaTeclaAD^0,w,c
  9532  0011E2  E003               	bz	l5421
  9533  0011E4  0E02               	movlw	2
  9534  0011E6  ECBB  F00D         	call	_JnovaTecla
  9535  0011EA                     l5421:
  9536                           
  9537                           ;AdAdcon.c: 22:     ultimaTeclaAD = 2;
  9538  0011EA  0E02               	movlw	2
  9539  0011EC  D00C               	goto	L6
  9540  0011EE                     l925:
  9541  0011EE  B2C2               	btfsc	194,1,c	;volatile
  9542  0011F0  0012               	return	
  9543  0011F2  0E33               	movlw	51
  9544  0011F4  60C4               	cpfslt	196,c	;volatile
  9545  0011F6  0C33               	retlw	51
  9546                           
  9547                           ;AdAdcon.c: 27:     if(ultimaTeclaAD != 8)JnovaTecla(8);
  9548  0011F8  0E08               	movlw	8
  9549  0011FA  180F               	xorwf	_ultimaTeclaAD^0,w,c
  9550  0011FC  E003               	bz	l5433
  9551  0011FE  0E08               	movlw	8
  9552  001200  ECBB  F00D         	call	_JnovaTecla
  9553  001204                     l5433:
  9554                           
  9555                           ;AdAdcon.c: 28:     ultimaTeclaAD = 8;
  9556  001204  0E08               	movlw	8
  9557  001206                     L6:
  9558  001206  6E0F               	movwf	_ultimaTeclaAD^0,c
  9559  001208  D7E1               	goto	u5460
  9560  00120A                     l931:
  9561                           
  9562                           ;AdAdcon.c: 34:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9563  00120A  B2C2               	btfsc	194,1,c	;volatile
  9564  00120C  D00A               	goto	l932
  9565  00120E  0EC8               	movlw	200
  9566  001210  60C4               	cpfslt	196,c	;volatile
  9567  001212  D007               	goto	l932
  9568  001214  0E32               	movlw	50
  9569  001216  64C4               	cpfsgt	196,c	;volatile
  9570  001218  D004               	goto	l932
  9571  00121A                     u5550:
  9572                           
  9573                           ;AdAdcon.c: 35:     ADCON0 = 0x03;
  9574  00121A  0E03               	movlw	3
  9575  00121C  6EC2               	movwf	194,c	;volatile
  9576                           
  9577                           ;AdAdcon.c: 36:     state--;
  9578  00121E  060E               	decf	AdMotor@state^0,f,c
  9579                           
  9580                           ;AdAdcon.c: 37:    }
  9581  001220  0C03               	retlw	3
  9582  001222                     l932:
  9583  001222  B2C2               	btfsc	194,1,c	;volatile
  9584  001224  D00B               	goto	l934
  9585  001226  0EC7               	movlw	199
  9586  001228  64C4               	cpfsgt	196,c	;volatile
  9587  00122A  D008               	goto	l934
  9588                           
  9589                           ;AdAdcon.c: 39:     if(ultimaTeclaAD != 6)JnovaTecla(6);
  9590  00122C  0E06               	movlw	6
  9591  00122E  180F               	xorwf	_ultimaTeclaAD^0,w,c
  9592  001230  E003               	bz	l5453
  9593  001232  0E06               	movlw	6
  9594  001234  ECBB  F00D         	call	_JnovaTecla
  9595  001238                     l5453:
  9596                           
  9597                           ;AdAdcon.c: 40:     ultimaTeclaAD = 6;
  9598  001238  0E06               	movlw	6
  9599  00123A  D00C               	goto	L7
  9600  00123C                     l934:
  9601  00123C  B2C2               	btfsc	194,1,c	;volatile
  9602  00123E  0012               	return	
  9603  001240  0E33               	movlw	51
  9604  001242  60C4               	cpfslt	196,c	;volatile
  9605  001244  0C33               	retlw	51
  9606                           
  9607                           ;AdAdcon.c: 45:     if(ultimaTeclaAD != 4)JnovaTecla(4);
  9608  001246  0E04               	movlw	4
  9609  001248  180F               	xorwf	_ultimaTeclaAD^0,w,c
  9610  00124A  E003               	bz	l5465
  9611  00124C  0E04               	movlw	4
  9612  00124E  ECBB  F00D         	call	_JnovaTecla
  9613  001252                     l5465:
  9614                           
  9615                           ;AdAdcon.c: 46:     ultimaTeclaAD = 4;
  9616  001252  0E04               	movlw	4
  9617  001254                     L7:
  9618  001254  6E0F               	movwf	_ultimaTeclaAD^0,c
  9619  001256  D7E1               	goto	u5550
  9620  001258                     l5473:
  9621  001258  500E               	movf	AdMotor@state^0,w,c
  9622  00125A  6E61               	movwf	??_AdMotor^0,c
  9623  00125C  6A62               	clrf	(??_AdMotor+1)^0,c
  9624                           
  9625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9626                           ; Switch size 1, requested type "space"
  9627                           ; Number of cases is 1, Range of values is 0 to 0
  9628                           ; switch strategies available:
  9629                           ; Name         Instructions Cycles
  9630                           ; simple_byte            4     3 (average)
  9631                           ;	Chosen strategy is simple_byte
  9632  00125E  5062               	movf	(??_AdMotor+1)^0,w,c
  9633  001260  A4D8               	btfss	status,2,c
  9634  001262  0012               	return	
  9635                           
  9636                           ; Switch size 1, requested type "space"
  9637                           ; Number of cases is 2, Range of values is 0 to 1
  9638                           ; switch strategies available:
  9639                           ; Name         Instructions Cycles
  9640                           ; simple_byte            7     4 (average)
  9641                           ;	Chosen strategy is simple_byte
  9642  001264  5061               	movf	??_AdMotor^0,w,c
  9643  001266  E0AA               	bz	l922
  9644  001268  0A01               	xorlw	1	; case 1
  9645  00126A  E0CF               	bz	l931
  9646  00126C  0012               	return		;funcret
  9647  00126E                     __end_of_AdMotor:
  9648                           	callstack 0
  9649                           
  9650 ;; *************** function _JnovaTecla *****************
  9651 ;; Defined at:
  9652 ;;		line 54 in file "JJoc.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  direccio        1    wreg     unsigned char 
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;  direccio        1    5[COMRAM] unsigned char 
  9657 ;; Return value:  Size  Location     Type
  9658 ;;                  1    wreg      void 
  9659 ;; Registers used:
  9660 ;;		wreg
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMRAM   BANK0   BANK1
  9666 ;;      Params:         0       0       0
  9667 ;;      Locals:         1       0       0
  9668 ;;      Temps:          0       0       0
  9669 ;;      Totals:         1       0       0
  9670 ;;Total ram usage:        1 bytes
  9671 ;; Hardware stack levels used: 1
  9672 ;; Hardware stack levels required when called: 2
  9673 ;; This function calls:
  9674 ;;		Nothing
  9675 ;; This function is called by:
  9676 ;;		_TeTeclat
  9677 ;;		_AdMotor
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           	psect	text81
  9682  001B76                     __ptext81:
  9683                           	callstack 0
  9684  001B76                     _JnovaTecla:
  9685                           	callstack 27
  9686                           
  9687                           ;incstack = 0
  9688                           ;JnovaTecla@direccio stored from wreg
  9689  001B76  6E60               	movwf	JnovaTecla@direccio^0,c
  9690                           
  9691                           ;JJoc.c: 55:     novaDireccio = direccio;
  9692  001B78  C060  F00B         	movff	JnovaTecla@direccio,_novaDireccio
  9693  001B7C  0012               	return		;funcret
  9694  001B7E                     __end_of_JnovaTecla:
  9695                           	callstack 0
  9696                           
  9697 ;; *************** function _AdInit *****************
  9698 ;; Defined at:
  9699 ;;		line 6 in file "AdAdcon.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;		None
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;		None
  9704 ;; Return value:  Size  Location     Type
  9705 ;;                  1    wreg      void 
  9706 ;; Registers used:
  9707 ;;		wreg, status,2
  9708 ;; Tracked objects:
  9709 ;;		On entry : 0/0
  9710 ;;		On exit  : 0/0
  9711 ;;		Unchanged: 0/0
  9712 ;; Data sizes:     COMRAM   BANK0   BANK1
  9713 ;;      Params:         0       0       0
  9714 ;;      Locals:         0       0       0
  9715 ;;      Temps:          0       0       0
  9716 ;;      Totals:         0       0       0
  9717 ;;Total ram usage:        0 bytes
  9718 ;; Hardware stack levels used: 1
  9719 ;; Hardware stack levels required when called: 2
  9720 ;; This function calls:
  9721 ;;		Nothing
  9722 ;; This function is called by:
  9723 ;;		_main
  9724 ;; This function uses a non-reentrant model
  9725 ;;
  9726                           
  9727                           	psect	text82
  9728  001A50                     __ptext82:
  9729                           	callstack 0
  9730  001A50                     _AdInit:
  9731                           	callstack 28
  9732                           
  9733                           ;AdAdcon.c: 7:     ADCON0 = 0x01;
  9734                           
  9735                           ;incstack = 0
  9736  001A50  0E01               	movlw	1
  9737  001A52  6EC2               	movwf	194,c	;volatile
  9738                           
  9739                           ;AdAdcon.c: 8:     ADCON1 = 0x0D;
  9740  001A54  0E0D               	movlw	13
  9741  001A56  6EC1               	movwf	193,c	;volatile
  9742                           
  9743                           ;AdAdcon.c: 9:     ADCON2 = 0x09;
  9744  001A58  0E09               	movlw	9
  9745  001A5A  6EC0               	movwf	192,c	;volatile
  9746                           
  9747                           ;AdAdcon.c: 10:     ADRESH = 127;
  9748  001A5C  0E7F               	movlw	127
  9749  001A5E  6EC4               	movwf	196,c	;volatile
  9750  001A60  0C7F               	retlw	127	;funcret
  9751  001A62                     __end_of_AdInit:
  9752                           	callstack 0
  9753                           
  9754 ;; *************** function _high_rsi *****************
  9755 ;; Defined at:
  9756 ;;		line 22 in file "main.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;		None
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;		None
  9761 ;; Return value:  Size  Location     Type
  9762 ;;                  1    wreg      void 
  9763 ;; Registers used:
  9764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : 0/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMRAM   BANK0   BANK1
  9770 ;;      Params:         0       0       0
  9771 ;;      Locals:         0       0       0
  9772 ;;      Temps:          4       0       0
  9773 ;;      Totals:         4       0       0
  9774 ;;Total ram usage:        4 bytes
  9775 ;; Hardware stack levels used: 1
  9776 ;; Hardware stack levels required when called: 1
  9777 ;; This function calls:
  9778 ;;		__TiRSITimer
  9779 ;; This function is called by:
  9780 ;;		Interrupt level 2
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           	psect	intcode
  9785  000008                     __pintcode:
  9786                           	callstack 0
  9787  000008                     _high_rsi:
  9788                           	callstack 22
  9789                           
  9790                           ;incstack = 0
  9791  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9792  00000A  CFD9 F05C          	movff	fsr2l,??_high_rsi
  9793  00000E  CFDA F05D          	movff	fsr2h,??_high_rsi+1
  9794  000012  CFF3 F05E          	movff	prodl,??_high_rsi+2
  9795  000016  CFF4 F05F          	movff	prodh,??_high_rsi+3
  9796  00001A  ECCB  F00B         	call	__TiRSITimer	;wreg free
  9797  00001E  C05F  FFF4         	movff	??_high_rsi+3,prodh
  9798  000022  C05E  FFF3         	movff	??_high_rsi+2,prodl
  9799  000026  C05D  FFDA         	movff	??_high_rsi+1,fsr2h
  9800  00002A  C05C  FFD9         	movff	??_high_rsi,fsr2l
  9801  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9802  000030  0011               	retfie		f
  9803  000032                     __end_of_high_rsi:
  9804                           	callstack 0
  9805                           
  9806 ;; *************** function __TiRSITimer *****************
  9807 ;; Defined at:
  9808 ;;		line 37 in file "TiTTimer.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;		None
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;		None
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  1    wreg      void 
  9815 ;; Registers used:
  9816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMRAM   BANK0   BANK1
  9822 ;;      Params:         0       0       0
  9823 ;;      Locals:         0       0       0
  9824 ;;      Temps:          1       0       0
  9825 ;;      Totals:         1       0       0
  9826 ;;Total ram usage:        1 bytes
  9827 ;; Hardware stack levels used: 1
  9828 ;; This function calls:
  9829 ;;		Nothing
  9830 ;; This function is called by:
  9831 ;;		_high_rsi
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text84
  9836  001796                     __ptext84:
  9837                           	callstack 0
  9838  001796                     __TiRSITimer:
  9839                           	callstack 22
  9840                           
  9841                           ;TiTTimer.c: 39:     TMR0H = 0;
  9842                           
  9843                           ;incstack = 0
  9844  001796  6AD7               	clrf	215,c	;volatile
  9845                           
  9846                           ;TiTTimer.c: 40:     TMR0L = 236;
  9847  001798  0EEC               	movlw	236
  9848  00179A  6ED6               	movwf	214,c	;volatile
  9849                           
  9850                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  9851  00179C  94F2               	bcf	242,2,c	;volatile
  9852                           
  9853                           ;TiTTimer.c: 42:     h_Tics++;
  9854  00179E  4A03               	infsnz	_h_Tics^0,f,c
  9855  0017A0  2A04               	incf	(_h_Tics+1)^0,f,c
  9856                           
  9857                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  9858  0017A2  0E48               	movlw	72
  9859  0017A4  5C03               	subwf	_h_Tics^0,w,c
  9860  0017A6  0EEE               	movlw	238
  9861  0017A8  5804               	subwfb	(_h_Tics+1)^0,w,c
  9862  0017AA  A0D8               	btfss	status,0,c
  9863  0017AC  0012               	return	
  9864                           
  9865                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  9866  0017AE  6A2A               	clrf	_counter^0,c
  9867  0017B0                     i2l4195:
  9868  0017B0  0E07               	movlw	7
  9869  0017B2  642A               	cpfsgt	_counter^0,c
  9870  0017B4  D001               	goto	i2l4199
  9871  0017B6  D00D               	goto	i2l253
  9872  0017B8                     i2l4199:
  9873                           
  9874                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  9875  0017B8  EC50  F00C         	call	PL16	;call to abstracted procedure
  9876  0017BC  04DE               	decf	postinc2,w,c
  9877  0017BE  E107               	bnz	i2l4203
  9878                           
  9879                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  9880  0017C0  502A               	movf	_counter^0,w,c
  9881  0017C2  ECF4  F00C         	call	PL24	;call to abstracted procedure
  9882  0017C6  5003               	movf	_h_Tics^0,w,c
  9883  0017C8  5EDE               	subwf	postinc2,f,c
  9884  0017CA  5004               	movf	(_h_Tics+1)^0,w,c
  9885  0017CC  5ADD               	subwfb	postdec2,f,c
  9886  0017CE                     i2l4203:
  9887                           
  9888                           ;TiTTimer.c: 50:         }
  9889  0017CE  2A2A               	incf	_counter^0,f,c
  9890  0017D0  D7EF               	goto	i2l4195
  9891  0017D2                     i2l253:
  9892                           
  9893                           ;TiTTimer.c: 51:         h_Tics=0;
  9894  0017D2  6A03               	clrf	_h_Tics^0,c
  9895  0017D4  6A04               	clrf	(_h_Tics+1)^0,c
  9896  0017D6  0012               	return		;funcret
  9897  0017D8                     __end_of__TiRSITimer:
  9898                           	callstack 0
  9899                           
  9900                           	psect	rparam
  9901  0000                     
  9902                           	psect	temp
  9903  00007A                     btemp:
  9904                           	callstack 0
  9905  00007A                     	ds	1
  9906  0000                     int$flags	set	btemp
  9907  0000                     wtemp8	set	btemp+1
  9908  0000                     ttemp5	set	btemp+1
  9909  0000                     ttemp6	set	btemp+4
  9910  0000                     ttemp7	set	btemp+8
  9911                           
  9912                           	psect	idloc
  9913                           
  9914                           ;Config register IDLOC0 @ 0x200000
  9915                           ;	unspecified, using default values
  9916  200000                     	org	2097152
  9917  200000  FF                 	db	255
  9918                           
  9919                           ;Config register IDLOC1 @ 0x200001
  9920                           ;	unspecified, using default values
  9921  200001                     	org	2097153
  9922  200001  FF                 	db	255
  9923                           
  9924                           ;Config register IDLOC2 @ 0x200002
  9925                           ;	unspecified, using default values
  9926  200002                     	org	2097154
  9927  200002  FF                 	db	255
  9928                           
  9929                           ;Config register IDLOC3 @ 0x200003
  9930                           ;	unspecified, using default values
  9931  200003                     	org	2097155
  9932  200003  FF                 	db	255
  9933                           
  9934                           ;Config register IDLOC4 @ 0x200004
  9935                           ;	unspecified, using default values
  9936  200004                     	org	2097156
  9937  200004  FF                 	db	255
  9938                           
  9939                           ;Config register IDLOC5 @ 0x200005
  9940                           ;	unspecified, using default values
  9941  200005                     	org	2097157
  9942  200005  FF                 	db	255
  9943                           
  9944                           ;Config register IDLOC6 @ 0x200006
  9945                           ;	unspecified, using default values
  9946  200006                     	org	2097158
  9947  200006  FF                 	db	255
  9948                           
  9949                           ;Config register IDLOC7 @ 0x200007
  9950                           ;	unspecified, using default values
  9951  200007                     	org	2097159
  9952  200007  FF                 	db	255
  9953                           
  9954                           	psect	config
  9955                           
  9956                           ; Padding undefined space
  9957  300000                     	org	3145728
  9958  300000  FF                 	db	255
  9959                           
  9960                           ;Config register CONFIG1H @ 0x300001
  9961                           ;	Oscillator
  9962                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  9963                           ;	Fail-Safe Clock Monitor Enable bit
  9964                           ;	FCMEN = 0x0, unprogrammed default
  9965                           ;	Internal/External Oscillator Switchover bit
  9966                           ;	IESO = 0x0, unprogrammed default
  9967  300001                     	org	3145729
  9968  300001  06                 	db	6
  9969                           
  9970                           ;Config register CONFIG2L @ 0x300002
  9971                           ;	unspecified, using default values
  9972                           ;	Power-up Timer Enable bit
  9973                           ;	PWRT = 0x1, unprogrammed default
  9974                           ;	Brown-out Reset Enable bits
  9975                           ;	BOR = 0x3, unprogrammed default
  9976                           ;	Brown-out Reset Voltage bits
  9977                           ;	BORV = 0x3, unprogrammed default
  9978  300002                     	org	3145730
  9979  300002  1F                 	db	31
  9980                           
  9981                           ;Config register CONFIG2H @ 0x300003
  9982                           ;	Watchdog Timer Enable bit
  9983                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9984                           ;	Watchdog Timer Postscale Select bits
  9985                           ;	WDTPS = 0xF, unprogrammed default
  9986  300003                     	org	3145731
  9987  300003  1E                 	db	30
  9988                           
  9989                           ; Padding undefined space
  9990  300004                     	org	3145732
  9991  300004  FF                 	db	255
  9992                           
  9993                           ;Config register CONFIG3H @ 0x300005
  9994                           ;	CCP2 MUX bit
  9995                           ;	CCP2MX = 0x1, unprogrammed default
  9996                           ;	PORTB A/D Enable bit
  9997                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  9998                           ;	Low-Power Timer1 Oscillator Enable bit
  9999                           ;	LPT1OSC = 0x0, unprogrammed default
 10000                           ;	MCLR Pin Enable bit
 10001                           ;	MCLRE = 0x1, unprogrammed default
 10002  300005                     	org	3145733
 10003  300005  81                 	db	129
 10004                           
 10005                           ;Config register CONFIG4L @ 0x300006
 10006                           ;	Stack Full/Underflow Reset Enable bit
 10007                           ;	STVREN = 0x1, unprogrammed default
 10008                           ;	Single-Supply ICSP Enable bit
 10009                           ;	LVP = OFF, Single-Supply ICSP disabled
 10010                           ;	Boot Block Size Select bits
 10011                           ;	BBSIZ = 0x0, unprogrammed default
 10012                           ;	Extended Instruction Set Enable bit
 10013                           ;	XINST = 0x0, unprogrammed default
 10014                           ;	Background Debugger Enable bit
 10015                           ;	DEBUG = 0x1, unprogrammed default
 10016  300006                     	org	3145734
 10017  300006  81                 	db	129
 10018                           
 10019                           ; Padding undefined space
 10020  300007                     	org	3145735
 10021  300007  FF                 	db	255
 10022                           
 10023                           ;Config register CONFIG5L @ 0x300008
 10024                           ;	unspecified, using default values
 10025                           ;	Code Protection bit
 10026                           ;	CP0 = 0x1, unprogrammed default
 10027                           ;	Code Protection bit
 10028                           ;	CP1 = 0x1, unprogrammed default
 10029  300008                     	org	3145736
 10030  300008  03                 	db	3
 10031                           
 10032                           ;Config register CONFIG5H @ 0x300009
 10033                           ;	unspecified, using default values
 10034                           ;	Boot Block Code Protection bitProtect Boot
 10035                           ;	CPB = 0x1, unprogrammed default
 10036                           ;	Data EEPROM Code Protection bit
 10037                           ;	CPD = 0x1, unprogrammed default
 10038  300009                     	org	3145737
 10039  300009  C0                 	db	192
 10040                           
 10041                           ;Config register CONFIG6L @ 0x30000A
 10042                           ;	unspecified, using default values
 10043                           ;	Write Protection bit
 10044                           ;	WRT0 = 0x1, unprogrammed default
 10045                           ;	Write Protection bit
 10046                           ;	WRT1 = 0x1, unprogrammed default
 10047  30000A                     	org	3145738
 10048  30000A  03                 	db	3
 10049                           
 10050                           ;Config register CONFIG6H @ 0x30000B
 10051                           ;	unspecified, using default values
 10052                           ;	Configuration Register Write Protection bit
 10053                           ;	WRTC = 0x1, unprogrammed default
 10054                           ;	Boot Block Write Protection bit
 10055                           ;	WRTB = 0x1, unprogrammed default
 10056                           ;	Data EEPROM Write Protection bit
 10057                           ;	WRTD = 0x1, unprogrammed default
 10058  30000B                     	org	3145739
 10059  30000B  E0                 	db	224
 10060                           
 10061                           ;Config register CONFIG7L @ 0x30000C
 10062                           ;	unspecified, using default values
 10063                           ;	Table Read Protection bit
 10064                           ;	EBTR0 = 0x1, unprogrammed default
 10065                           ;	Table Read Protection bit
 10066                           ;	EBTR1 = 0x1, unprogrammed default
 10067  30000C                     	org	3145740
 10068  30000C  03                 	db	3
 10069                           
 10070                           ;Config register CONFIG7H @ 0x30000D
 10071                           ;	unspecified, using default values
 10072                           ;	Boot Block Table Read Protection bit
 10073                           ;	EBTRB = 0x1, unprogrammed default
 10074  30000D                     	org	3145741
 10075  30000D  40                 	db	64
 10076                           tosu	equ	0xFFF
 10077                           tosh	equ	0xFFE
 10078                           tosl	equ	0xFFD
 10079                           stkptr	equ	0xFFC
 10080                           pclatu	equ	0xFFB
 10081                           pclath	equ	0xFFA
 10082                           pcl	equ	0xFF9
 10083                           tblptru	equ	0xFF8
 10084                           tblptrh	equ	0xFF7
 10085                           tblptrl	equ	0xFF6
 10086                           tablat	equ	0xFF5
 10087                           prodh	equ	0xFF4
 10088                           prodl	equ	0xFF3
 10089                           indf0	equ	0xFEF
 10090                           postinc0	equ	0xFEE
 10091                           postdec0	equ	0xFED
 10092                           preinc0	equ	0xFEC
 10093                           plusw0	equ	0xFEB
 10094                           fsr0h	equ	0xFEA
 10095                           fsr0l	equ	0xFE9
 10096                           wreg	equ	0xFE8
 10097                           indf1	equ	0xFE7
 10098                           postinc1	equ	0xFE6
 10099                           postdec1	equ	0xFE5
 10100                           preinc1	equ	0xFE4
 10101                           plusw1	equ	0xFE3
 10102                           fsr1h	equ	0xFE2
 10103                           fsr1l	equ	0xFE1
 10104                           bsr	equ	0xFE0
 10105                           indf2	equ	0xFDF
 10106                           postinc2	equ	0xFDE
 10107                           postdec2	equ	0xFDD
 10108                           preinc2	equ	0xFDC
 10109                           plusw2	equ	0xFDB
 10110                           fsr2h	equ	0xFDA
 10111                           fsr2l	equ	0xFD9
 10112                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    167
    Data        77
    BSS         316
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     29     121
    BANK0           128      0      63
    BANK1           244      0     240

Pointer List with Targets:

    score_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 4
		 -> stringScore(COMRAM[4]), 

    userPtr	PTR unsigned char  size(2) Largest target is 240
		 -> usuaris.username(BANK1[11]), usuaris(BANK1[240]), NULL(NULL[0]), 

    HActualitzarHora@nova	PTR unsigned char  size(1) Largest target is 5
		 -> horaTmp(COMRAM[5]), 

    sp__HTempsJocs	PTR unsigned char  size(1) Largest target is 6
		 -> tempsJugant(COMRAM[6]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 240
		 -> usuaris.username(BANK1[11]), usuaris(BANK1[240]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> string(COMRAM[6]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 240
		 -> stringScore(COMRAM[4]), stringText(CODE[16]), usuaris.username(BANK1[11]), usuaris(BANK1[240]), 
		 -> string(COMRAM[6]), tempsJugant(COMRAM[6]), menu(CODE[132]), enterNewName(BANK0[15]), 
		 -> deleteUser(CODE[12]), highScore(BANK0[12]), Score(CODE[7]), STR_6(CODE[12]), 
		 -> STR_5(CODE[12]), STR_4(CODE[15]), STR_3(CODE[10]), STR_2(CODE[13]), 
		 -> STR_1(CODE[15]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 240
		 -> stringScore(COMRAM[4]), stringText(CODE[16]), usuaris.username(BANK1[11]), usuaris(BANK1[240]), 
		 -> string(COMRAM[6]), tempsJugant(COMRAM[6]), menu(CODE[132]), enterNewName(BANK0[15]), 
		 -> deleteUser(CODE[12]), highScore(BANK0[12]), Score(CODE[7]), STR_6(CODE[12]), 
		 -> STR_5(CODE[12]), STR_4(CODE[15]), STR_3(CODE[10]), STR_2(CODE[13]), 
		 -> STR_1(CODE[15]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_MTMenu
    _UMotorUsuaris->___wmul
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _SIOMotor->_LcPutChar
    _Minit->_TiGetTimer
    _MTMenu->_LcPutChar
    _LcScroll->_CantaIR
    _LcCursorOn->_WaitForBusy
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _JMotor->_LcGotoXY
    _HInit->_TiGetTimer
    _HInit->_TiResetTics
    _HHoraMotor->_TiGetTics
    _GLCDMotor->_LcPutChar
    _LcInsertFletxa->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_Espera
    _WaitForBusy->_TiGetTics
    _Espera->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _GLCDInit->_TiGetTimer
    _AlTAltaveu->_TiGetTics
    _AlInit->_TiGetTimer
    _AdMotor->_JnovaTecla

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   56503
                             _AdInit
                            _AdMotor
                             _AlInit
                         _AlTAltaveu
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                         _HHoraMotor
                              _HInit
                             _JMotor
                             _LcInit
                              _LcLCD
                             _MTMenu
                              _Minit
                           _SIOMotor
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                      _UMotorUsuaris
                        _init_eusart
                         _init_ports
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UMotorUsuaris                                        2     2      0    1463
                                             11 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     133
                                             12 COMRAM     3     3      0
                         _JnovaTecla
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SIOMotor                                             2     2      0    9888
                                             22 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                          _CToAReset
                        _CToAobtenir
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                       _UchangeScore
                          _UgetScore
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UchangeScore                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _MTMenu                                               7     7      0   17864
                                             22 COMRAM     7     7      0
                     _GLCDMostraMenu
                   _HActualitzarHora
                     _HClearNouMinut
                           _HGetTime
                            _HJuguem
                          _HNoJuguem
                          _HNouMinut
                            _JJuguem
                            _JUsuari
                            _LcClear
                        _LcCursorOff
                         _LcCursorOn
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                        _LcPutFletxa
                           _LcScroll
                          _NoFerMenu
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
              _UAfegirLletraUsername
                    _UCancelaNouUser
                        _UcreateUser
                           _UdelUser
                      _UeditUsername
                     _UgetNumUsuaris
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UeditUsername                                        5     3      2     220
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _UdelUser                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcreateUser                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UCancelaNouUser                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UAfegirLletraUsername                                3     3      0      44
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _LcCursorOn                                           0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _JUsuari                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HNouMinut                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNoJuguem                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJuguem                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouMinut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HActualitzarHora                                     1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    3476
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JMotor                                               2     2      0    5400
                                             21 COMRAM     2     2      0
                             _AlPlay
                             _AlStop
                     _HClearNouSegon
                          _HNouSegon
                         _HTempsJocs
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIOStartGame
                    _SIOUsuariActual
 ---------------------------------------------------------------------------------
 (2) _SIOUsuariActual                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HTempsJocs                                           2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AlStop                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AlPlay                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HInit                                                0     0      0      22
                         _TiGetTimer
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _HHoraMotor                                           2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0   16508
                                             22 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                        _LcPutFletxa
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutFletxa                                          0     0      0    6620
                           _LcGotoXY
                     _LcInsertFletxa
 ---------------------------------------------------------------------------------
 (3) _LcInsertFletxa                                       0     0      0    3476
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    3476
                                             21 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             8     7      1    3144
                                             13 COMRAM     8     7      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    2226
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                         _HTempsJocs (ARG)
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0     975
                            _CantaIR
                             _Espera
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _AlTAltaveu                                           3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _AlInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AdMotor                                              2     2      0      22
                                              6 COMRAM     2     2      0
                         _JnovaTecla
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AdInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (9) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AdInit
   _AdMotor
     _JnovaTecla
   _AlInit
     _TiGetTimer
   _AlTAltaveu
     _TiGetTics
     _TiResetTics
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _LcGotoXY
       _CantaIR
       _WaitForBusy
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _HTempsJocs (ARG)
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _LcPutFletxa
       _LcGotoXY
       _LcInsertFletxa
         _LcPutChar
     _TiGetTics
     _TiResetTics
   _HHoraMotor
     _TiGetTics
     _TiResetTics
   _HInit
     _TiGetTimer
     _TiResetTics
   _JMotor
     _AlPlay
     _AlStop
     _HClearNouSegon
     _HNouSegon
     _HTempsJocs
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIOStartGame
     _SIOUsuariActual
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _LcCursorOff
       _CantaIR
       _WaitForBusy
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _MTMenu
     _GLCDMostraMenu
     _HActualitzarHora
     _HClearNouMinut
     _HGetTime
     _HJuguem
     _HNoJuguem
     _HNouMinut
     _JJuguem
     _JUsuari
     _LcClear
     _LcCursorOff
     _LcCursorOn
       _CantaIR
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcPutFletxa
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _UAfegirLletraUsername
     _UCancelaNouUser
     _UcreateUser
     _UdelUser
     _UeditUsername
     _UgetNumUsuaris
     _UgetUserName
   _Minit
     _TiGetTimer
   _SIOMotor
     _CToAConverteix
     _CToAHaAcabat
     _CToAReset
     _CToAobtenir
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _UchangeScore
     _UgetScore
     _UgetUserName
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _JnovaTecla
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _UMotorUsuaris
     ___wmul
   _init_eusart
   _init_ports

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F3      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            F4      0       0       5        0.0%
BANK1               F4      0      F0       6       98.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      3F       4       49.2%
BITCOMRAM           7E      0       2       0        1.6%
COMRAM              7E     1D      79       1       96.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A8       7        0.0%
DATA                 0      0     1A8       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 29 18:07:30 2021

             TiResetTics@Handle 0060                   _UMotorUsuaris 0F74                              PL2 0B0C  
                            PL4 0B22                              PL6 0B36                              PL8 084E  
           ___wmul@multiplicand 0062                      _HTempsJocs 1BBA                UgetUserName@quin 0062  
                           PL10 0858                             PL20 087C                             PL12 1774  
                           PL30 1836                             PL22 1012                             PL14 0F62  
                           PL40 149C                             PL32 08A2                             PL24 19E8  
                           PL16 18A0                             PL50 0E30                             PL42 10FC  
                           PL34 1738                             PL26 1024                             PL18 11A2  
                           PL60 1844                             PL52 0CC0                             PL44 0B4C  
                           PL36 0B3E                             PL28 0892                             PL70 08AE  
                           PL62 1586                             PL54 0E3C                             PL46 0CB4  
                           PL38 1034                             PL72 08B4                             PL64 1042  
                           PL56 15EC                             PL48 1746                             PL74 0CCA  
                           PL66 14AA                             PL58 1A04                             PL68 08A8  
                           l302 1108                             l312 117E                             l152 13B4  
                           l305 1120                             l163 1400                             l156 13C6  
                           l720 0978                             l740 0A7E                             l708 090A  
                           l922 11BC                             l738 0A58                             l931 120A  
                           l923 11D4                             l932 1222                             l925 11EE  
                           l934 123C                             l990 0FAE                             l983 0F76  
                           l984 0F84                             u400 148C                             u340 144A  
                           u360 1460                             u418 148E                             u380 1474  
                           u358 144C                             u378 1462                             u398 1476  
           __end_of_LcPutFletxa 1ACA                             _pos 0024                ??_CantaPartBaixa 0060  
     __size_of_HActualitzarHora 0034                             prod 000FF3                             wreg 000FE8  
                   _ultimaTecla 0043                   SIOMotor@state 0008              __size_of_GLCDMotor 0252  
                          l1130 0BAC                            l1122 0B6E                            l1132 0BC8  
                          l1134 0BE0                            l1135 0BF0                            l1127 0B96  
                          l2173 1ABA                            l4101 1A96                            l4007 167C  
                          l3401 16E6                            l4025 16A4                            l4019 1696  
                          l4037 1886                            l4045 1890                            l4029 19A2  
                          l4125 175E                            l5101 0636                            l5013 053E  
                          l4221 18CE                            l3407 16EC                            l5007 0534  
                          l4313 1138                            l4129 1766                            l5041 057A  
                          l4217 18C6                            l5115 0666                            l5051 0592  
                          l5019 0548                            l4325 116C                            l4317 1154  
                          l4077 1AEA                            l5221 1350                            l5213 133E  
                          l5141 06C0                            l5125 0692                            l5053 0598  
                          l5029 055A                            l4335 1184                            l4407 0968  
                          l4343 08BC                            l4247 106A                            l5071 05C6  
                          l5311 0C4C                            l5303 0C34                            l3393 16D2  
                          l3377 16B0                            l4353 08DE                            l5233 1380  
                          l5241 138E                            l5153 06EC                            l5137 06B6  
                          l3395 16DA                            l3387 16C6                            l4515 0A8A  
                          l4507 0A78                            l5147 06D0                            l5091 060A  
                          l4603 006A                            l5315 0C56                            l5421 11EA  
                          l4525 0AA6                            l4445 09B0                            l4373 0916  
                          l5181 072E                            l5173 071A                            l5157 06F6  
                          l5149 06D6                            l4613 007E                            l4605 006E  
                          l5261 0B7C                            l5253 0B6A                            l5501 0EB0  
                          l3399 16E2                            l3911 17EA                            l4519 0A92  
                          l4471 0A08                            l4455 09D2                            l4439 09A0  
                          l4367 0900                            l4359 08EC                            l4535 0AC0  
                          l5167 070A                            l5079 05E2                            l5191 074A  
                          l4551 0F92                            l5433 1204                            l4529 0AB4  
                          l4465 09F8                            l4449 09BC                            l5353 129A  
                          l5337 1270                            l5089 0604                            l4801 0290  
                          l5265 0B86                            l5249 0B58                            l5329 0C7C  
                          l5521 0EDE                            l5513 0ECC                 ?_LcInsertFletxa 005B  
                          l4387 093E                            l5099 0630                            l4731 01C8  
                          l4707 018C                            l4627 00A6                            l5515 0ED0  
                          l5507 0EBE                            l5453 1238                            l3933 1810  
                          l3941 13B8                            l4493 0A4C                            l4485 0A36  
                          l4397 094E                            l5365 12B0                            l4741 01E0  
                          l4717 01A4                            l4645 00D2                            l4637 00BE  
                          l4581 0038                            l5293 0C0A                            l5621 0D78  
                          l5541 0F1C                            l5525 0EEA                            l4573 0FF8  
                          l3951 13E2                            l4399 0952                            l5199 130E  
                          l4831 02FC                            l4751 01F8                            l4727 01BC  
                          l4671 011C                            l4647 00D8                            l5615 0D64  
                          l5535 0F0E                            l4567 0FE8                            l4559 0FB4  
                          l5465 1252                            l5473 1258                            l3937 13A8  
                          l5377 12CA                            l4905 03DA                            l4817 02C8  
                          l4761 0210                            l4673 0122                            l4657 00F2  
                          l5633 0DA2                            l5609 0D52                            l5545 0F24  
                          l5529 0EF4                            l5481 0E7E                            l3947 13D4  
                          l4499 0A60                            l5395 12F6                            l4923 0416  
                          l4915 03F2                            l4843 031A                            l4691 0158  
                          l4659 00F8                            l5635 0DA4                            l5627 0D8E  
                          l5571 0CE6                            l5563 0CD2                            l5491 0E9A  
                          l5555 0F34                            l3957 1408                            l5389 12E4  
                          l4925 041C                            l4909 03E4                            l4853 0346  
                          l4829 02F6                            l4597 005E                            l5661 0DDC  
                          l5653 0DCE                            l5637 0DA8                            l5549 0F2E  
                          l5493 0EA0                            l5485 0E8A                            l3959 1422  
                          l5399 12FA                            l4839 0316                            l4775 024E  
                          l4679 013C                            l5671 0DF2                            l5647 0DC4  
                          l5487 0E8E                            l5727 1628                            l4961 04A2  
                          l4953 047E                            l4937 044C                            l4857 0354  
                          l4785 0262                            l4769 0234                            l4697 0168  
                          l5593 0D2E                            l5585 0D10                            l4971 04CC  
                          l4947 046C                            l4787 0268                            l5667 0DEA  
                          l5691 0E02                            l4981 04EA                            l4869 037A  
                          l4991 0500                            l4879 039C                            l4969 04C6  
                          l4897 03CA                            l4889 03B2                            l4999 0514  
                          STR_1 1D72                            STR_2 1D90                            STR_3 1DB5  
                          STR_4 1D81                            STR_5 1D9D                            STR_6 1DA9  
                          u3120 159C                            u3200 1536                            _LATD 000F8C  
                          u3140 15B2                            u3220 154C                            u3160 15C6  
                          u3240 1560                            u3138 159E                            u3218 1538  
                          u3180 15DE                            u3260 1578                            u3158 15B4  
                          u3238 154E                            u4071 0FDC                            u6000 0DE2  
                          u3178 15C8                            u3258 1562                            u3700 094A  
                          u4500 030E                            u3198 15E0                            u3278 157A  
                          u3630 08E8                            u4520 034E                            u3730 0970  
                          u6060 1714                            u6070 172A                            u6067 1712  
                          u5460 11CC                            u5620 0E50                            u6077 1728  
                          u5550 121A                            u4680 047C                            u4780 050E  
                          u5628 0E52                            u5920 0D72                            u5860 0D24  
                          u5990 0DD4                            _CtoA 16AE                 ??_SsetNovaTecla 0060  
                          _Rows 002F                 __end_of_AdMotor 126E                            _main 15F6  
                          _menu 1CCB                            _nota 0028           __end_of_UeditUsername 1900  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
                    _LcCursorOn 1B02                            btemp 007A                 __end_of_HJuguem 1AA6  
               __end_of_JJuguem 1B5E                            prodh 000FF4                            prodl 000FF3  
               __end_of_LcClear 1A04                            start 0032                 __end_of_CantaIR 19D8  
               __end_of_JUsuari 1BAE                   LcInit@columns 006B                    ___param_bank 000000  
                   _stringScore 0057                __end_of_GLCDInit 1B76                  ?_UMotorUsuaris 005B  
      __size_of_SIONovaDireccio 0008                  _HClearNouMinut 1BB2                  _HClearNouSegon 1BBE  
                         ?_CtoA 005B              __size_of_CToAReset 000A                     Espera@Timer 006A  
                         ?_main 005B                   ??_TiInitTimer 0060                           _T0CON 000FD5  
                         i2l253 17D2                           _RCREG 000FAE                           _RCSTA 000FAB  
                         _TMR0H 000FD7                           _TMR0L 000FD6                           _SPBRG 000FAF  
                         _HInit 1A62                           _LcLCD 1702                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                  ?_init_eusart 005B                ?_SIOUsuariActual 005B                           _TXREG 000FAD  
                         _SMSon 1B7E                           _TXSTA 000FAC                     _MNovaLletra 1B36  
                         _Minit 1B4E                __end_of_HGetTime 1BB2                           _Score 1D6B  
                         _Sinit 1B2E                           _Timer 002B                __end_of_SIOMotor 0CB4  
                         _rebut 0009                           _s_ptr 0005              __size_of_HNoJuguem 0002  
                         _nou_s 03C8                     _LcCursorOff 1B0C                     ?_AlTAltaveu 005B  
                   ?_HHoraMotor 005B                  __pbitbssCOMRAM 03C0                           tablat 000FF5  
                   _LcNewString 1AD6                   ??_TiResetTics 0060                           plusw1 000FE3  
                         plusw2 000FDB                           ttemp5 007B                           ttemp6 007E  
                         ttemp7 0082                           status 000FD8                           wtemp8 007B  
            __size_of_HNouMinut 000C              __size_of_HNouSegon 000C                __end_of_LcGotoXY 1438  
         _UAfegirLletraUsername 1752            CToAConverteix@numero 0060                __end_of_LcLliure 1AEE  
                 ??__TiRSITimer 005B                __end_of_LcScroll 1B8A                      _TiGetTimer 1882  
       EscriuPrimeraOrdre@ordre 0061                    __end_of_CtoA 1702                 __initialization 14B4  
            __size_of_CantaData 0020                    __end_of_main 165A          __end_of_HClearNouMinut 1BB6  
        __end_of_HClearNouSegon 1BC2                    __end_of_menu 1D4F              UMotorUsuaris@state 000C  
             __end_of_GLCDMotor 0B0C                     _LcPutFletxa 1ABE                __end_of_TeTeclat 0F62  
                        ??_CtoA 0060                     ?_HTempsJocs 0060                          ??_main 0078  
            __size_of_LcPutChar 0054                __end_of_UdelUser 1B02                   __activetblptr 000002  
                 _ultimaTeclaAD 000F                GLCDMotor@length1 0016                GLCDMotor@length2 0015  
                 UdelUser@index 0060                          ?_HInit 005B                      _JnovaTecla 1B76  
                        ?_LcLCD 005B                          ?_SMSon 005B                    ?_CToAobtenir 0060  
                        ?_Minit 005B                          ?_Sinit 005B              __size_of_NoFerMenu 0004  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                     ??_AdMotor 0061             __end_of_TiInitTimer 18D8                          _ADRESH 000FC4  
                     ??_HJuguem 0060                       ??_JJuguem 0060              __size_of_SiFerMenu 0004  
                     ??_LcClear 006B                       ??_CantaIR 0062                          i2l4203 17CE  
                        i2l4195 17B0                          i2l4199 17B8                  LcGotoXY@Fisics 006D  
                LcGotoXY@Column 006F                       ??_JUsuari 0060                    _usuariActual 0041  
                 ??_WaitForBusy 0067              __size_of_TiGetTics 0026                          _SPBRGH 000FB0  
                        _AdInit 1A50                  _sumaPulsacions 0011               __end_of_CToAReset 1AF8  
                        _AlInit 1A72                          _MTMenu 0036                     ?_LcCursorOn 005B  
                        _AlPlay 1BC6                          _AlStop 1BC2                          _JMotor 130C  
                        _SMSoff 1BA2              SIONovaDireccio@num 0060                          _LcInit 104C  
                _UgetNumUsuaris 1B92                          _SMotor 0CD0                          _TeInit 1B26  
                        _Espera 199A                 ??_UMotorUsuaris 0066                    _LcGotoXY$499 006B  
                        _RowAct 002D             __end_of_TiResetTics 19E8                __end_of_high_rsi 0032  
                 ??_UcreateUser 0060                          _h_Tics 0003                 ?_HClearNouMinut 005B  
               ?_HClearNouSegon 005B                          ___wmul 194E               __end_of_HNoJuguem 1BCC  
                 ?_CToAHaAcabat 005B             __end_of__TiRSITimer 17D8                          clear_0 14FA  
                        clear_1 1506                          clear_2 1516             __size_of_AlTAltaveu 009C  
                        _segons 0014             __size_of_HHoraMotor 009E                          isa$std 000001  
            __size_of_UgetScore 000C     __size_of_EscriuPrimeraOrdre 0064                          _string 0051  
             __end_of_HNouMinut 1A9A               __end_of_HNouSegon 1ABE                    __pdataCOMRAM 0035  
        __size_of_CantaPartAlta 005C                _HActualitzarHora 184E               ??_SIONovaDireccio 0060  
                  __mediumconst 1CCA                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ??_CToAConverteix 0060                 _UCancelaNouUser 1B9A  
             __end_of_CantaData 1836                    TeTeclat@cols 001F                       ?_GLCDInit 005B  
                    __accesstop 0080         __end_of__initialization 151C          __end_of_UgetNumUsuaris 1B96  
        ?_UAfegirLletraUsername 005B                   ?_UchangeScore 005B             __size_of_HTempsJocs 0004  
             __end_of_LcPutChar 16AE                   ___rparam_used 000001                   __end_of_HInit 1A72  
                 __end_of_LcLCD 1738                     ?_TiGetTimer 005B                   __end_of_SMSon 1B84  
                __pcstackCOMRAM 005B                   __end_of_Minit 1B56             __end_of_WaitForBusy 1816  
                 __end_of_Score 1D72                   __end_of_Sinit 1B36               __end_of_NoFerMenu 1BAA  
                     ?_HGetTime 0060                    __pidataBANK0 1900                  ??_CToAHaAcabat 0060  
             __end_of_SiFerMenu 1BA2                       ?_SIOMotor 005B                      __end_ofPL2 0B22  
                    __end_ofPL4 0B36                      __end_ofPL6 0B3E                      __end_ofPL8 0858  
             __end_of_TiGetTics 199A             __end_of_UcreateUser 1B9A                     _TiInitTimer 18AE  
           __size_of_LcCursorOn 000A                     ?_JnovaTecla 005B                         ??_HInit 0061  
                       ??_LcLCD 0071                         ??_SMSon 0060                ??_LcInsertFletxa 0071  
                     ?_LcGotoXY 0068                       ?_LcLliure 005B                         ??_Minit 0061  
                     ?_LcScroll 005B                         ??_Sinit 0061            __size_of_init_eusart 0016  
                    ??_GLCDInit 0061         __size_of_GLCDMostraMenu 000C                      __pbssBANK0 00A7  
                    __pbssBANK1 0100                  ??_UchangeScore 0060                       ?_TeTeclat 005B  
                   _TiResetTics 19D8                         ?_AdInit 005B                 ?_UgetNumUsuaris 005B  
             __end_of_UgetScore 1A8E                         ?_AlInit 005B                         ?_MTMenu 005B  
                       ?_AlPlay 005B                         ?_AlStop 005B                         ?_JMotor 005B  
                       ?_SMSoff 005B                         ?_LcInit 006B                   _CantaPartAlta 1590  
                       ?_SMotor 005B                       ?_UdelUser 005B                         ?_TeInit 005B  
                       ?_Espera 0067                     __TiRSITimer 1796                      _deleteUser 1D5F  
                    ??_HGetTime 0062                         ?___wmul 0060                   ?_UgetUserName 0060  
                    ??_SIOMotor 0071                         _BAUDCON 000FB8         __end_of_UCancelaNouUser 1B9E  
        __size_of_MsetNovaTecla 0008                      _createUser 03C0                         LcInit@i 006D  
                    ??_LcGotoXY 0069                    ?_MNovaLletra 005B                      ??_LcLliure 0060  
                    ??_LcScroll 0063             __size_of_TiGetTimer 001E            __size_of_CToAobtenir 0004  
                       _AdMotor 11BA                    ?_LcCursorOff 005B                         _HJuguem 1A9A  
                     ?_high_rsi 005B                    ??_AlTAltaveu 0067                    ??_HHoraMotor 0067  
                       _JJuguem 1B56                         _LcClear 19F4                         _CantaIR 19BC  
                  ?_LcNewString 0063              JnovaTecla@direccio 0060                         _JUsuari 1BAA  
                    ??_TeTeclat 0067                     _WaitForBusy 17D8                 __size_of_AdInit 0012  
                ?_CantaPartAlta 005B                         _Columns 002E           __end_of_SsetNovaTecla 1B1E  
               __size_of_AlInit 0010                 __size_of_MTMenu 0818                 __size_of_AlPlay 0004  
               __size_of_AlStop 0004                 __size_of_JMotor 0098                 __size_of_SMSoff 0004  
               __size_of_LcInit 00B0                      ??_UdelUser 0060                         __Hparam 0000  
               __size_of_SMotor 0160             __size_of_JnovaTecla 0008                 __size_of_TeInit 0008  
               __size_of_Espera 0022                         __Lparam 0000                  ??_UgetUserName 0062  
                   _UcreateUser 1B96                 __size_of___wmul 0026                    ?_LcPutFletxa 005B  
                  ??_HTempsJocs 0062                         _delUser 0042                         __pcinit 14B4  
                       _ferMenu 03C5                      _init_ports 1A0E                         __ramtop 0200  
       UeditUsername@novaLletra 0061              __end_of_AlTAltaveu 11A2                         __ptext0 15F6  
                       __ptext1 1A0E                         __ptext2 1A26                         __ptext3 0F74  
                       __ptext4 194E                         __ptext5 18AE                         __ptext6 0E46  
                       __ptext7 1B16                         __ptext8 1B1E                         __ptext9 1B26  
            __end_of_HHoraMotor 130C                       _T0CONbits 000FD5                       _GLCDMotor 08BA  
                     CantaIR@IR 0062                         _counter 002A                         _horaTmp 0030  
        __size_of_UeditUsername 0028                LcNewString@new_s 0063                 WaitForBusy@Busy 0067  
                       _userPtr 0001               GLCDMostraMenu@num 0060                      ??_high_rsi 005C  
          __end_of_CToAHaAcabat 1B92            end_of_initialization 151C                         _usuaris 0100  
                 UgetScore@quin 0060        __size_of_SIOUsuariActual 0004         __size_of_CantaPartBaixa 005C  
                 __Lmediumconst 1CCA                 TiGetTics@Handle 0064                    ??_LcCursorOn 0068  
                 _MsetNovaTecla 1B1E                       CtoA@state 0007              __end_of_HTempsJocs 1BBE  
              ??_HClearNouMinut 0060                ??_HClearNouSegon 0060                      _novaLletra 0049  
      __end_of_HActualitzarHora 1882                 _usuariActualSIO 0040                       _CToAReset 1AEE  
               TiGetTics@actual 0065                      GLCDMotor@j 001B                         postdec1 000FE5  
                       postdec2 000FDD                 _SIONovaDireccio 1B66                         postinc0 000FEE  
                       postinc2 000FDE                      _numUsuaris 000D               UchangeScore@score 0060  
                 TeTeclat@files 001E              SIOStartGame@usuari 0060                   TeTeclat@state 0020  
                     _PORTCbits 000F82            __end_of_UchangeScore 1B46                      _timer_nota 0029  
                     _PORTDbits 000F83                      ?_GLCDMotor 005B                ?_UCancelaNouUser 005B  
                     _HNoJuguem 1BCA                   ?_SIOStartGame 005B              __end_of_LcCursorOn 1B0C  
                     _TRISCbits 000F94                       _TRISDbits 000F95                       _HNouMinut 1A8E  
                     _HNouSegon 1AB2         ??_UAfegirLletraUsername 0060                  _GLCDMostraMenu 1AA6  
               ??_CantaPartAlta 0060                  ?_MsetNovaTecla 005B                       _CantaData 1816  
             __size_of_GLCDInit 0008                       _TXSTAbits 000FAC                   _UeditUsername 18D8  
                __end_of_AdInit 1A62                  __end_of_AlInit 1A82                  __end_of_MTMenu 084E  
                __end_of_AlPlay 1BCA                  __end_of_AlStop 1BC6                  __end_of_JMotor 13A4  
                __end_of_SMSoff 1BA6                    ??_TiGetTimer 0060                  __end_of_LcInit 10FC  
                    ?_CToAReset 005B                  __end_of_SMotor 0E30                       _LcPutChar 165A  
                    _stringText 1D4F                  __end_of_TeInit 1B2E                  __end_of_Espera 19BC  
         __end_of_UMotorUsuaris 1012                  GLCDMotor@state 001C      __end_of_EscriuPrimeraOrdre 149C  
                __end_of___wmul 1974               __size_of_HGetTime 0004                   __pidataCOMRAM 1927  
                   ?_init_ports 005B                       _NoFerMenu 1BA6                       _ColumnAct 002C  
                ??_SIOStartGame 0060                    _enterNewName 0080                      ?_HNoJuguem 005B  
             __size_of_SIOMotor 015E                    ?_TiInitTimer 005B                     MTMenu@state 0022  
              UeditUsername@pos 0060                    ??_JnovaTecla 0060                       _SiFerMenu 1B9E  
                   __end_ofPL10 087C                     __end_ofPL20 0892                     __end_ofPL12 1796  
                   __end_ofPL30 1844                     __end_ofPL22 1024                     __end_ofPL14 0F74  
                   __end_ofPL40 14AA                     __end_ofPL32 08A8                     __end_ofPL24 19F4  
                   __end_ofPL16 18AE                     __end_ofPL50 0E3C                     __end_ofPL42 1106  
                   __end_ofPL34 1746                     __end_ofPL26 1034                     __end_ofPL18 11BA  
                   __end_ofPL60 184E                     __end_ofPL52 0CCA                     __end_ofPL44 0B56  
                   __end_ofPL36 0B4C                     __end_ofPL28 08A2                     __end_ofPL70 08B4  
                   __end_ofPL62 1590                     __end_ofPL54 0E46                     __end_ofPL46 0CC0  
                   __end_ofPL38 1042                     __end_ofPL72 08BA                     __end_ofPL64 104C  
                   __end_ofPL56 15F6                     __end_ofPL48 1752                     __end_ofPL74 0CD0  
                   __end_ofPL66 14B4                     __end_ofPL58 1A0E                     __end_ofPL68 08AE  
           start_initialization 14B4                       _TiGetTics 1974          __end_of_GLCDMostraMenu 1AB2  
                    ?_HNouMinut 005B                      ?_HNouSegon 005B                ??_UgetNumUsuaris 0060  
             __size_of_LcGotoXY 0094            __end_of_UgetUserName 1A50              __end_of_TiGetTimer 18A0  
                 JJuguem@usuari 0060            __size_of_MNovaLletra 0008               __size_of_LcLliure 000C  
             __size_of_LcScroll 0006                    ?_TiResetTics 005B            __size_of_LcCursorOff 000A  
                    ?_CantaData 005B                        ??_AdInit 0060                        ??_AlInit 0061  
                      ??_MTMenu 0071                        ??_AlPlay 0060                  ?_UeditUsername 0060  
       __end_of_SIONovaDireccio 1B6E                        ??_AlStop 0060            __size_of_LcNewString 000C  
                      ??_JMotor 0070                        ??_SMSoff 0060                        ??_LcInit 006C  
                     _NovaTecla 004A               __size_of_TeTeclat 011C                        ??_SMotor 0067  
                      ??_TeInit 0061                    ?__TiRSITimer 005B                        ??_Espera 0069  
             ??_SIOUsuariActual 0060                       _UgetScore 1A82              __end_of_JnovaTecla 1B7E  
                    ?_LcPutChar 005B               __size_of_UdelUser 000A                        ??___wmul 0064  
               AlTAltaveu@state 0026                     __pdataBANK0 0080                      ?_NoFerMenu 005B  
          __size_of_LcPutFletxa 000C                     ??_GLCDMotor 0071                   ??_init_eusart 0060  
                    ?_SiFerMenu 005B                     __pbssCOMRAM 0001           __size_of_CToAHaAcabat 0004  
                    ?_TiGetTics 0060                 ?_GLCDMostraMenu 005B                        ?_AdMotor 005B  
                      ?_HJuguem 005B                 ??_MsetNovaTecla 0060                        ?_JJuguem 005B  
                      ?_LcClear 005B                        ?_CantaIR 005B                  _CantaPartBaixa 152A  
                      ?_JUsuari 005B               __size_of_high_rsi 002A                    ?_WaitForBusy 005B  
           __size_of_init_ports 0018              MsetNovaTecla@tecla 0060              SsetNovaTecla@tecla 0060  
       __size_of_CToAConverteix 0008                      ?_UgetScore 005B                     ??_CToAReset 0060  
                     __pintcode 0008                    ?_UcreateUser 005B                   __pmediumconst 1CCA  
         __size_of_UchangeScore 0008                 CantaPartBaixa@c 0061                    _CToAHaAcabat 1B8E  
                     _highScore 009B                     JMotor@state 000A                     ??_HNoJuguem 0060  
                     _convertir 003E                   ??_CToAobtenir 0062                  __size_of_HInit 0010  
                __size_of_LcLCD 0036                  __size_of_SMSon 0006                  __size_of_Minit 0008  
                   ??_HNouMinut 0060                  __size_of_Sinit 0008                     ??_HNouSegon 0060  
        __end_of_CantaPartBaixa 1586                        _GLCDInit 1B6E             __end_of_init_eusart 1A3C  
                     _newString 03C4                 ??_UeditUsername 0062                     ??_CantaData 0062  
               HHoraMotor@state 0012         __size_of_LcInsertFletxa 000C                  ___wmul@product 0064  
                      _LATBbits 000F8A                        _LATCbits 000F8B                        _LATDbits 000F8C  
                  _UchangeScore 1B3E                ?_SIONovaDireccio 005B            __end_of_SIOStartGame 1B66  
                     _posFletxa 03C6                       _novaTecla 0045               ?_HActualitzarHora 0060  
                      _PIR1bits 000F9E                     ??_LcPutChar 0070                       _timerGLCD 001D  
                      _RCONbits 000FD0                       _reproduir 03C7                        _HGetTime 1BAE  
            ??_HActualitzarHora 0061                       _timerHora 0013                       _timerMenu 0023  
                      _SIOMotor 0B56                     ??_NoFerMenu 0060                      _ADCON0bits 000FC2  
             ___wmul@multiplier 0060                     ??_SiFerMenu 0060           __size_of_UgetUserName 0014  
        __size_of_SsetNovaTecla 0008     UAfegirLletraUsername@lletra 0062                        Espera@ms 0067  
                      _LcGotoXY 13A4                        _LcLliure 1AE2                     ??_TiGetTics 0062  
          __size_of_TiInitTimer 002A                        _LcScroll 1B84                   GLCDMotor@max1 0048  
                 GLCDMotor@max2 0047                   GLCDMotor@min1 001A                   GLCDMotor@min2 0019  
                  _teclaPremuda 008F              __end_of_deleteUser 1D6B                     LcGotoXY@Row 0068  
                     copy_data0 14C8                       copy_data1 14E8                 ?_CantaPartBaixa 005B  
              __size_of_AdMotor 00B4             __end_of_CToAobtenir 1B8E  __size_of_UAfegirLletraUsername 0022  
              __size_of_HJuguem 000C   __end_of_UAfegirLletraUsername 1774                __size_of_JJuguem 0008  
              __size_of_LcClear 0010                __size_of_CantaIR 001C                        _TeTeclat 0E46  
              __size_of_JUsuari 0004            __size_of_TiResetTics 0010                        _UdelUser 1AF8  
                      __Hrparam 0000                     ??_UgetScore 0060                        __Lrparam 0000  
          __size_of__TiRSITimer 0042                    _UgetUserName 1A3C                    _novaDireccio 000B  
                  ??_init_ports 0060                     _init_eusart 1A26                        __ptext10 1B2E  
                      __ptext11 0CD0              _EscriuPrimeraOrdre 1438                        __ptext20 1B4E  
                      __ptext12 1B36                        __ptext21 0036                        __ptext13 0B56  
                      __ptext30 1B7E                        __ptext22 1A3C                        __ptext14 1A82  
                      __ptext31 1BA2                        __ptext23 1B92                        __ptext15 1B3E  
                      __ptext40 1BAE                        __ptext32 1BA6                        __ptext24 18D8  
                      __ptext16 1B8A                        __ptext41 1BB2                        __ptext33 1B84  
                      __ptext25 1AF8                        __ptext17 1AEE                        __ptext50 1B5E  
                      __ptext42 184E                        __ptext34 1B02                        __ptext26 1B96  
                      __ptext18 1B8E                        __ptext51 1B66                        __ptext43 1AA6  
                      __ptext35 1BAA                        __ptext27 1B9A                        __ptext19 1B46  
                      __ptext60 1ABE                        __ptext52 1BBA                        __ptext44 1702  
                      __ptext36 1B56                        __ptext28 1752                        __ptext61 1ACA  
                      __ptext53 1AB2                        __ptext45 104C                        __ptext37 1A8E  
                      __ptext29 1B9E                        __ptext70 19BC                        __ptext62 165A  
                      __ptext54 1BBE                        __ptext46 1B0C                        __ptext38 1BCA  
                      __ptext71 152A                        __ptext63 13A4                        __ptext55 1BC2  
                      __ptext47 1438                        __ptext39 1A9A                        __ptext80 11BA  
                      __ptext72 1590                        __ptext64 1816                        __ptext56 1BC6  
                      __ptext48 130C                        __ptext81 1B76                        __ptext73 1B6E  
                      __ptext65 1AD6                        __ptext57 1A62                        __ptext49 1BB6  
                      __ptext82 1A50                        __ptext74 16AE                        __ptext66 1AE2  
                      __ptext58 126E                        __ptext75 1106                        __ptext67 19F4  
                      __ptext59 08BA                        __ptext84 1796                        __ptext76 19D8  
                      __ptext68 17D8                        __ptext77 1974                        __ptext69 199A  
                      __ptext78 1A72                        __ptext79 1882                        _direccio 003F  
                CantaPartAlta@c 0061                     _lletraASCII 0046           UeditUsername@menuDalt 0064  
               _SIOUsuariActual 1BB6                        _high_rsi 0008        __size_of_UCancelaNouUser 0004  
                      _s_Timers 00A7                   __size_of_CtoA 0054                     _lletraInici 0035  
                      _menuDalt 0025             ?_EscriuPrimeraOrdre 005B                   __size_of_main 0064  
         __end_of_CantaPartAlta 15EC            HActualitzarHora@nova 0060                  _CToAConverteix 1B46  
                 CantaData@Data 0062                        _tiTeclat 0021              __end_of_init_ports 1A26  
                      _setSMSon 03C1                   _SsetNovaTecla 1B16            __size_of_WaitForBusy 003E  
                      _nouMinut 03C3                        _nouSegon 03C2                        _timerSMS 0044  
                      isa$xinst 000000                        int$flags 007A            __size_of_UcreateUser 0004  
       __size_of_HClearNouMinut 0004         __size_of_HClearNouSegon 0004            ??_EscriuPrimeraOrdre 0060  
                    LcInit@rows 006C                ??_GLCDMostraMenu 0060                      _INTCONbits 000FF2  
                 ??_MNovaLletra 0060                     _CToAobtenir 1B8A                   ??_LcCursorOff 0068  
        __size_of_UMotorUsuaris 009E           __size_of_SIOStartGame 0008                   ??_LcNewString 0065  
                      intlevel2 0000          __end_of_CToAConverteix 1B4E                  _LcInsertFletxa 1ACA  
                    LcPutChar@c 0070                  ?_SsetNovaTecla 005B               MNovaLletra@lletra 0060  
                 ??_LcPutFletxa 0071                    _timer_durada 0027                     GLCDMotor@k1 0018  
                   GLCDMotor@k2 0017                     _tempsJugant 004B         __end_of_SIOUsuariActual 1BBA  
                  _SIOStartGame 1B5E                    AdMotor@state 000E          __end_of_LcInsertFletxa 1AD6  
            __end_of_stringText 1D5F                      _AlTAltaveu 1106                      _HHoraMotor 126E  
           __end_of_MNovaLletra 1B3E                 ?_CToAConverteix 005B           __end_of_MsetNovaTecla 1B26  
           __end_of_LcCursorOff 1B16                     SMotor@state 0010               ??_UCancelaNouUser 0060  
       __size_of_UgetNumUsuaris 0004             __end_of_LcNewString 1AE2  
