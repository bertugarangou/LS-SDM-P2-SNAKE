

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 29 18:34:13 2021

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   104                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   105                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   106                           	psect	pa_nodes0,global,class=CODE,delta=1
   107  0000                     
   108                           ; Version 2.32
   109                           ; Generated 02/02/2021 GMT
   110                           ; 
   111                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution. Publication is not required when
   125                           ;        this file is used in an embedded application.
   126                           ; 
   127                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   128                           ;        software without specific prior written permission.
   129                           ; 
   130                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   131                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   132                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   133                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   134                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   135                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   136                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   137                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   138                           ; 
   139                           ; 
   140                           ; Code-generator required, PIC18F4321 Definitions
   141                           ; 
   142                           ; SFR Addresses
   143  0000                     
   144                           	psect	idataCOMRAM
   145  00193E                     __pidataCOMRAM:
   146                           	callstack 0
   147                           
   148                           ;initializer for _lletraInici
   149  00193E  41                 	db	65
   150  00193F  44                 	db	68
   151  001940  47                 	db	71
   152  001941  4A                 	db	74
   153  001942  4D                 	db	77
   154  001943  50                 	db	80
   155  001944  54                 	db	84
   156  001945  57                 	db	87
   157  001946  00                 	db	0
   158                           
   159                           ;initializer for _convertir
   160  001947  FA                 	db	250
   161                           
   162                           ;initializer for _direccio
   163  001948  FF                 	db	255
   164                           
   165                           ;initializer for _usuariActualSIO
   166  001949  FF                 	db	255
   167                           
   168                           ;initializer for _usuariActual
   169  00194A  FF                 	db	255
   170                           
   171                           ;initializer for _delUser
   172  00194B  FF                 	db	255
   173                           
   174                           ;initializer for _ultimaTecla
   175  00194C  FF                 	db	255
   176                           
   177                           ;initializer for _timerSMS
   178  00194D  FF                 	db	255
   179                           
   180                           ;initializer for _novaTecla
   181  00194E  FF                 	db	255
   182                           
   183                           ;initializer for _lletraASCII
   184  00194F  FF                 	db	255
   185                           
   186                           ;initializer for GLCDMotor@max2
   187  001950  0F                 	db	15
   188                           
   189                           ;initializer for GLCDMotor@max1
   190  001951  0F                 	db	15
   191                           
   192                           ;initializer for _novaLletra
   193  001952  FF                 	db	255
   194                           
   195                           ;initializer for _NovaTecla
   196  001953  FF                 	db	255
   197                           
   198                           ;initializer for _tempsJugant
   199  001954  30                 	db	48
   200  001955  30                 	db	48
   201  001956  3A                 	db	58
   202  001957  30                 	db	48
   203  001958  30                 	db	48
   204  001959  00                 	db	0
   205                           
   206                           ;initializer for _string
   207  00195A  30                 	db	48
   208  00195B  30                 	db	48
   209  00195C  3A                 	db	58
   210  00195D  30                 	db	48
   211  00195E  30                 	db	48
   212  00195F  00                 	db	0
   213                           
   214                           ;initializer for _stringScore
   215  001960  30                 	db	48
   216  001961  30                 	db	48
   217  001962  30                 	db	48
   218  001963  00                 	db	0
   219                           
   220                           	psect	idataBANK0
   221  001854                     __pidataBANK0:
   222                           	callstack 0
   223                           
   224                           ;initializer for _stringText
   225  001854  54                 	db	84
   226  001855  20                 	db	32
   227  001856  30                 	db	48
   228  001857  30                 	db	48
   229  001858  3A                 	db	58
   230  001859  30                 	db	48
   231  00185A  30                 	db	48
   232  00185B  20                 	db	32
   233  00185C  7C                 	db	124
   234  00185D  20                 	db	32
   235  00185E  53                 	db	83
   236  00185F  20                 	db	32
   237  001860  30                 	db	48
   238  001861  30                 	db	48
   239  001862  30                 	db	48
   240  001863  00                 	db	0
   241                           
   242                           ;initializer for _enterNewName
   243  001864  45                 	db	69
   244  001865  6E                 	db	110
   245  001866  74                 	db	116
   246  001867  65                 	db	101
   247  001868  72                 	db	114
   248  001869  20                 	db	32
   249  00186A  4E                 	db	78
   250  00186B  65                 	db	101
   251  00186C  77                 	db	119
   252  00186D  20                 	db	32
   253  00186E  4E                 	db	78
   254  00186F  61                 	db	97
   255  001870  6D                 	db	109
   256  001871  65                 	db	101
   257  001872  00                 	db	0
   258                           
   259                           ;initializer for _teclaPremuda
   260  001873  01                 	db	1
   261  001874  02                 	db	2
   262  001875  03                 	db	3
   263  001876  04                 	db	4
   264  001877  05                 	db	5
   265  001878  06                 	db	6
   266  001879  07                 	db	7
   267  00187A  08                 	db	8
   268  00187B  09                 	db	9
   269  00187C  0A                 	db	10
   270  00187D  00                 	db	0
   271  00187E  0B                 	db	11
   272                           
   273                           ;initializer for _highScore
   274  00187F  48                 	db	72
   275  001880  69                 	db	105
   276  001881  67                 	db	103
   277  001882  68                 	db	104
   278  001883  20                 	db	32
   279  001884  73                 	db	115
   280  001885  63                 	db	99
   281  001886  6F                 	db	111
   282  001887  72                 	db	114
   283  001888  65                 	db	101
   284  001889  3A                 	db	58
   285  00188A  00                 	db	0
   286                           
   287                           	psect	mediumconst
   288  001F1A                     __pmediumconst:
   289                           	callstack 0
   290  001F1A  00                 	db	0
   291  001F1B                     _menu:
   292                           	callstack 0
   293  001F1B  31                 	db	49
   294  001F1C  2E                 	db	46
   295  001F1D  20                 	db	32
   296  001F1E  4E                 	db	78
   297  001F1F  65                 	db	101
   298  001F20  77                 	db	119
   299  001F21  20                 	db	32
   300  001F22  67                 	db	103
   301  001F23  61                 	db	97
   302  001F24  6D                 	db	109
   303  001F25  65                 	db	101
   304  001F26  00                 	db	0
   305  001F27  00                 	db	0
   306  001F28  00                 	db	0
   307  001F29  00                 	db	0
   308  001F2A  00                 	db	0
   309  001F2B  00                 	db	0
   310  001F2C  00                 	db	0
   311  001F2D  00                 	db	0
   312  001F2E  00                 	db	0
   313  001F2F  00                 	db	0
   314  001F30  00                 	db	0
   315  001F31  32                 	db	50
   316  001F32  2E                 	db	46
   317  001F33  20                 	db	32
   318  001F34  53                 	db	83
   319  001F35  68                 	db	104
   320  001F36  6F                 	db	111
   321  001F37  77                 	db	119
   322  001F38  20                 	db	32
   323  001F39  74                 	db	116
   324  001F3A  6F                 	db	111
   325  001F3B  70                 	db	112
   326  001F3C  20                 	db	32
   327  001F3D  35                 	db	53
   328  001F3E  20                 	db	32
   329  001F3F  73                 	db	115
   330  001F40  63                 	db	99
   331  001F41  6F                 	db	111
   332  001F42  72                 	db	114
   333  001F43  65                 	db	101
   334  001F44  73                 	db	115
   335  001F45  20                 	db	32
   336  001F46  00                 	db	0
   337  001F47  33                 	db	51
   338  001F48  2E                 	db	46
   339  001F49  20                 	db	32
   340  001F4A  53                 	db	83
   341  001F4B  68                 	db	104
   342  001F4C  6F                 	db	111
   343  001F4D  77                 	db	119
   344  001F4E  20                 	db	32
   345  001F4F  75                 	db	117
   346  001F50  73                 	db	115
   347  001F51  65                 	db	101
   348  001F52  72                 	db	114
   349  001F53  73                 	db	115
   350  001F54  00                 	db	0
   351  001F55  00                 	db	0
   352  001F56  00                 	db	0
   353  001F57  00                 	db	0
   354  001F58  00                 	db	0
   355  001F59  00                 	db	0
   356  001F5A  00                 	db	0
   357  001F5B  00                 	db	0
   358  001F5C  00                 	db	0
   359  001F5D  34                 	db	52
   360  001F5E  2E                 	db	46
   361  001F5F  20                 	db	32
   362  001F60  4D                 	db	77
   363  001F61  6F                 	db	111
   364  001F62  64                 	db	100
   365  001F63  69                 	db	105
   366  001F64  66                 	db	102
   367  001F65  79                 	db	121
   368  001F66  20                 	db	32
   369  001F67  75                 	db	117
   370  001F68  73                 	db	115
   371  001F69  65                 	db	101
   372  001F6A  72                 	db	114
   373  001F6B  73                 	db	115
   374  001F6C  00                 	db	0
   375  001F6D  00                 	db	0
   376  001F6E  00                 	db	0
   377  001F6F  00                 	db	0
   378  001F70  00                 	db	0
   379  001F71  00                 	db	0
   380  001F72  00                 	db	0
   381  001F73  35                 	db	53
   382  001F74  2E                 	db	46
   383  001F75  20                 	db	32
   384  001F76  53                 	db	83
   385  001F77  68                 	db	104
   386  001F78  6F                 	db	111
   387  001F79  77                 	db	119
   388  001F7A  20                 	db	32
   389  001F7B  74                 	db	116
   390  001F7C  69                 	db	105
   391  001F7D  6D                 	db	109
   392  001F7E  65                 	db	101
   393  001F7F  00                 	db	0
   394  001F80  00                 	db	0
   395  001F81  00                 	db	0
   396  001F82  00                 	db	0
   397  001F83  00                 	db	0
   398  001F84  00                 	db	0
   399  001F85  00                 	db	0
   400  001F86  00                 	db	0
   401  001F87  00                 	db	0
   402  001F88  00                 	db	0
   403  001F89  36                 	db	54
   404  001F8A  2E                 	db	46
   405  001F8B  20                 	db	32
   406  001F8C  4D                 	db	77
   407  001F8D  6F                 	db	111
   408  001F8E  64                 	db	100
   409  001F8F  69                 	db	105
   410  001F90  66                 	db	102
   411  001F91  79                 	db	121
   412  001F92  20                 	db	32
   413  001F93  74                 	db	116
   414  001F94  69                 	db	105
   415  001F95  6D                 	db	109
   416  001F96  65                 	db	101
   417  001F97  00                 	db	0
   418  001F98  00                 	db	0
   419  001F99  00                 	db	0
   420  001F9A  00                 	db	0
   421  001F9B  00                 	db	0
   422  001F9C  00                 	db	0
   423  001F9D  00                 	db	0
   424  001F9E  00                 	db	0
   425  001F9F                     __end_of_menu:
   426                           	callstack 0
   427  001F9F                     _deleteUser:
   428                           	callstack 0
   429  001F9F  44                 	db	68
   430  001FA0  65                 	db	101
   431  001FA1  6C                 	db	108
   432  001FA2  65                 	db	101
   433  001FA3  74                 	db	116
   434  001FA4  65                 	db	101
   435  001FA5  20                 	db	32
   436  001FA6  55                 	db	85
   437  001FA7  73                 	db	115
   438  001FA8  65                 	db	101
   439  001FA9  72                 	db	114
   440  001FAA  00                 	db	0
   441  001FAB                     __end_of_deleteUser:
   442                           	callstack 0
   443  001FAB                     _Score:
   444                           	callstack 0
   445  001FAB  53                 	db	83
   446  001FAC  63                 	db	99
   447  001FAD  6F                 	db	111
   448  001FAE  72                 	db	114
   449  001FAF  65                 	db	101
   450  001FB0  3A                 	db	58
   451  001FB1  00                 	db	0
   452  001FB2                     __end_of_Score:
   453                           	callstack 0
   454  0000                     _RCREG	set	4014
   455  0000                     _PIR1bits	set	3998
   456  0000                     _TXREG	set	4013
   457  0000                     _TXSTAbits	set	4012
   458  0000                     _ADCON0bits	set	4034
   459  0000                     _ADRESH	set	4036
   460  0000                     _ADCON2	set	4032
   461  0000                     _ADCON1	set	4033
   462  0000                     _ADCON0	set	4034
   463  0000                     _PORTDbits	set	3971
   464  0000                     _T0CONbits	set	4053
   465  0000                     _TMR0L	set	4054
   466  0000                     _TMR0H	set	4055
   467  0000                     _T0CON	set	4053
   468  0000                     _INTCONbits	set	4082
   469  0000                     _RCONbits	set	4048
   470  0000                     _PORTCbits	set	3970
   471  0000                     _LATDbits	set	3980
   472  0000                     _LATCbits	set	3979
   473  0000                     _TRISDbits	set	3989
   474  0000                     _TRISCbits	set	3988
   475  0000                     _SPBRG	set	4015
   476  0000                     _SPBRGH	set	4016
   477  0000                     _BAUDCON	set	4024
   478  0000                     _RCSTA	set	4011
   479  0000                     _TXSTA	set	4012
   480  0000                     _LATD	set	3980
   481  0000                     _TRISD	set	3989
   482  0000                     _TRISC	set	3988
   483  0000                     _LATBbits	set	3978
   484  0000                     _TRISB	set	3987
   485  0000                     _TRISA	set	3986
   486  001FB2                     STR_1:
   487  001FB2  45                 	db	69	;'E'
   488  001FB3  6E                 	db	110	;'n'
   489  001FB4  74                 	db	116	;'t'
   490  001FB5  65                 	db	101	;'e'
   491  001FB6  72                 	db	114	;'r'
   492  001FB7  20                 	db	32
   493  001FB8  6E                 	db	110	;'n'
   494  001FB9  65                 	db	101	;'e'
   495  001FBA  77                 	db	119	;'w'
   496  001FBB  20                 	db	32
   497  001FBC  74                 	db	116	;'t'
   498  001FBD  69                 	db	105	;'i'
   499  001FBE  6D                 	db	109	;'m'
   500  001FBF  65                 	db	101	;'e'
   501  001FC0  00                 	db	0
   502  001FC1                     STR_4:
   503  001FC1  31                 	db	49	;'1'
   504  001FC2  2E                 	db	46
   505  001FC3  20                 	db	32
   506  001FC4  53                 	db	83	;'S'
   507  001FC5  65                 	db	101	;'e'
   508  001FC6  6C                 	db	108	;'l'
   509  001FC7  65                 	db	101	;'e'
   510  001FC8  63                 	db	99	;'c'
   511  001FC9  74                 	db	116	;'t'
   512  001FCA  20                 	db	32
   513  001FCB  55                 	db	85	;'U'
   514  001FCC  73                 	db	115	;'s'
   515  001FCD  65                 	db	101	;'e'
   516  001FCE  72                 	db	114	;'r'
   517  001FCF  00                 	db	0
   518  001FD0                     STR_2:
   519  001FD0  43                 	db	67	;'C'
   520  001FD1  75                 	db	117	;'u'
   521  001FD2  72                 	db	114	;'r'
   522  001FD3  72                 	db	114	;'r'
   523  001FD4  65                 	db	101	;'e'
   524  001FD5  6E                 	db	110	;'n'
   525  001FD6  74                 	db	116	;'t'
   526  001FD7  20                 	db	32
   527  001FD8  54                 	db	84	;'T'
   528  001FD9  69                 	db	105	;'i'
   529  001FDA  6D                 	db	109	;'m'
   530  001FDB  65                 	db	101	;'e'
   531  001FDC  00                 	db	0
   532  001FDD                     STR_5:
   533  001FDD  45                 	db	69	;'E'
   534  001FDE  6E                 	db	110	;'n'
   535  001FDF  74                 	db	116	;'t'
   536  001FE0  65                 	db	101	;'e'
   537  001FE1  72                 	db	114	;'r'
   538  001FE2  20                 	db	32
   539  001FE3  6E                 	db	110	;'n'
   540  001FE4  61                 	db	97	;'a'
   541  001FE5  6D                 	db	109	;'m'
   542  001FE6  65                 	db	101	;'e'
   543  001FE7  3A                 	db	58	;':'
   544  001FE8  00                 	db	0
   545  001FE9                     STR_6:
   546  001FE9  32                 	db	50	;'2'
   547  001FEA  2E                 	db	46
   548  001FEB  20                 	db	32
   549  001FEC  4E                 	db	78	;'N'
   550  001FED  65                 	db	101	;'e'
   551  001FEE  77                 	db	119	;'w'
   552  001FEF  20                 	db	32
   553  001FF0  55                 	db	85	;'U'
   554  001FF1  73                 	db	115	;'s'
   555  001FF2  65                 	db	101	;'e'
   556  001FF3  72                 	db	114	;'r'
   557  001FF4  00                 	db	0
   558  001FF5                     STR_3:
   559  001FF5  28                 	db	40
   560  001FF6  48                 	db	72	;'H'
   561  001FF7  48                 	db	72	;'H'
   562  001FF8  3A                 	db	58	;':'
   563  001FF9  4D                 	db	77	;'M'
   564  001FFA  4D                 	db	77	;'M'
   565  001FFB  29                 	db	41
   566  001FFC  3A                 	db	58	;':'
   567  001FFD  20                 	db	32
   568  001FFE  00                 	db	0
   569  001FFF  00                 	db	0	; dummy byte at the end
   570  0000                     
   571                           ; #config settings
   572                           
   573                           	psect	cinit
   574  0014BA                     __pcinit:
   575                           	callstack 0
   576  0014BA                     start_initialization:
   577                           	callstack 0
   578  0014BA                     __initialization:
   579                           	callstack 0
   580                           
   581                           ; Initialize objects allocated to BANK0 (55 bytes)
   582                           ; load TBLPTR registers with __pidataBANK0
   583  0014BA  0E54               	movlw	low __pidataBANK0
   584  0014BC  6EF6               	movwf	tblptrl,c
   585  0014BE  0E18               	movlw	high __pidataBANK0
   586  0014C0  6EF7               	movwf	tblptrh,c
   587  0014C2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   588  0014C4  6EF8               	movwf	tblptru,c
   589  0014C6  EE00  F080         	lfsr	0,__pdataBANK0
   590  0014CA  EE10 F037          	lfsr	1,55
   591  0014CE                     copy_data0:
   592  0014CE  0009               	tblrd		*+
   593  0014D0  CFF5 FFEE          	movff	tablat,postinc0
   594  0014D4  50E5               	movf	postdec1,w,c
   595  0014D6  50E1               	movf	fsr1l,w,c
   596  0014D8  E1FA               	bnz	copy_data0
   597                           
   598                           ; Initialize objects allocated to COMRAM (38 bytes)
   599                           ; load TBLPTR registers with __pidataCOMRAM
   600  0014DA  0E3E               	movlw	low __pidataCOMRAM
   601  0014DC  6EF6               	movwf	tblptrl,c
   602  0014DE  0E19               	movlw	high __pidataCOMRAM
   603  0014E0  6EF7               	movwf	tblptrh,c
   604  0014E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   605  0014E4  6EF8               	movwf	tblptru,c
   606  0014E6  EE00  F035         	lfsr	0,__pdataCOMRAM
   607  0014EA  EE10 F026          	lfsr	1,38
   608  0014EE                     copy_data1:
   609  0014EE  0009               	tblrd		*+
   610  0014F0  CFF5 FFEE          	movff	tablat,postinc0
   611  0014F4  50E5               	movf	postdec1,w,c
   612  0014F6  50E1               	movf	fsr1l,w,c
   613  0014F8  E1FA               	bnz	copy_data1
   614                           
   615                           ; Clear objects allocated to BANK1 (240 bytes)
   616  0014FA  EE01  F000         	lfsr	0,__pbssBANK1
   617  0014FE  0EF0               	movlw	240
   618  001500                     clear_0:
   619  001500  6AEE               	clrf	postinc0,c
   620  001502  06E8               	decf	wreg,f,c
   621  001504  E1FD               	bnz	clear_0
   622                           
   623                           ; Clear objects allocated to BANK0 (24 bytes)
   624  001506  EE00  F0B7         	lfsr	0,__pbssBANK0
   625  00150A  0E18               	movlw	24
   626  00150C                     clear_1:
   627  00150C  6AEE               	clrf	postinc0,c
   628  00150E  06E8               	decf	wreg,f,c
   629  001510  E1FD               	bnz	clear_1
   630                           
   631                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   632  001512  6A79               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   633  001514  6A78               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   634                           
   635                           ; Clear objects allocated to COMRAM (52 bytes)
   636  001516  EE00  F001         	lfsr	0,__pbssCOMRAM
   637  00151A  0E34               	movlw	52
   638  00151C                     clear_2:
   639  00151C  6AEE               	clrf	postinc0,c
   640  00151E  06E8               	decf	wreg,f,c
   641  001520  E1FD               	bnz	clear_2
   642  001522                     end_of_initialization:
   643                           	callstack 0
   644  001522                     __end_of__initialization:
   645                           	callstack 0
   646  001522  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   647  001524  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   648  001526  0E00               	movlw	low (__Lmediumconst shr (0+16))
   649  001528  6EF8               	movwf	tblptru,c
   650  00152A  0100               	movlb	0
   651  00152C  EFFE  F00A         	goto	_main	;jump to C main() function
   652                           
   653                           	psect	bitbssCOMRAM
   654  0003C0                     __pbitbssCOMRAM:
   655                           	callstack 0
   656  0003C0                     _createUser:
   657                           	callstack 0
   658  0003C0                     	ds	1
   659  0003C1                     _setSMSon:
   660                           	callstack 0
   661  0003C1                     	ds	1
   662  0003C2                     _nouSegon:
   663                           	callstack 0
   664  0003C2                     	ds	1
   665  0003C3                     _nouMinut:
   666                           	callstack 0
   667  0003C3                     	ds	1
   668  0003C4                     _newString:
   669                           	callstack 0
   670  0003C4                     	ds	1
   671  0003C5                     _ferMenu:
   672                           	callstack 0
   673  0003C5                     	ds	1
   674  0003C6                     _posFletxa:
   675                           	callstack 0
   676  0003C6                     	ds	1
   677  0003C7                     _reproduir:
   678                           	callstack 0
   679  0003C7                     	ds	1
   680  0003C8                     _nou_s:
   681                           	callstack 0
   682  0003C8                     	ds	1
   683                           
   684                           	psect	bssCOMRAM
   685  000001                     __pbssCOMRAM:
   686                           	callstack 0
   687  000001                     _userPtr:
   688                           	callstack 0
   689  000001                     	ds	2
   690  000003                     _h_Tics:
   691                           	callstack 0
   692  000003                     	ds	2
   693  000005                     _s_ptr:
   694                           	callstack 0
   695  000005                     	ds	2
   696  000007                     CtoA@state:
   697                           	callstack 0
   698  000007                     	ds	1
   699  000008                     SIOMotor@state:
   700                           	callstack 0
   701  000008                     	ds	1
   702  000009                     _rebut:
   703                           	callstack 0
   704  000009                     	ds	1
   705  00000A                     JMotor@state:
   706                           	callstack 0
   707  00000A                     	ds	1
   708  00000B                     _novaDireccio:
   709                           	callstack 0
   710  00000B                     	ds	1
   711  00000C                     UMotorUsuaris@state:
   712                           	callstack 0
   713  00000C                     	ds	1
   714  00000D                     _numUsuaris:
   715                           	callstack 0
   716  00000D                     	ds	1
   717  00000E                     AdMotor@state:
   718                           	callstack 0
   719  00000E                     	ds	1
   720  00000F                     _ultimaTeclaAD:
   721                           	callstack 0
   722  00000F                     	ds	1
   723  000010                     SMotor@state:
   724                           	callstack 0
   725  000010                     	ds	1
   726  000011                     _sumaPulsacions:
   727                           	callstack 0
   728  000011                     	ds	1
   729  000012                     HHoraMotor@state:
   730                           	callstack 0
   731  000012                     	ds	1
   732  000013                     _timerHora:
   733                           	callstack 0
   734  000013                     	ds	1
   735  000014                     _segons:
   736                           	callstack 0
   737  000014                     	ds	1
   738  000015                     GLCDMotor@length2:
   739                           	callstack 0
   740  000015                     	ds	1
   741  000016                     GLCDMotor@length1:
   742                           	callstack 0
   743  000016                     	ds	1
   744  000017                     GLCDMotor@k2:
   745                           	callstack 0
   746  000017                     	ds	1
   747  000018                     GLCDMotor@k1:
   748                           	callstack 0
   749  000018                     	ds	1
   750  000019                     GLCDMotor@min2:
   751                           	callstack 0
   752  000019                     	ds	1
   753  00001A                     GLCDMotor@min1:
   754                           	callstack 0
   755  00001A                     	ds	1
   756  00001B                     GLCDMotor@j:
   757                           	callstack 0
   758  00001B                     	ds	1
   759  00001C                     GLCDMotor@state:
   760                           	callstack 0
   761  00001C                     	ds	1
   762  00001D                     _timerGLCD:
   763                           	callstack 0
   764  00001D                     	ds	1
   765  00001E                     TeTeclat@files:
   766                           	callstack 0
   767  00001E                     	ds	1
   768  00001F                     TeTeclat@cols:
   769                           	callstack 0
   770  00001F                     	ds	1
   771  000020                     TeTeclat@state:
   772                           	callstack 0
   773  000020                     	ds	1
   774  000021                     _tiTeclat:
   775                           	callstack 0
   776  000021                     	ds	1
   777  000022                     MTMenu@state:
   778                           	callstack 0
   779  000022                     	ds	1
   780  000023                     _timerMenu:
   781                           	callstack 0
   782  000023                     	ds	1
   783  000024                     _pos:
   784                           	callstack 0
   785  000024                     	ds	1
   786  000025                     _menuDalt:
   787                           	callstack 0
   788  000025                     	ds	1
   789  000026                     AlTAltaveu@state:
   790                           	callstack 0
   791  000026                     	ds	1
   792  000027                     _timer_durada:
   793                           	callstack 0
   794  000027                     	ds	1
   795  000028                     _nota:
   796                           	callstack 0
   797  000028                     	ds	1
   798  000029                     _timer_nota:
   799                           	callstack 0
   800  000029                     	ds	1
   801  00002A                     _counter:
   802                           	callstack 0
   803  00002A                     	ds	1
   804  00002B                     _Timer:
   805                           	callstack 0
   806  00002B                     	ds	1
   807  00002C                     _ColumnAct:
   808                           	callstack 0
   809  00002C                     	ds	1
   810  00002D                     _RowAct:
   811                           	callstack 0
   812  00002D                     	ds	1
   813  00002E                     _Columns:
   814                           	callstack 0
   815  00002E                     	ds	1
   816  00002F                     _Rows:
   817                           	callstack 0
   818  00002F                     	ds	1
   819  000030                     _horaTmp:
   820                           	callstack 0
   821  000030                     	ds	5
   822                           
   823                           	psect	dataCOMRAM
   824  000035                     __pdataCOMRAM:
   825                           	callstack 0
   826  000035                     _lletraInici:
   827                           	callstack 0
   828  000035                     	ds	9
   829  00003E                     _convertir:
   830                           	callstack 0
   831  00003E                     	ds	1
   832  00003F                     _direccio:
   833                           	callstack 0
   834  00003F                     	ds	1
   835  000040                     _usuariActualSIO:
   836                           	callstack 0
   837  000040                     	ds	1
   838  000041                     _usuariActual:
   839                           	callstack 0
   840  000041                     	ds	1
   841  000042                     _delUser:
   842                           	callstack 0
   843  000042                     	ds	1
   844  000043                     _ultimaTecla:
   845                           	callstack 0
   846  000043                     	ds	1
   847  000044                     _timerSMS:
   848                           	callstack 0
   849  000044                     	ds	1
   850  000045                     _novaTecla:
   851                           	callstack 0
   852  000045                     	ds	1
   853  000046                     _lletraASCII:
   854                           	callstack 0
   855  000046                     	ds	1
   856  000047                     GLCDMotor@max2:
   857                           	callstack 0
   858  000047                     	ds	1
   859  000048                     GLCDMotor@max1:
   860                           	callstack 0
   861  000048                     	ds	1
   862  000049                     _novaLletra:
   863                           	callstack 0
   864  000049                     	ds	1
   865  00004A                     _NovaTecla:
   866                           	callstack 0
   867  00004A                     	ds	1
   868  00004B                     _tempsJugant:
   869                           	callstack 0
   870  00004B                     	ds	6
   871  000051                     _string:
   872                           	callstack 0
   873  000051                     	ds	6
   874  000057                     _stringScore:
   875                           	callstack 0
   876  000057                     	ds	4
   877                           
   878                           	psect	bssBANK0
   879  0000B7                     __pbssBANK0:
   880                           	callstack 0
   881  0000B7                     _s_Timers:
   882                           	callstack 0
   883  0000B7                     	ds	24
   884                           
   885                           	psect	dataBANK0
   886  000080                     __pdataBANK0:
   887                           	callstack 0
   888  000080                     _stringText:
   889                           	callstack 0
   890  000080                     	ds	16
   891  000090                     _enterNewName:
   892                           	callstack 0
   893  000090                     	ds	15
   894  00009F                     _teclaPremuda:
   895                           	callstack 0
   896  00009F                     	ds	12
   897  0000AB                     _highScore:
   898                           	callstack 0
   899  0000AB                     	ds	12
   900                           
   901                           	psect	bssBANK1
   902  000100                     __pbssBANK1:
   903                           	callstack 0
   904  000100                     _usuaris:
   905                           	callstack 0
   906  000100                     	ds	240
   907                           
   908                           	psect	cstackCOMRAM
   909  00005B                     __pcstackCOMRAM:
   910                           	callstack 0
   911  00005B                     
   912                           ; 1 bytes @ 0x0
   913  00005B                     	ds	1
   914  00005C                     ??_high_rsi:
   915                           
   916                           ; 1 bytes @ 0x1
   917  00005C                     	ds	4
   918  000060                     ??_CtoA:
   919  000060                     ??_EscriuPrimeraOrdre:
   920  000060                     ??_UAfegirLletraUsername:
   921  000060                     ??_CantaPartAlta:
   922  000060                     ??_CantaPartBaixa:
   923  000060                     ?_TiGetTics:
   924                           	callstack 0
   925  000060                     ?_UgetUserName:
   926                           	callstack 0
   927  000060                     ?___wmul:
   928                           	callstack 0
   929  000060                     TiResetTics@Handle:
   930                           	callstack 0
   931  000060                     MsetNovaTecla@tecla:
   932                           	callstack 0
   933  000060                     MNovaLletra@lletra:
   934                           	callstack 0
   935  000060                     GLCDMostraMenu@num:
   936                           	callstack 0
   937  000060                     HActualitzarHora@nova:
   938                           	callstack 0
   939  000060                     SsetNovaTecla@tecla:
   940                           	callstack 0
   941  000060                     UgetScore@quin:
   942                           	callstack 0
   943  000060                     UchangeScore@score:
   944                           	callstack 0
   945  000060                     UdelUser@index:
   946                           	callstack 0
   947  000060                     UeditUsername@pos:
   948                           	callstack 0
   949  000060                     JJuguem@usuari:
   950                           	callstack 0
   951  000060                     JnovaTecla@direccio:
   952                           	callstack 0
   953  000060                     SIONovaDireccio@num:
   954                           	callstack 0
   955  000060                     SIOStartGame@usuari:
   956                           	callstack 0
   957  000060                     CToAConverteix@numero:
   958                           	callstack 0
   959  000060                     ___wmul@multiplier:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x5
   963  000060                     	ds	1
   964  000061                     ??_AdMotor:
   965  000061                     CantaPartAlta@c:
   966                           	callstack 0
   967  000061                     CantaPartBaixa@c:
   968                           	callstack 0
   969  000061                     EscriuPrimeraOrdre@ordre:
   970                           	callstack 0
   971  000061                     UeditUsername@novaLletra:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x6
   975  000061                     	ds	1
   976  000062                     ??_TiGetTics:
   977  000062                     ??_UeditUsername:
   978  000062                     CantaIR@IR:
   979                           	callstack 0
   980  000062                     CantaData@Data:
   981                           	callstack 0
   982  000062                     UgetUserName@quin:
   983                           	callstack 0
   984  000062                     UAfegirLletraUsername@lletra:
   985                           	callstack 0
   986  000062                     ___wmul@multiplicand:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x7
   990  000062                     	ds	1
   991  000063                     LcNewString@new_s:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x8
   995  000063                     	ds	1
   996  000064                     TiGetTics@Handle:
   997                           	callstack 0
   998  000064                     UeditUsername@menuDalt:
   999                           	callstack 0
  1000  000064                     ___wmul@product:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x9
  1004  000064                     	ds	1
  1005  000065                     TiGetTics@actual:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0xA
  1009  000065                     	ds	1
  1010  000066                     ??_UMotorUsuaris:
  1011                           
  1012                           ; 1 bytes @ 0xB
  1013  000066                     	ds	1
  1014  000067                     ??_AlTAltaveu:
  1015  000067                     ??_HHoraMotor:
  1016  000067                     ??_TeTeclat:
  1017  000067                     ??_SMotor:
  1018  000067                     WaitForBusy@Busy:
  1019                           	callstack 0
  1020  000067                     Espera@ms:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0xC
  1024  000067                     	ds	1
  1025  000068                     LcGotoXY@Row:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0xD
  1029  000068                     	ds	1
  1030  000069                     ??_Espera:
  1031  000069                     ??_LcGotoXY:
  1032                           
  1033                           ; 1 bytes @ 0xE
  1034  000069                     	ds	1
  1035  00006A                     Espera@Timer:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0xF
  1039  00006A                     	ds	1
  1040  00006B                     LcInit@columns:
  1041                           	callstack 0
  1042  00006B                     _LcGotoXY$499:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x10
  1046  00006B                     	ds	1
  1047  00006C                     LcInit@rows:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x11
  1051  00006C                     	ds	1
  1052  00006D                     LcInit@i:
  1053                           	callstack 0
  1054  00006D                     LcGotoXY@Fisics:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x12
  1058  00006D                     	ds	2
  1059  00006F                     LcGotoXY@Column:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0x14
  1063  00006F                     	ds	1
  1064  000070                     ??_JMotor:
  1065  000070                     LcPutChar@c:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x15
  1069  000070                     	ds	1
  1070  000071                     ??_GLCDMotor:
  1071  000071                     ??_MTMenu:
  1072  000071                     ??_SIOMotor:
  1073  000071                     
  1074                           ; 1 bytes @ 0x16
  1075  000071                     	ds	7
  1076  000078                     
  1077                           ; 1 bytes @ 0x1D
  1078 ;;
  1079 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1080 ;;
  1081 ;; *************** function _main *****************
  1082 ;; Defined at:
  1083 ;;		line 69 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1
  1097 ;;      Params:         0       0       0
  1098 ;;      Locals:         0       0       0
  1099 ;;      Temps:          0       0       0
  1100 ;;      Totals:         0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels required when called: 9
  1103 ;; This function calls:
  1104 ;;		_AdInit
  1105 ;;		_AdMotor
  1106 ;;		_AlInit
  1107 ;;		_AlTAltaveu
  1108 ;;		_CtoA
  1109 ;;		_GLCDInit
  1110 ;;		_GLCDMotor
  1111 ;;		_HHoraMotor
  1112 ;;		_HInit
  1113 ;;		_JMotor
  1114 ;;		_LcInit
  1115 ;;		_LcLCD
  1116 ;;		_MTMenu
  1117 ;;		_Minit
  1118 ;;		_SIOMotor
  1119 ;;		_SMotor
  1120 ;;		_Sinit
  1121 ;;		_TeInit
  1122 ;;		_TeTeclat
  1123 ;;		_TiInitTimer
  1124 ;;		_UMotorUsuaris
  1125 ;;		_init_eusart
  1126 ;;		_init_ports
  1127 ;; This function is called by:
  1128 ;;		Startup code after reset
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text0
  1133  0015FC                     __ptext0:
  1134                           	callstack 0
  1135  0015FC                     _main:
  1136                           	callstack 22
  1137                           
  1138                           ;main.c: 70:     init_ports();
  1139                           
  1140                           ;incstack = 0
  1141  0015FC  EC12  F00D         	call	_init_ports	;wreg free
  1142                           
  1143                           ;main.c: 71:     init_eusart();
  1144  001600  EC1E  F00D         	call	_init_eusart	;wreg free
  1145                           
  1146                           ;main.c: 73:     TiInitTimer();
  1147  001604  EC76  F00C         	call	_TiInitTimer	;wreg free
  1148                           
  1149                           ;main.c: 74:     AlInit();
  1150  001608  EC44  F00D         	call	_AlInit	;wreg free
  1151                           
  1152                           ;main.c: 75:     AdInit();
  1153  00160C  EC33  F00D         	call	_AdInit	;wreg free
  1154                           
  1155                           ;main.c: 76:     LcInit(2,16);
  1156  001610  0E10               	movlw	16
  1157  001612  6E6B               	movwf	LcInit@columns^0,c
  1158  001614  0E02               	movlw	2
  1159  001616  EC2A  F008         	call	_LcInit
  1160                           
  1161                           ;main.c: 77:     TeInit();
  1162  00161A  EC9E  F00D         	call	_TeInit	;wreg free
  1163                           
  1164                           ;main.c: 78:     GLCDInit();
  1165  00161E  ECC2  F00D         	call	_GLCDInit	;wreg free
  1166                           
  1167                           ;main.c: 79:     HInit();
  1168  001622  EC3C  F00D         	call	_HInit	;wreg free
  1169                           
  1170                           ;main.c: 80:     Sinit();
  1171  001626  ECA2  F00D         	call	_Sinit	;wreg free
  1172                           
  1173                           ;main.c: 81:     Minit();
  1174  00162A  ECB2  F00D         	call	_Minit	;wreg free
  1175  00162E                     l5749:
  1176                           
  1177                           ;main.c: 84:         AlTAltaveu();
  1178  00162E  EC87  F008         	call	_AlTAltaveu	;wreg free
  1179                           
  1180                           ;main.c: 85:         GLCDMotor();
  1181  001632  EC61  F004         	call	_GLCDMotor	;wreg free
  1182                           
  1183                           ;main.c: 86:         UMotorUsuaris();
  1184  001636  ECBE  F007         	call	_UMotorUsuaris	;wreg free
  1185                           
  1186                           ;main.c: 87:         MTMenu();
  1187  00163A  EC1B  F000         	call	_MTMenu	;wreg free
  1188                           
  1189                           ;main.c: 88:         JMotor();
  1190  00163E  EC8A  F009         	call	_JMotor	;wreg free
  1191                           
  1192                           ;main.c: 89:         SIOMotor();
  1193  001642  ECAF  F005         	call	_SIOMotor	;wreg free
  1194                           
  1195                           ;main.c: 90:         CtoA();
  1196  001646  EC5A  F00B         	call	_CtoA	;wreg free
  1197                           
  1198                           ;main.c: 92:         HHoraMotor();
  1199  00164A  EC3B  F009         	call	_HHoraMotor	;wreg free
  1200                           
  1201                           ;main.c: 93:         AdMotor();
  1202  00164E  ECE1  F008         	call	_AdMotor	;wreg free
  1203                           
  1204                           ;main.c: 95:         TeTeclat();
  1205  001652  EC27  F007         	call	_TeTeclat	;wreg free
  1206                           
  1207                           ;main.c: 96:         SMotor();
  1208  001656  EC6C  F006         	call	_SMotor	;wreg free
  1209                           
  1210                           ;main.c: 97:         LcLCD();
  1211  00165A  EC84  F00B         	call	_LcLCD	;wreg free
  1212  00165E  D7E7               	goto	l5749
  1213  001660                     __end_of_main:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _init_ports *****************
  1217 ;; Defined at:
  1218 ;;		line 26 in file "main.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1
  1232 ;;      Params:         0       0       0
  1233 ;;      Locals:         0       0       0
  1234 ;;      Temps:          0       0       0
  1235 ;;      Totals:         0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 2
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text1
  1247  001A24                     __ptext1:
  1248                           	callstack 0
  1249  001A24                     _init_ports:
  1250                           	callstack 28
  1251                           
  1252                           ;incstack = 0
  1253  001A24  0E03               	movlw	3
  1254  001A26  6E92               	movwf	146,c	;volatile
  1255  001A28  0EE0               	movlw	224
  1256  001A2A  6E93               	movwf	147,c	;volatile
  1257  001A2C  968A               	bcf	138,3,c	;volatile
  1258  001A2E  908A               	bcf	138,0,c	;volatile
  1259                           
  1260                           ;main.c: 47:     TRISC = 0xC0;
  1261  001A30  0EC0               	movlw	192
  1262  001A32  6E94               	movwf	148,c	;volatile
  1263                           
  1264                           ;main.c: 57:     TRISD = 0x8F;
  1265  001A34  0E8F               	movlw	143
  1266  001A36  6E95               	movwf	149,c	;volatile
  1267                           
  1268                           ;main.c: 58:     LATD = 0x00;
  1269  001A38  6A8C               	clrf	140,c	;volatile
  1270  001A3A  0012               	return		;funcret
  1271  001A3C                     __end_of_init_ports:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _init_eusart *****************
  1275 ;; Defined at:
  1276 ;;		line 60 in file "main.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1
  1290 ;;      Params:         0       0       0
  1291 ;;      Locals:         0       0       0
  1292 ;;      Temps:          0       0       0
  1293 ;;      Totals:         0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 2
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text2
  1305  001A3C                     __ptext2:
  1306                           	callstack 0
  1307  001A3C                     _init_eusart:
  1308                           	callstack 28
  1309                           
  1310                           ;main.c: 61:     TXSTA = 0x24;
  1311                           
  1312                           ;incstack = 0
  1313  001A3C  0E24               	movlw	36
  1314  001A3E  6EAC               	movwf	172,c	;volatile
  1315                           
  1316                           ;main.c: 62:     RCSTA = 0x90;
  1317  001A40  0E90               	movlw	144
  1318  001A42  6EAB               	movwf	171,c	;volatile
  1319                           
  1320                           ;main.c: 63:     BAUDCON = 0x08;
  1321  001A44  0E08               	movlw	8
  1322  001A46  6EB8               	movwf	184,c	;volatile
  1323                           
  1324                           ;main.c: 64:     SPBRGH = 0x04;
  1325  001A48  0E04               	movlw	4
  1326  001A4A  6EB0               	movwf	176,c	;volatile
  1327                           
  1328                           ;main.c: 65:     SPBRG = 0x10;
  1329  001A4C  0E10               	movlw	16
  1330  001A4E  6EAF               	movwf	175,c	;volatile
  1331  001A50  0C10               	retlw	16	;funcret
  1332  001A52                     __end_of_init_eusart:
  1333                           	callstack 0
  1334                           
  1335 ;; *************** function _UMotorUsuaris *****************
  1336 ;; Defined at:
  1337 ;;		line 48 in file "UUsuaris.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1
  1351 ;;      Params:         0       0       0
  1352 ;;      Locals:         0       0       0
  1353 ;;      Temps:          2       0       0
  1354 ;;      Totals:         2       0       0
  1355 ;;Total ram usage:        2 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 3
  1358 ;; This function calls:
  1359 ;;		___wmul
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text3
  1366  000F7C                     __ptext3:
  1367                           	callstack 0
  1368  000F7C                     _UMotorUsuaris:
  1369                           	callstack 27
  1370                           
  1371                           ;UUsuaris.c: 49:     static char state = 0;;UUsuaris.c: 50:     switch(state) {
  1372                           
  1373                           ;incstack = 0
  1374  000F7C  D041               	goto	l4595
  1375  000F7E                     l983:
  1376                           
  1377                           ;UUsuaris.c: 52:    if (createUser != 0 && numUsuaris >19) {
  1378  000F7E  A078               	btfss	(_createUser/(0+8))^0,_createUser& (0+7),c
  1379  000F80  D005               	goto	l984
  1380  000F82  0E13               	movlw	19
  1381  000F84  640D               	cpfsgt	_numUsuaris^0,c
  1382  000F86  D002               	goto	l984
  1383                           
  1384                           ;UUsuaris.c: 53:     createUser = 0;
  1385  000F88  9078               	bcf	(_createUser/(0+8))^0,_createUser& (0+7),c
  1386                           
  1387                           ;UUsuaris.c: 54:    }
  1388  000F8A  0C13               	retlw	19
  1389  000F8C                     l984:
  1390  000F8C  A078               	btfss	(_createUser/(0+8))^0,_createUser& (0+7),c
  1391  000F8E  D005               	goto	l4573
  1392  000F90  0E14               	movlw	20
  1393  000F92  600D               	cpfslt	_numUsuaris^0,c
  1394  000F94  D002               	goto	l4573
  1395                           
  1396                           ;UUsuaris.c: 56:     state++;
  1397  000F96  2A0C               	incf	UMotorUsuaris@state^0,f,c
  1398                           
  1399                           ;UUsuaris.c: 57:    }
  1400  000F98  0C14               	retlw	20
  1401  000F9A                     l4573:
  1402  000F9A  BE42               	btfsc	_delUser^0,7,c
  1403  000F9C  0012               	return	
  1404                           
  1405                           ;UUsuaris.c: 59:     usuaris[delUser].username[0] = '\0';
  1406  000F9E  D855               	call	PL52	;call to abstracted procedure
  1407  000FA0  6ED9               	movwf	fsr2l,c
  1408  000FA2  0E01               	movlw	high _usuaris
  1409  000FA4  20F4               	addwfc	prodh,w,c
  1410  000FA6  6EDA               	movwf	fsr2h,c
  1411  000FA8  6ADF               	clrf	indf2,c
  1412                           
  1413                           ;UUsuaris.c: 60:     usuaris[delUser].highScore = 0;
  1414  000FAA  5042               	movf	_delUser^0,w,c
  1415  000FAC  D83F               	call	PL26	;call to abstracted procedure
  1416  000FAE  6ADF               	clrf	indf2,c
  1417                           
  1418                           ;UUsuaris.c: 61:     state = 2;
  1419  000FB0  0E02               	movlw	2
  1420  000FB2  6E0C               	movwf	UMotorUsuaris@state^0,c
  1421                           
  1422                           ;UUsuaris.c: 63:   break;
  1423  000FB4  0C02               	retlw	2
  1424  000FB6                     l990:
  1425                           
  1426                           ;UUsuaris.c: 65:    if (createUser == 0) {
  1427  000FB6  A078               	btfss	(_createUser/(0+8))^0,_createUser& (0+7),c
  1428                           
  1429                           ;UUsuaris.c: 66:     state--;
  1430  000FB8  060C               	decf	UMotorUsuaris@state^0,f,c
  1431  000FBA  0012               	return	
  1432  000FBC                     l4581:
  1433                           
  1434                           ;UUsuaris.c: 70:    if (usuaris[delUser+1].username[0] != '\0' && delUser < 20) {
  1435  000FBC  D82E               	call	PL22	;call to abstracted procedure
  1436  000FBE  ECB2  F00C         	call	___wmul	;wreg free
  1437  000FC2  D83C               	call	PL38	;call to abstracted procedure
  1438  000FC4  50DF               	movf	indf2,w,c
  1439  000FC6  E014               	bz	l4589
  1440  000FC8  5042               	movf	_delUser^0,w,c
  1441  000FCA  0A80               	xorlw	128
  1442  000FCC  0F6C               	addlw	-148
  1443  000FCE  E210               	bc	l4589
  1444                           
  1445                           ;UUsuaris.c: 71:     usuaris[delUser] = usuaris[delUser+1];
  1446  000FD0  D824               	call	PL22	;call to abstracted procedure
  1447  000FD2  ECB2  F00C         	call	___wmul	;wreg free
  1448  000FD6  D832               	call	PL38	;call to abstracted procedure
  1449  000FD8  D838               	call	PL52	;call to abstracted procedure
  1450  000FDA  6EE1               	movwf	fsr1l,c
  1451  000FDC  0E01               	movlw	high _usuaris
  1452  000FDE  20F4               	addwfc	prodh,w,c
  1453  000FE0  6EE2               	movwf	fsr1h,c
  1454  000FE2  0E0B               	movlw	11
  1455  000FE4                     u4071:
  1456  000FE4  CFDB FFE3          	movff	plusw2,plusw1
  1457  000FE8  06E8               	decf	wreg,f,c
  1458  000FEA  E2FC               	bc	u4071
  1459                           
  1460                           ;UUsuaris.c: 72:     delUser++;
  1461  000FEC  2A42               	incf	_delUser^0,f,c
  1462                           
  1463                           ;UUsuaris.c: 73:    }
  1464  000FEE  0012               	return	
  1465  000FF0                     l4589:
  1466  000FF0  5042               	movf	_delUser^0,w,c
  1467  000FF2  0A80               	xorlw	128
  1468  000FF4  0F6C               	addlw	-148
  1469  000FF6  A0D8               	btfss	status,0,c
  1470  000FF8  0012               	return	
  1471                           
  1472                           ;UUsuaris.c: 75:     delUser = -1;
  1473  000FFA  6842               	setf	_delUser^0,c
  1474                           
  1475                           ;UUsuaris.c: 76:     state = 0;
  1476  000FFC  6A0C               	clrf	UMotorUsuaris@state^0,c
  1477  000FFE  0012               	return	
  1478  001000                     l4595:
  1479  001000  500C               	movf	UMotorUsuaris@state^0,w,c
  1480  001002  6E66               	movwf	??_UMotorUsuaris^0,c
  1481  001004  6A67               	clrf	(??_UMotorUsuaris+1)^0,c
  1482                           
  1483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1484                           ; Switch size 1, requested type "space"
  1485                           ; Number of cases is 1, Range of values is 0 to 0
  1486                           ; switch strategies available:
  1487                           ; Name         Instructions Cycles
  1488                           ; simple_byte            4     3 (average)
  1489                           ;	Chosen strategy is simple_byte
  1490  001006  5067               	movf	(??_UMotorUsuaris+1)^0,w,c
  1491  001008  A4D8               	btfss	status,2,c
  1492  00100A  0012               	return	
  1493                           
  1494                           ; Switch size 1, requested type "space"
  1495                           ; Number of cases is 3, Range of values is 0 to 2
  1496                           ; switch strategies available:
  1497                           ; Name         Instructions Cycles
  1498                           ; simple_byte           10     6 (average)
  1499                           ;	Chosen strategy is simple_byte
  1500  00100C  5066               	movf	??_UMotorUsuaris^0,w,c
  1501  00100E  E0B7               	bz	l983
  1502  001010  0A01               	xorlw	1	; case 1
  1503  001012  E0D1               	bz	l990
  1504  001014  0A03               	xorlw	3	; case 2
  1505  001016  E0D2               	bz	l4581
  1506  001018  0012               	return		;funcret
  1507  00101A                     __end_of_UMotorUsuaris:
  1508                           	callstack 0
  1509  00101A                     PL22:
  1510                           	callstack 27
  1511  00101A  5042               	movf	_delUser^0,w,c
  1512  00101C  6E60               	movwf	___wmul@multiplier^0,c
  1513  00101E  6A61               	clrf	(___wmul@multiplier+1)^0,c
  1514  001020  BE60               	btfsc	___wmul@multiplier^0,7,c
  1515  001022  0661               	decf	(___wmul@multiplier+1)^0,f,c
  1516  001024  6A63               	clrf	(___wmul@multiplicand+1)^0,c
  1517  001026  0E0C               	movlw	12
  1518  001028  6E62               	movwf	___wmul@multiplicand^0,c
  1519  00102A  0C0C               	retlw	12
  1520  00102C                     __end_ofPL22:
  1521                           	callstack 0
  1522  00102C                     PL26:
  1523                           	callstack 27
  1524  00102C  0D0C               	mullw	12
  1525  00102E  0E0B               	movlw	low (_usuaris+11)
  1526  001030  24F3               	addwf	243,w,c
  1527  001032  6ED9               	movwf	fsr2l,c
  1528  001034  0E01               	movlw	high (_usuaris+11)
  1529  001036  20F4               	addwfc	prodh,w,c
  1530  001038  6EDA               	movwf	fsr2h,c
  1531  00103A  0012               	return	
  1532  00103C                     __end_ofPL26:
  1533                           	callstack 0
  1534  00103C                     PL38:
  1535                           	callstack 27
  1536  00103C  0E0C               	movlw	low (_usuaris+12)
  1537  00103E  2460               	addwf	?___wmul^0,w,c
  1538  001040  6ED9               	movwf	fsr2l,c
  1539  001042  0E01               	movlw	high (_usuaris+12)
  1540  001044  2061               	addwfc	(?___wmul+1)^0,w,c
  1541  001046  6EDA               	movwf	fsr2h,c
  1542  001048  0012               	return	
  1543  00104A                     __end_ofPL38:
  1544                           	callstack 0
  1545  00104A                     PL52:
  1546                           	callstack 27
  1547  00104A  5042               	movf	_delUser^0,w,c
  1548  00104C  0D0C               	mullw	12
  1549  00104E  0E00               	movlw	low _usuaris
  1550  001050  24F3               	addwf	243,w,c
  1551  001052  0012               	return	
  1552  001054                     __end_ofPL52:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function ___wmul *****************
  1556 ;; Defined at:
  1557 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  multiplier      2    5[COMRAM] unsigned int 
  1560 ;;  multiplicand    2    7[COMRAM] unsigned int 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  product         2    9[COMRAM] unsigned int 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  2    5[COMRAM] unsigned int 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0, prodl, prodh
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1
  1572 ;;      Params:         4       0       0
  1573 ;;      Locals:         2       0       0
  1574 ;;      Temps:          0       0       0
  1575 ;;      Totals:         6       0       0
  1576 ;;Total ram usage:        6 bytes
  1577 ;; Hardware stack levels used: 1
  1578 ;; Hardware stack levels required when called: 2
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_UMotorUsuaris
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text4
  1587  001964                     __ptext4:
  1588                           	callstack 0
  1589  001964                     ___wmul:
  1590                           	callstack 27
  1591                           
  1592                           ;incstack = 0
  1593  001964  5060               	movf	___wmul@multiplier^0,w,c
  1594  001966  0262               	mulwf	___wmul@multiplicand^0,c
  1595  001968  CFF3 F064          	movff	prodl,___wmul@product
  1596  00196C  CFF4 F065          	movff	prodh,___wmul@product+1
  1597  001970  5060               	movf	___wmul@multiplier^0,w,c
  1598  001972  0263               	mulwf	(___wmul@multiplicand+1)^0,c
  1599  001974  50F3               	movf	243,w,c
  1600  001976  2665               	addwf	(___wmul@product+1)^0,f,c
  1601  001978  5061               	movf	(___wmul@multiplier+1)^0,w,c
  1602  00197A  0262               	mulwf	___wmul@multiplicand^0,c
  1603  00197C  50F3               	movf	243,w,c
  1604  00197E  2665               	addwf	(___wmul@product+1)^0,f,c
  1605  001980  C064  F060         	movff	___wmul@product,?___wmul
  1606  001984  C065  F061         	movff	___wmul@product+1,?___wmul+1
  1607  001988  0012               	return		;funcret
  1608  00198A                     __end_of___wmul:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function _TiInitTimer *****************
  1612 ;; Defined at:
  1613 ;;		line 18 in file "TiTTimer.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1
  1627 ;;      Params:         0       0       0
  1628 ;;      Locals:         0       0       0
  1629 ;;      Temps:          0       0       0
  1630 ;;      Totals:         0       0       0
  1631 ;;Total ram usage:        0 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; Hardware stack levels required when called: 2
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text5
  1642  0018EC                     __ptext5:
  1643                           	callstack 0
  1644  0018EC                     _TiInitTimer:
  1645                           	callstack 28
  1646                           
  1647                           ;TiTTimer.c: 20:     RCONbits.IPEN = 0;
  1648                           
  1649                           ;incstack = 0
  1650  0018EC  9ED0               	bcf	208,7,c	;volatile
  1651                           
  1652                           ;TiTTimer.c: 21:     INTCONbits.GIE_GIEH = 1;
  1653  0018EE  8EF2               	bsf	242,7,c	;volatile
  1654                           
  1655                           ;TiTTimer.c: 22:     INTCONbits.PEIE_GIEL = 1;
  1656  0018F0  8CF2               	bsf	242,6,c	;volatile
  1657                           
  1658                           ;TiTTimer.c: 23:     INTCONbits.TMR0IE = 1;
  1659  0018F2  8AF2               	bsf	242,5,c	;volatile
  1660                           
  1661                           ;TiTTimer.c: 24:     INTCONbits.TMR0IF = 0;
  1662  0018F4  94F2               	bcf	242,2,c	;volatile
  1663                           
  1664                           ;TiTTimer.c: 25:     T0CON = 199;
  1665  0018F6  0EC7               	movlw	199
  1666  0018F8  6ED5               	movwf	213,c	;volatile
  1667                           
  1668                           ;TiTTimer.c: 27:     TMR0H = 0;
  1669  0018FA  6AD7               	clrf	215,c	;volatile
  1670                           
  1671                           ;TiTTimer.c: 28:     TMR0L = 236;
  1672  0018FC  0EEC               	movlw	236
  1673  0018FE  6ED6               	movwf	214,c	;volatile
  1674                           
  1675                           ;TiTTimer.c: 29:     T0CONbits.TMR0ON = 1;
  1676  001900  8ED5               	bsf	213,7,c	;volatile
  1677                           
  1678                           ;TiTTimer.c: 31:     for (counter=0;counter<8;counter++) {
  1679  001902  6A2A               	clrf	_counter^0,c
  1680  001904                     l4239:
  1681  001904  0E07               	movlw	7
  1682  001906  642A               	cpfsgt	_counter^0,c
  1683  001908  D001               	goto	l4243
  1684  00190A  0C07               	retlw	7
  1685  00190C                     l4243:
  1686                           
  1687                           ;TiTTimer.c: 32:  s_Timers[counter].b_busy=0;
  1688  00190C  EC6F  F00C         	call	PL16	;call to abstracted procedure
  1689  001910  6ADF               	clrf	indf2,c
  1690                           
  1691                           ;TiTTimer.c: 33:     }
  1692  001912  2A2A               	incf	_counter^0,f,c
  1693  001914  D7F7               	goto	l4239
  1694  001916                     __end_of_TiInitTimer:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _TeTeclat *****************
  1698 ;; Defined at:
  1699 ;;		line 23 in file "TeTeclat.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1
  1713 ;;      Params:         0       0       0
  1714 ;;      Locals:         0       0       0
  1715 ;;      Temps:          3       0       0
  1716 ;;      Totals:         3       0       0
  1717 ;;Total ram usage:        3 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 3
  1720 ;; This function calls:
  1721 ;;		_JnovaTecla
  1722 ;;		_MsetNovaTecla
  1723 ;;		_SsetNovaTecla
  1724 ;;		_TiGetTics
  1725 ;;		_TiResetTics
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text6
  1732  000E4E                     __ptext6:
  1733                           	callstack 0
  1734  000E4E                     _TeTeclat:
  1735                           	callstack 27
  1736                           
  1737                           ;TeTeclat.c: 24:  static char state = 0;;TeTeclat.c: 25:     static char cols=0;;TeTecla
      +                          t.c: 26:     static char files = 0;;TeTeclat.c: 27:     files = PORTDbits.RD0 + PORTDbit
      +                          s.RD1*2 + PORTDbits.RD2*3 + PORTDbits.RD3*4;
  1738                           
  1739                           ;incstack = 0
  1740  000E4E  A083               	btfss	131,0,c	;volatile
  1741  000E50  D003               	goto	u5610
  1742  000E52  6A67               	clrf	??_TeTeclat^0,c
  1743  000E54  2A67               	incf	??_TeTeclat^0,f,c
  1744  000E56  D001               	goto	u5618
  1745  000E58                     u5610:
  1746  000E58  6A67               	clrf	??_TeTeclat^0,c
  1747  000E5A                     u5618:
  1748  000E5A  0E01               	movlw	1
  1749  000E5C  A283               	btfss	131,1,c	;volatile
  1750  000E5E  0E00               	movlw	0
  1751  000E60  0D02               	mullw	2
  1752  000E62  CFF3 F068          	movff	prodl,??_TeTeclat+1
  1753  000E66  0E01               	movlw	1
  1754  000E68  A483               	btfss	131,2,c	;volatile
  1755  000E6A  0E00               	movlw	0
  1756  000E6C  0D03               	mullw	3
  1757  000E6E  CFF3 F069          	movff	prodl,??_TeTeclat+2
  1758  000E72  0E01               	movlw	1
  1759  000E74  A683               	btfss	131,3,c	;volatile
  1760  000E76  0E00               	movlw	0
  1761  000E78  0D04               	mullw	4
  1762  000E7A  50F3               	movf	243,w,c
  1763  000E7C  2469               	addwf	(??_TeTeclat+2)^0,w,c
  1764  000E7E  2468               	addwf	(??_TeTeclat+1)^0,w,c
  1765  000E80  2467               	addwf	??_TeTeclat^0,w,c
  1766  000E82  6E1E               	movwf	TeTeclat@files^0,c
  1767                           
  1768                           ;TeTeclat.c: 28:  switch(state) {
  1769  000E84  D05B               	goto	l5577
  1770  000E86                     l5503:
  1771                           
  1772                           ;TeTeclat.c: 30:    if (files==0) {
  1773  000E86  501E               	movf	TeTeclat@files^0,w,c
  1774  000E88  E106               	bnz	l5509
  1775                           
  1776                           ;TeTeclat.c: 31:     LATDbits.LD4=1;
  1777  000E8A  888C               	bsf	140,4,c	;volatile
  1778                           
  1779                           ;TeTeclat.c: 32:     LATDbits.LD5=0;
  1780  000E8C  9A8C               	bcf	140,5,c	;volatile
  1781                           
  1782                           ;TeTeclat.c: 33:     LATDbits.LD6=0;
  1783  000E8E  9C8C               	bcf	140,6,c	;volatile
  1784                           
  1785                           ;TeTeclat.c: 34:     cols=0;
  1786  000E90  6A1F               	clrf	TeTeclat@cols^0,c
  1787  000E92                     l5507:
  1788                           
  1789                           ;TeTeclat.c: 35:     state++;
  1790  000E92  2A20               	incf	TeTeclat@state^0,f,c
  1791                           
  1792                           ;TeTeclat.c: 36:    }
  1793  000E94  0012               	return	
  1794  000E96                     l5509:
  1795  000E96  501E               	movf	TeTeclat@files^0,w,c
  1796  000E98  B4D8               	btfsc	status,2,c
  1797  000E9A  0012               	return	
  1798                           
  1799                           ;TeTeclat.c: 38:     TiResetTics(tiTeclat);
  1800  000E9C  5021               	movf	_tiTeclat^0,w,c
  1801  000E9E  ECF7  F00C         	call	_TiResetTics
  1802  000EA2                     l5513:
  1803                           
  1804                           ;TeTeclat.c: 39:     state = 3;
  1805  000EA2  0E03               	movlw	3
  1806  000EA4  6E20               	movwf	TeTeclat@state^0,c
  1807  000EA6  0C03               	retlw	3
  1808  000EA8                     l5515:
  1809                           
  1810                           ;TeTeclat.c: 43:    if (files==0) {
  1811  000EA8  501E               	movf	TeTeclat@files^0,w,c
  1812  000EAA  E106               	bnz	l5523
  1813                           
  1814                           ;TeTeclat.c: 44:     LATDbits.LD4=0;
  1815  000EAC  988C               	bcf	140,4,c	;volatile
  1816                           
  1817                           ;TeTeclat.c: 45:     LATDbits.LD5=1;
  1818  000EAE  8A8C               	bsf	140,5,c	;volatile
  1819                           
  1820                           ;TeTeclat.c: 46:     LATDbits.LD6=0;
  1821  000EB0  9C8C               	bcf	140,6,c	;volatile
  1822                           
  1823                           ;TeTeclat.c: 47:     cols=1;
  1824  000EB2  0E01               	movlw	1
  1825  000EB4  6E1F               	movwf	TeTeclat@cols^0,c
  1826  000EB6  D7ED               	goto	l5507
  1827  000EB8                     l5523:
  1828  000EB8  501E               	movf	TeTeclat@files^0,w,c
  1829  000EBA  B4D8               	btfsc	status,2,c
  1830  000EBC  0012               	return	
  1831                           
  1832                           ;TeTeclat.c: 51:     TiResetTics(tiTeclat);
  1833  000EBE  5021               	movf	_tiTeclat^0,w,c
  1834  000EC0  ECF7  F00C         	call	_TiResetTics
  1835  000EC4  D7EE               	goto	l5513
  1836  000EC6                     l5529:
  1837                           
  1838                           ;TeTeclat.c: 56:    if (files==0) {
  1839  000EC6  501E               	movf	TeTeclat@files^0,w,c
  1840  000EC8  E107               	bnz	l5537
  1841                           
  1842                           ;TeTeclat.c: 57:     LATDbits.LD4=0;
  1843  000ECA  988C               	bcf	140,4,c	;volatile
  1844                           
  1845                           ;TeTeclat.c: 58:     LATDbits.LD5=0;
  1846  000ECC  9A8C               	bcf	140,5,c	;volatile
  1847                           
  1848                           ;TeTeclat.c: 59:     LATDbits.LD6=1;
  1849  000ECE  8C8C               	bsf	140,6,c	;volatile
  1850                           
  1851                           ;TeTeclat.c: 60:     cols=2;
  1852  000ED0  0E02               	movlw	2
  1853  000ED2  6E1F               	movwf	TeTeclat@cols^0,c
  1854  000ED4                     l5535:
  1855                           
  1856                           ;TeTeclat.c: 61:     state = 0;
  1857  000ED4  6A20               	clrf	TeTeclat@state^0,c
  1858                           
  1859                           ;TeTeclat.c: 62:    }
  1860  000ED6  0012               	return	
  1861  000ED8                     l5537:
  1862  000ED8  501E               	movf	TeTeclat@files^0,w,c
  1863  000EDA  B4D8               	btfsc	status,2,c
  1864  000EDC  0012               	return	
  1865                           
  1866                           ;TeTeclat.c: 64:     TiResetTics(tiTeclat);
  1867  000EDE  5021               	movf	_tiTeclat^0,w,c
  1868  000EE0  ECF7  F00C         	call	_TiResetTics
  1869  000EE4  D7D6               	goto	l5507
  1870  000EE6                     l5543:
  1871                           
  1872                           ;TeTeclat.c: 69:    if (TiGetTics(tiTeclat)>=0) {
  1873  000EE6  5021               	movf	_tiTeclat^0,w,c
  1874  000EE8  ECC5  F00C         	call	_TiGetTics
  1875  000EEC  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  1876  000EEE  0012               	return	
  1877  000EF0  D7D0               	goto	l5507
  1878  000EF2                     l5547:
  1879                           
  1880                           ;TeTeclat.c: 74:    if (files==0) {
  1881  000EF2  501E               	movf	TeTeclat@files^0,w,c
  1882  000EF4  E103               	bnz	l5551
  1883                           
  1884                           ;TeTeclat.c: 75:     state = 1;
  1885  000EF6  0E01               	movlw	1
  1886  000EF8  6E20               	movwf	TeTeclat@state^0,c
  1887                           
  1888                           ;TeTeclat.c: 76:    }
  1889  000EFA  0C01               	retlw	1
  1890  000EFC                     l5551:
  1891  000EFC  501E               	movf	TeTeclat@files^0,w,c
  1892  000EFE  B4D8               	btfsc	status,2,c
  1893  000F00  0012               	return	
  1894                           
  1895                           ;TeTeclat.c: 79:                 MsetNovaTecla(teclaPremuda[files-1][cols]);
  1896  000F02  D833               	call	PL14	;call to abstracted procedure
  1897  000F04  EC9A  F00D         	call	_MsetNovaTecla
  1898                           
  1899                           ;TeTeclat.c: 80:                 SsetNovaTecla(teclaPremuda[files-1][cols]);
  1900  000F08  D830               	call	PL14	;call to abstracted procedure
  1901  000F0A  EC96  F00D         	call	_SsetNovaTecla
  1902                           
  1903                           ;TeTeclat.c: 81:                 JnovaTecla(teclaPremuda[files-1][cols]);
  1904  000F0E  D82D               	call	PL14	;call to abstracted procedure
  1905  000F10  ECC6  F00D         	call	_JnovaTecla
  1906  000F14  D7BE               	goto	l5507
  1907  000F16                     l5557:
  1908                           
  1909                           ;TeTeclat.c: 86:    if (files==0) {
  1910  000F16  501E               	movf	TeTeclat@files^0,w,c
  1911  000F18  A4D8               	btfss	status,2,c
  1912  000F1A  0012               	return	
  1913                           
  1914                           ;TeTeclat.c: 87:     TiResetTics(tiTeclat);
  1915  000F1C  5021               	movf	_tiTeclat^0,w,c
  1916  000F1E  ECF7  F00C         	call	_TiResetTics
  1917  000F22  D7B7               	goto	l5507
  1918  000F24                     l5563:
  1919                           
  1920                           ;TeTeclat.c: 92:    if (TiGetTics(tiTeclat)>=0) {
  1921  000F24  5021               	movf	_tiTeclat^0,w,c
  1922  000F26  ECC5  F00C         	call	_TiGetTics
  1923  000F2A  D7E0               	goto	L1
  1924  000F2C                     l5567:
  1925                           
  1926                           ;TeTeclat.c: 97:    if (files!=0) {
  1927  000F2C  501E               	movf	TeTeclat@files^0,w,c
  1928  000F2E  E003               	bz	l5571
  1929                           
  1930                           ;TeTeclat.c: 98:     state = 5;
  1931  000F30  0E05               	movlw	5
  1932  000F32  6E20               	movwf	TeTeclat@state^0,c
  1933                           
  1934                           ;TeTeclat.c: 99:    }
  1935  000F34  0C05               	retlw	5
  1936  000F36                     l5571:
  1937  000F36  501E               	movf	TeTeclat@files^0,w,c
  1938  000F38  E0CD               	bz	l5535
  1939  000F3A  0012               	return	
  1940  000F3C                     l5577:
  1941  000F3C  5020               	movf	TeTeclat@state^0,w,c
  1942  000F3E  6E67               	movwf	??_TeTeclat^0,c
  1943  000F40  6A68               	clrf	(??_TeTeclat+1)^0,c
  1944                           
  1945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1946                           ; Switch size 1, requested type "space"
  1947                           ; Number of cases is 1, Range of values is 0 to 0
  1948                           ; switch strategies available:
  1949                           ; Name         Instructions Cycles
  1950                           ; simple_byte            4     3 (average)
  1951                           ;	Chosen strategy is simple_byte
  1952  000F42  5068               	movf	(??_TeTeclat+1)^0,w,c
  1953  000F44  A4D8               	btfss	status,2,c
  1954  000F46  0012               	return	
  1955                           
  1956                           ; Switch size 1, requested type "space"
  1957                           ; Number of cases is 8, Range of values is 0 to 7
  1958                           ; switch strategies available:
  1959                           ; Name         Instructions Cycles
  1960                           ; simple_byte           25    13 (average)
  1961                           ;	Chosen strategy is simple_byte
  1962  000F48  5067               	movf	??_TeTeclat^0,w,c
  1963  000F4A  E09D               	bz	l5503
  1964  000F4C  0A01               	xorlw	1	; case 1
  1965  000F4E  E0AC               	bz	l5515
  1966  000F50  0A03               	xorlw	3	; case 2
  1967  000F52  E0B9               	bz	l5529
  1968  000F54  0A01               	xorlw	1	; case 3
  1969  000F56  E0C7               	bz	l5543
  1970  000F58  0A07               	xorlw	7	; case 4
  1971  000F5A  E0CB               	bz	l5547
  1972  000F5C  0A01               	xorlw	1	; case 5
  1973  000F5E  E0DB               	bz	l5557
  1974  000F60  0A03               	xorlw	3	; case 6
  1975  000F62  E0E0               	bz	l5563
  1976  000F64  0A01               	xorlw	1	; case 7
  1977  000F66  E0E2               	bz	l5567
  1978  000F68  0012               	return		;funcret
  1979  000F6A                     __end_of_TeTeclat:
  1980                           	callstack 0
  1981  000F6A                     PL14:
  1982                           	callstack 27
  1983  000F6A  501E               	movf	TeTeclat@files^0,w,c
  1984  000F6C  0D03               	mullw	3
  1985  000F6E  50F3               	movf	243,w,c
  1986  000F70  0F9C               	addlw	low (_teclaPremuda+253)
  1987  000F72  241F               	addwf	TeTeclat@cols^0,w,c
  1988  000F74  6ED9               	movwf	fsr2l,c
  1989  000F76  6ADA               	clrf	fsr2h,c
  1990  000F78  50DF               	movf	indf2,w,c
  1991  000F7A  0012               	return	
  1992  000F7C                     __end_ofPL14:
  1993                           	callstack 0
  1994                           
  1995 ;; *************** function _SsetNovaTecla *****************
  1996 ;; Defined at:
  1997 ;;		line 109 in file "Ssms.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  tecla           1    wreg     unsigned char 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  tecla           1    5[COMRAM] unsigned char 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1
  2011 ;;      Params:         0       0       0
  2012 ;;      Locals:         1       0       0
  2013 ;;      Temps:          0       0       0
  2014 ;;      Totals:         1       0       0
  2015 ;;Total ram usage:        1 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 2
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_TeTeclat
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text7
  2026  001B2C                     __ptext7:
  2027                           	callstack 0
  2028  001B2C                     _SsetNovaTecla:
  2029                           	callstack 27
  2030                           
  2031                           ;incstack = 0
  2032                           ;SsetNovaTecla@tecla stored from wreg
  2033  001B2C  6E60               	movwf	SsetNovaTecla@tecla^0,c
  2034                           
  2035                           ;Ssms.c: 110:     novaTecla = tecla;
  2036  001B2E  C060  F045         	movff	SsetNovaTecla@tecla,_novaTecla
  2037  001B32  0012               	return		;funcret
  2038  001B34                     __end_of_SsetNovaTecla:
  2039                           	callstack 0
  2040                           
  2041 ;; *************** function _MsetNovaTecla *****************
  2042 ;; Defined at:
  2043 ;;		line 473 in file "MMenu.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  tecla           1    wreg     unsigned char 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  tecla           1    5[COMRAM] unsigned char 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1
  2057 ;;      Params:         0       0       0
  2058 ;;      Locals:         1       0       0
  2059 ;;      Temps:          0       0       0
  2060 ;;      Totals:         1       0       0
  2061 ;;Total ram usage:        1 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 2
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_TeTeclat
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text8
  2072  001B34                     __ptext8:
  2073                           	callstack 0
  2074  001B34                     _MsetNovaTecla:
  2075                           	callstack 27
  2076                           
  2077                           ;incstack = 0
  2078                           ;MsetNovaTecla@tecla stored from wreg
  2079  001B34  6E60               	movwf	MsetNovaTecla@tecla^0,c
  2080                           
  2081                           ;MMenu.c: 474:     NovaTecla = tecla;
  2082  001B36  C060  F04A         	movff	MsetNovaTecla@tecla,_NovaTecla
  2083  001B3A  0012               	return		;funcret
  2084  001B3C                     __end_of_MsetNovaTecla:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _TeInit *****************
  2088 ;; Defined at:
  2089 ;;		line 19 in file "TeTeclat.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1
  2103 ;;      Params:         0       0       0
  2104 ;;      Locals:         0       0       0
  2105 ;;      Temps:          0       0       0
  2106 ;;      Totals:         0       0       0
  2107 ;;Total ram usage:        0 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 3
  2110 ;; This function calls:
  2111 ;;		_TiGetTimer
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text9
  2118  001B3C                     __ptext9:
  2119                           	callstack 0
  2120  001B3C                     _TeInit:
  2121                           	callstack 27
  2122                           
  2123                           ;TeTeclat.c: 20:     tiTeclat=TiGetTimer();
  2124                           
  2125                           ;incstack = 0
  2126  001B3C  EC60  F00C         	call	_TiGetTimer	;wreg free
  2127  001B40  6E21               	movwf	_tiTeclat^0,c
  2128  001B42  0012               	return		;funcret
  2129  001B44                     __end_of_TeInit:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _Sinit *****************
  2133 ;; Defined at:
  2134 ;;		line 16 in file "Ssms.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1
  2148 ;;      Params:         0       0       0
  2149 ;;      Locals:         0       0       0
  2150 ;;      Temps:          0       0       0
  2151 ;;      Totals:         0       0       0
  2152 ;;Total ram usage:        0 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 3
  2155 ;; This function calls:
  2156 ;;		_TiGetTimer
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text10
  2163  001B44                     __ptext10:
  2164                           	callstack 0
  2165  001B44                     _Sinit:
  2166                           	callstack 27
  2167                           
  2168                           ;Ssms.c: 17:     timerSMS = TiGetTimer();
  2169                           
  2170                           ;incstack = 0
  2171  001B44  EC60  F00C         	call	_TiGetTimer	;wreg free
  2172  001B48  6E44               	movwf	_timerSMS^0,c
  2173  001B4A  0012               	return		;funcret
  2174  001B4C                     __end_of_Sinit:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _SMotor *****************
  2178 ;; Defined at:
  2179 ;;		line 20 in file "Ssms.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1
  2193 ;;      Params:         0       0       0
  2194 ;;      Locals:         0       0       0
  2195 ;;      Temps:          2       0       0
  2196 ;;      Totals:         2       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 3
  2200 ;; This function calls:
  2201 ;;		_MNovaLletra
  2202 ;;		_TiGetTics
  2203 ;;		_TiResetTics
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text11
  2210  000CD8                     __ptext11:
  2211                           	callstack 0
  2212  000CD8                     _SMotor:
  2213                           	callstack 27
  2214                           
  2215                           ;Ssms.c: 21:  static char state = 0;;Ssms.c: 22:  switch(state) {
  2216                           
  2217                           ;incstack = 0
  2218  000CD8  D098               	goto	l5713
  2219  000CDA                     l5585:
  2220                           
  2221                           ;Ssms.c: 24:    if (novaTecla != -1 && setSMSon == 1) {
  2222  000CDA  2845               	incf	_novaTecla^0,w,c
  2223  000CDC  E008               	bz	l5593
  2224  000CDE  A278               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2225  000CE0  D006               	goto	l5593
  2226                           
  2227                           ;Ssms.c: 25:     TiResetTics(timerSMS);
  2228  000CE2  5044               	movf	_timerSMS^0,w,c
  2229  000CE4  ECF7  F00C         	call	_TiResetTics
  2230                           
  2231                           ;Ssms.c: 26:     state = 3;
  2232  000CE8  0E03               	movlw	3
  2233  000CEA  6E10               	movwf	SMotor@state^0,c
  2234                           
  2235                           ;Ssms.c: 27:    }
  2236  000CEC  0C03               	retlw	3
  2237  000CEE                     l5593:
  2238  000CEE  2845               	incf	_novaTecla^0,w,c
  2239  000CF0  A4D8               	btfss	status,2,c
  2240  000CF2  0012               	return	
  2241  000CF4  5044               	movf	_timerSMS^0,w,c
  2242  000CF6  ECC5  F00C         	call	_TiGetTics
  2243  000CFA  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  2244  000CFC  0012               	return	
  2245  000CFE  D8A2               	call	PL56	;call to abstracted procedure
  2246  000D00  A0D8               	btfss	status,0,c
  2247  000D02  0012               	return	
  2248  000D04  2846               	incf	_lletraASCII^0,w,c
  2249  000D06  A4D8               	btfss	status,2,c
  2250  000D08  A278               	btfss	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  2251  000D0A  0012               	return	
  2252                           
  2253                           ;Ssms.c: 29:     MNovaLletra(lletraASCII);
  2254  000D0C  5046               	movf	_lletraASCII^0,w,c
  2255  000D0E  ECA6  F00D         	call	_MNovaLletra
  2256                           
  2257                           ;Ssms.c: 30:     lletraASCII = -1;
  2258  000D12  6846               	setf	_lletraASCII^0,c
  2259                           
  2260                           ;Ssms.c: 31:     ultimaTecla = -1;
  2261  000D14  6843               	setf	_ultimaTecla^0,c
  2262  000D16  0012               	return	
  2263  000D18                     l5607:
  2264                           
  2265                           ;Ssms.c: 35:    if (novaTecla == ultimaTecla && TiGetTics(timerSMS) < 1000) {
  2266  000D18  5043               	movf	_ultimaTecla^0,w,c
  2267  000D1A  1845               	xorwf	_novaTecla^0,w,c
  2268  000D1C  E10C               	bnz	l5615
  2269  000D1E  5044               	movf	_timerSMS^0,w,c
  2270  000D20  ECC5  F00C         	call	_TiGetTics
  2271  000D24  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  2272  000D26  D002               	goto	u5850
  2273  000D28  D88D               	call	PL56	;call to abstracted procedure
  2274  000D2A  E205               	bc	l5615
  2275  000D2C                     u5850:
  2276                           
  2277                           ;Ssms.c: 36:     novaTecla = -1;
  2278  000D2C  6845               	setf	_novaTecla^0,c
  2279                           
  2280                           ;Ssms.c: 37:     sumaPulsacions++;
  2281  000D2E  2A11               	incf	_sumaPulsacions^0,f,c
  2282                           
  2283                           ;Ssms.c: 38:     lletraASCII++;
  2284  000D30  2A46               	incf	_lletraASCII^0,f,c
  2285                           
  2286                           ;Ssms.c: 39:     state++;
  2287  000D32  2A10               	incf	SMotor@state^0,f,c
  2288                           
  2289                           ;Ssms.c: 40:    }
  2290  000D34  0012               	return	
  2291  000D36                     l5615:
  2292  000D36  2845               	incf	_novaTecla^0,w,c
  2293  000D38  B4D8               	btfsc	status,2,c
  2294  000D3A  0012               	return	
  2295  000D3C  5043               	movf	_ultimaTecla^0,w,c
  2296  000D3E  1845               	xorwf	_novaTecla^0,w,c
  2297  000D40  B4D8               	btfsc	status,2,c
  2298  000D42  0012               	return	
  2299                           
  2300                           ;Ssms.c: 42:     MNovaLletra(lletraASCII);
  2301  000D44  5046               	movf	_lletraASCII^0,w,c
  2302  000D46  ECA6  F00D         	call	_MNovaLletra
  2303                           
  2304                           ;Ssms.c: 43:     lletraASCII = lletraInici[novaTecla-2];
  2305  000D4A  5045               	movf	_novaTecla^0,w,c
  2306  000D4C  D875               	call	PL48	;call to abstracted procedure
  2307                           
  2308                           ;Ssms.c: 44:     ultimaTecla = novaTecla;
  2309  000D4E  C045  F043         	movff	_novaTecla,_ultimaTecla
  2310                           
  2311                           ;Ssms.c: 45:     sumaPulsacions = 0;
  2312  000D52  6A11               	clrf	_sumaPulsacions^0,c
  2313                           
  2314                           ;Ssms.c: 46:     novaTecla = -1;
  2315  000D54  6845               	setf	_novaTecla^0,c
  2316                           
  2317                           ;Ssms.c: 47:     state--;
  2318  000D56  0610               	decf	SMotor@state^0,f,c
  2319  000D58  0012               	return	
  2320  000D5A                     l5631:
  2321                           
  2322                           ;Ssms.c: 51:    if (ultimaTecla != 7 && ultimaTecla != 9) {
  2323  000D5A  0E07               	movlw	7
  2324  000D5C  1843               	xorwf	_ultimaTecla^0,w,c
  2325  000D5E  E006               	bz	l5637
  2326  000D60  0E09               	movlw	9
  2327  000D62  1843               	xorwf	_ultimaTecla^0,w,c
  2328  000D64  E003               	bz	l5637
  2329                           
  2330                           ;Ssms.c: 52:     state = 5;
  2331  000D66  0E05               	movlw	5
  2332  000D68  6E10               	movwf	SMotor@state^0,c
  2333                           
  2334                           ;Ssms.c: 53:    }
  2335  000D6A  0C05               	retlw	5
  2336  000D6C                     l5637:
  2337  000D6C  0E07               	movlw	7
  2338  000D6E  1843               	xorwf	_ultimaTecla^0,w,c
  2339  000D70  E004               	bz	u5910
  2340  000D72  0E09               	movlw	9
  2341  000D74  1843               	xorwf	_ultimaTecla^0,w,c
  2342  000D76  A4D8               	btfss	status,2,c
  2343  000D78  0012               	return	
  2344  000D7A                     u5910:
  2345                           
  2346                           ;Ssms.c: 55:     state = 6;
  2347  000D7A  0E06               	movlw	6
  2348  000D7C  6E10               	movwf	SMotor@state^0,c
  2349  000D7E  0C06               	retlw	6
  2350  000D80                     l5643:
  2351                           
  2352                           ;Ssms.c: 59:    if (novaTecla > 1 && novaTecla < 10) {
  2353  000D80  5045               	movf	_novaTecla^0,w,c
  2354  000D82  0A80               	xorlw	128
  2355  000D84  0F7E               	addlw	-130
  2356  000D86  E307               	bnc	l5649
  2357  000D88  5045               	movf	_novaTecla^0,w,c
  2358  000D8A  0A80               	xorlw	128
  2359  000D8C  0F76               	addlw	-138
  2360  000D8E  E203               	bc	l5649
  2361                           
  2362                           ;Ssms.c: 60:     state = 1;
  2363  000D90  0E01               	movlw	1
  2364  000D92  6E10               	movwf	SMotor@state^0,c
  2365                           
  2366                           ;Ssms.c: 61:    }
  2367  000D94  0C01               	retlw	1
  2368  000D96                     l5649:
  2369  000D96  5045               	movf	_novaTecla^0,w,c
  2370  000D98  0A80               	xorlw	128
  2371  000D9A  0F7E               	addlw	-130
  2372  000D9C  E209               	bc	l5659
  2373  000D9E  2846               	incf	_lletraASCII^0,w,c
  2374  000DA0  E107               	bnz	l5659
  2375                           
  2376                           ;Ssms.c: 63:     MNovaLletra(novaTecla+48);
  2377  000DA2  5045               	movf	_novaTecla^0,w,c
  2378  000DA4  0F30               	addlw	48
  2379  000DA6  ECA6  F00D         	call	_MNovaLletra
  2380  000DAA                     l5655:
  2381                           
  2382                           ;Ssms.c: 64:     novaTecla = -1;
  2383  000DAA  6845               	setf	_novaTecla^0,c
  2384  000DAC                     l5657:
  2385                           
  2386                           ;Ssms.c: 65:     state = 0;
  2387  000DAC  6A10               	clrf	SMotor@state^0,c
  2388                           
  2389                           ;Ssms.c: 66:    }
  2390  000DAE  0012               	return	
  2391  000DB0                     l5659:
  2392  000DB0  5045               	movf	_novaTecla^0,w,c
  2393  000DB2  0A80               	xorlw	128
  2394  000DB4  0F7E               	addlw	-130
  2395  000DB6  B0D8               	btfsc	status,0,c
  2396  000DB8  0012               	return	
  2397  000DBA  2846               	incf	_lletraASCII^0,w,c
  2398  000DBC  B4D8               	btfsc	status,2,c
  2399  000DBE  0012               	return	
  2400                           
  2401                           ;Ssms.c: 68:     MNovaLletra(lletraASCII);
  2402  000DC0  5046               	movf	_lletraASCII^0,w,c
  2403  000DC2  ECA6  F00D         	call	_MNovaLletra
  2404                           
  2405                           ;Ssms.c: 69:     lletraASCII = -1;
  2406  000DC6  6846               	setf	_lletraASCII^0,c
  2407                           
  2408                           ;Ssms.c: 70:     state++;
  2409  000DC8  2A10               	incf	SMotor@state^0,f,c
  2410  000DCA  0012               	return	
  2411  000DCC                     l5669:
  2412                           
  2413                           ;Ssms.c: 74:    MNovaLletra(novaTecla+48);
  2414  000DCC  5045               	movf	_novaTecla^0,w,c
  2415  000DCE  0F30               	addlw	48
  2416  000DD0  ECA6  F00D         	call	_MNovaLletra
  2417  000DD4  D7EA               	goto	l5655
  2418  000DD6                     l5675:
  2419                           
  2420                           ;Ssms.c: 79:    if (sumaPulsacions == 4) {
  2421  000DD6  0E04               	movlw	4
  2422  000DD8  1811               	xorwf	_sumaPulsacions^0,w,c
  2423  000DDA  E104               	bnz	l5683
  2424  000DDC                     u5980:
  2425                           
  2426                           ;Ssms.c: 80:     lletraASCII = lletraInici[ultimaTecla-2];
  2427  000DDC  5043               	movf	_ultimaTecla^0,w,c
  2428  000DDE  D82C               	call	PL48	;call to abstracted procedure
  2429                           
  2430                           ;Ssms.c: 81:     sumaPulsacions = 0;
  2431  000DE0  6A11               	clrf	_sumaPulsacions^0,c
  2432  000DE2  D7E4               	goto	l5657
  2433  000DE4                     l5683:
  2434  000DE4  0E03               	movlw	3
  2435  000DE6  1811               	xorwf	_sumaPulsacions^0,w,c
  2436  000DE8  E104               	bnz	l5689
  2437  000DEA                     u5990:
  2438                           
  2439                           ;Ssms.c: 85:     lletraASCII = ultimaTecla+48;
  2440  000DEA  5043               	movf	_ultimaTecla^0,w,c
  2441  000DEC  0F30               	addlw	48
  2442  000DEE  6E46               	movwf	_lletraASCII^0,c
  2443  000DF0  D7DD               	goto	l5657
  2444  000DF2                     l5689:
  2445  000DF2  0E03               	movlw	3
  2446  000DF4  6011               	cpfslt	_sumaPulsacions^0,c
  2447  000DF6  0012               	return	
  2448  000DF8  D7D9               	goto	l5657
  2449  000DFA                     l5693:
  2450                           
  2451                           ;Ssms.c: 93:    if (sumaPulsacions == 4) {
  2452  000DFA  0E04               	movlw	4
  2453  000DFC  1811               	xorwf	_sumaPulsacions^0,w,c
  2454  000DFE  E0F5               	bz	u5990
  2455  000E00  0E05               	movlw	5
  2456  000E02  1811               	xorwf	_sumaPulsacions^0,w,c
  2457  000E04  E0EB               	bz	u5980
  2458  000E06  0E04               	movlw	4
  2459  000E08  D7F5               	goto	L2
  2460  000E0A                     l5713:
  2461  000E0A  5010               	movf	SMotor@state^0,w,c
  2462  000E0C  6E67               	movwf	??_SMotor^0,c
  2463  000E0E  6A68               	clrf	(??_SMotor+1)^0,c
  2464                           
  2465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2466                           ; Switch size 1, requested type "space"
  2467                           ; Number of cases is 1, Range of values is 0 to 0
  2468                           ; switch strategies available:
  2469                           ; Name         Instructions Cycles
  2470                           ; simple_byte            4     3 (average)
  2471                           ;	Chosen strategy is simple_byte
  2472  000E10  5068               	movf	(??_SMotor+1)^0,w,c
  2473  000E12  A4D8               	btfss	status,2,c
  2474  000E14  0012               	return	
  2475                           
  2476                           ; Switch size 1, requested type "space"
  2477                           ; Number of cases is 7, Range of values is 0 to 6
  2478                           ; switch strategies available:
  2479                           ; Name         Instructions Cycles
  2480                           ; simple_byte           22    12 (average)
  2481                           ;	Chosen strategy is simple_byte
  2482  000E16  5067               	movf	??_SMotor^0,w,c
  2483  000E18  E101 D75F          	bz	l5585
  2484  000E1C  0A01               	xorlw	1	; case 1
  2485  000E1E  E101 D77B          	bz	l5607
  2486  000E22  0A03               	xorlw	3	; case 2
  2487  000E24  E09A               	bz	l5631
  2488  000E26  0A01               	xorlw	1	; case 3
  2489  000E28  E0AB               	bz	l5643
  2490  000E2A  0A07               	xorlw	7	; case 4
  2491  000E2C  E0CF               	bz	l5669
  2492  000E2E  0A01               	xorlw	1	; case 5
  2493  000E30  E0D2               	bz	l5675
  2494  000E32  0A03               	xorlw	3	; case 6
  2495  000E34  E0E2               	bz	l5693
  2496  000E36  0012               	return		;funcret
  2497  000E38                     __end_of_SMotor:
  2498                           	callstack 0
  2499  000E38                     PL48:
  2500                           	callstack 27
  2501  000E38  0F33               	addlw	low (_lletraInici+254)
  2502  000E3A  6ED9               	movwf	fsr2l,c
  2503  000E3C  6ADA               	clrf	fsr2h,c
  2504  000E3E  50DF               	movf	indf2,w,c
  2505  000E40  6E46               	movwf	_lletraASCII^0,c
  2506  000E42  0012               	return	
  2507  000E44                     __end_ofPL48:
  2508                           	callstack 0
  2509  000E44                     PL56:
  2510                           	callstack 27
  2511  000E44  0EE8               	movlw	232
  2512  000E46  5C60               	subwf	?_TiGetTics^0,w,c
  2513  000E48  0E03               	movlw	3
  2514  000E4A  5861               	subwfb	(?_TiGetTics+1)^0,w,c
  2515  000E4C  0012               	return	
  2516  000E4E                     __end_ofPL56:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _MNovaLletra *****************
  2520 ;; Defined at:
  2521 ;;		line 477 in file "MMenu.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  lletra          1    wreg     unsigned char 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  lletra          1    5[COMRAM] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1
  2535 ;;      Params:         0       0       0
  2536 ;;      Locals:         1       0       0
  2537 ;;      Temps:          0       0       0
  2538 ;;      Totals:         1       0       0
  2539 ;;Total ram usage:        1 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 2
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_SMotor
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text12
  2550  001B4C                     __ptext12:
  2551                           	callstack 0
  2552  001B4C                     _MNovaLletra:
  2553                           	callstack 27
  2554                           
  2555                           ;incstack = 0
  2556                           ;MNovaLletra@lletra stored from wreg
  2557  001B4C  6E60               	movwf	MNovaLletra@lletra^0,c
  2558                           
  2559                           ;MMenu.c: 478:     novaLletra = lletra;
  2560  001B4E  C060  F049         	movff	MNovaLletra@lletra,_novaLletra
  2561  001B52  0012               	return		;funcret
  2562  001B54                     __end_of_MNovaLletra:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _SIOMotor *****************
  2566 ;; Defined at:
  2567 ;;		line 12 in file "SSIO.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1
  2581 ;;      Params:         0       0       0
  2582 ;;      Locals:         0       0       0
  2583 ;;      Temps:          2       0       0
  2584 ;;      Totals:         2       0       0
  2585 ;;Total ram usage:        2 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 6
  2588 ;; This function calls:
  2589 ;;		_CToAConverteix
  2590 ;;		_CToAHaAcabat
  2591 ;;		_CToAReset
  2592 ;;		_CToAobtenir
  2593 ;;		_LcClear
  2594 ;;		_LcGotoXY
  2595 ;;		_LcLliure
  2596 ;;		_LcNewString
  2597 ;;		_LcPutChar
  2598 ;;		_UchangeScore
  2599 ;;		_UgetScore
  2600 ;;		_UgetUserName
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text13
  2607  000B5E                     __ptext13:
  2608                           	callstack 0
  2609  000B5E                     _SIOMotor:
  2610                           	callstack 24
  2611                           
  2612                           ;SSIO.c: 13:  static char state = 0;;SSIO.c: 14:     switch(state) {
  2613                           
  2614                           ;incstack = 0
  2615  000B5E  D092               	goto	l5351
  2616  000B60                     l5271:
  2617                           
  2618                           ;SSIO.c: 16:    if (usuariActualSIO > -1) {
  2619  000B60  BE40               	btfsc	_usuariActualSIO^0,7,c
  2620  000B62  0012               	return	
  2621                           
  2622                           ;SSIO.c: 17:     userPtr = UgetUserName(usuariActualSIO);
  2623  000B64  5040               	movf	_usuariActualSIO^0,w,c
  2624  000B66  EC29  F00D         	call	_UgetUserName
  2625  000B6A  C060  F001         	movff	?_UgetUserName,_userPtr
  2626  000B6E  C061  F002         	movff	?_UgetUserName+1,_userPtr+1
  2627  000B72                     l5275:
  2628                           
  2629                           ;SSIO.c: 18:     state++;
  2630  000B72  2A08               	incf	SIOMotor@state^0,f,c
  2631  000B74  0012               	return	
  2632  000B76                     l1122:
  2633                           
  2634                           ;SSIO.c: 22:             if(TXSTAbits.TRMT){
  2635  000B76  A2AC               	btfss	172,1,c	;volatile
  2636  000B78  0012               	return	
  2637                           
  2638                           ;SSIO.c: 23:                 if (*userPtr == '\0') {
  2639  000B7A  D8A0               	call	PL44	;call to abstracted procedure
  2640  000B7C  E103               	bnz	l5283
  2641                           
  2642                           ;SSIO.c: 24:     TXREG = 13;
  2643  000B7E  0E0D               	movlw	13
  2644  000B80  6EAD               	movwf	173,c	;volatile
  2645  000B82  D7F7               	goto	l5275
  2646  000B84                     l5283:
  2647                           
  2648                           ;SSIO.c: 27:                     TXREG = *userPtr;
  2649  000B84  D89B               	call	PL44	;call to abstracted procedure
  2650  000B86  6EAD               	movwf	173,c	;volatile
  2651                           
  2652                           ;SSIO.c: 28:     userPtr++;
  2653  000B88  4A01               	infsnz	_userPtr^0,f,c
  2654  000B8A  2A02               	incf	(_userPtr+1)^0,f,c
  2655  000B8C  0012               	return	
  2656  000B8E                     l5287:
  2657                           
  2658                           ;SSIO.c: 33:    if (direccio != -1 && TXSTAbits.TRMT) {
  2659  000B8E  283F               	incf	_direccio^0,w,c
  2660  000B90  E006               	bz	l1127
  2661  000B92  A2AC               	btfss	172,1,c	;volatile
  2662  000B94  D004               	goto	l1127
  2663                           
  2664                           ;SSIO.c: 34:     TXREG = direccio;
  2665  000B96  C03F  FFAD         	movff	_direccio,4013	;volatile
  2666                           
  2667                           ;SSIO.c: 35:     direccio = -1;
  2668  000B9A  683F               	setf	_direccio^0,c
  2669                           
  2670                           ;SSIO.c: 36:    }
  2671  000B9C  0012               	return	
  2672  000B9E                     l1127:
  2673  000B9E  AA9E               	btfss	158,5,c	;volatile
  2674  000BA0  0012               	return	
  2675                           
  2676                           ;SSIO.c: 38:     LcGotoXY(12,1);
  2677  000BA2  D897               	call	PL74	;call to abstracted procedure
  2678  000BA4  ECD5  F009         	call	_LcGotoXY
  2679                           
  2680                           ;SSIO.c: 39:     rebut = RCREG;
  2681  000BA8  CFAE F009          	movff	4014,_rebut	;volatile
  2682                           
  2683                           ;SSIO.c: 40:     LcPutChar(RCREG);
  2684  000BAC  50AE               	movf	174,w,c	;volatile
  2685  000BAE  EC30  F00B         	call	_LcPutChar
  2686  000BB2  D7DF               	goto	l5275
  2687  000BB4                     l1130:
  2688                           
  2689                           ;SSIO.c: 45:             if(PIR1bits.RCIF){
  2690  000BB4  AA9E               	btfss	158,5,c	;volatile
  2691  000BB6  0012               	return	
  2692                           
  2693                           ;SSIO.c: 46:                 if(rebut != 'X'){
  2694  000BB8  0E58               	movlw	88
  2695  000BBA  1809               	xorwf	_rebut^0,w,c
  2696  000BBC  E009               	bz	l1132
  2697                           
  2698                           ;SSIO.c: 47:                     LcGotoXY(13,1);
  2699  000BBE  0E01               	movlw	1
  2700  000BC0  6E68               	movwf	LcGotoXY@Row^0,c
  2701  000BC2  0E0D               	movlw	13
  2702  000BC4  ECD5  F009         	call	_LcGotoXY
  2703                           
  2704                           ;SSIO.c: 48:                     LcPutChar(RCREG);
  2705  000BC8  50AE               	movf	174,w,c	;volatile
  2706  000BCA  EC30  F00B         	call	_LcPutChar
  2707  000BCE  D7D1               	goto	l5275
  2708  000BD0                     l1132:
  2709                           
  2710                           ;SSIO.c: 51:                     rebut = RCREG;
  2711  000BD0  CFAE F009          	movff	4014,_rebut	;volatile
  2712                           
  2713                           ;SSIO.c: 53:                     if(rebut > UgetScore(usuariActualSIO)){
  2714  000BD4  5040               	movf	_usuariActualSIO^0,w,c
  2715  000BD6  EC4C  F00D         	call	_UgetScore
  2716  000BDA  6E71               	movwf	??_SIOMotor^0,c
  2717  000BDC  5009               	movf	_rebut^0,w,c
  2718  000BDE  5C71               	subwf	??_SIOMotor^0,w,c
  2719  000BE0  E203               	bc	l1134
  2720                           
  2721                           ;SSIO.c: 54:                         UchangeScore(rebut);
  2722  000BE2  5009               	movf	_rebut^0,w,c
  2723  000BE4  ECAA  F00D         	call	_UchangeScore
  2724  000BE8                     l1134:
  2725                           
  2726                           ;SSIO.c: 56:                     CToAReset();
  2727  000BE8  EC82  F00D         	call	_CToAReset	;wreg free
  2728                           
  2729                           ;SSIO.c: 57:                     CToAConverteix(rebut);
  2730  000BEC  5009               	movf	_rebut^0,w,c
  2731  000BEE  ECAE  F00D         	call	_CToAConverteix
  2732                           
  2733                           ;SSIO.c: 58:                     state = 5;
  2734  000BF2  0E05               	movlw	5
  2735  000BF4  6E08               	movwf	SIOMotor@state^0,c
  2736  000BF6  0C05               	retlw	5
  2737  000BF8                     l1135:
  2738                           
  2739                           ;SSIO.c: 63:    if (PIR1bits.RCIF) {
  2740  000BF8  AA9E               	btfss	158,5,c	;volatile
  2741  000BFA  0012               	return	
  2742                           
  2743                           ;SSIO.c: 64:     LcGotoXY(14,1);
  2744  000BFC  0E01               	movlw	1
  2745  000BFE  6E68               	movwf	LcGotoXY@Row^0,c
  2746  000C00  0E0E               	movlw	14
  2747  000C02  ECD5  F009         	call	_LcGotoXY
  2748                           
  2749                           ;SSIO.c: 65:     LcPutChar(RCREG);
  2750  000C06  50AE               	movf	174,w,c	;volatile
  2751  000C08  EC30  F00B         	call	_LcPutChar
  2752                           
  2753                           ;SSIO.c: 66:     state = 2;
  2754  000C0C  0E02               	movlw	2
  2755  000C0E  6E08               	movwf	SIOMotor@state^0,c
  2756  000C10  0C02               	retlw	2
  2757  000C12                     l5315:
  2758                           
  2759                           ;SSIO.c: 70:    if (LcLliure() && CToAHaAcabat() == 250) {
  2760  000C12  EC7C  F00D         	call	_LcLliure	;wreg free
  2761  000C16  A0D8               	btfss	status,0,c
  2762  000C18  0012               	return	
  2763  000C1A  ECD2  F00D         	call	_CToAHaAcabat	;wreg free
  2764  000C1E  0AFA               	xorlw	250
  2765  000C20  A4D8               	btfss	status,2,c
  2766  000C22  0012               	return	
  2767                           
  2768                           ;SSIO.c: 71:     LcClear();
  2769  000C24  EC05  F00D         	call	_LcClear	;wreg free
  2770                           
  2771                           ;SSIO.c: 72:     LcGotoXY(7,0);
  2772  000C28  6A68               	clrf	LcGotoXY@Row^0,c
  2773  000C2A  0E07               	movlw	7
  2774  000C2C  ECD5  F009         	call	_LcGotoXY
  2775                           
  2776                           ;SSIO.c: 73:     LcNewString(CToAobtenir());
  2777  000C30  ECD0  F00D         	call	_CToAobtenir	;wreg free
  2778  000C34  D849               	call	PL50	;call to abstracted procedure
  2779  000C36  EC76  F00D         	call	_LcNewString	;wreg free
  2780  000C3A  D79B               	goto	l5275
  2781  000C3C                     l5325:
  2782                           
  2783                           ;SSIO.c: 78:    if (LcLliure()) {
  2784  000C3C  EC7C  F00D         	call	_LcLliure	;wreg free
  2785  000C40  A0D8               	btfss	status,0,c
  2786  000C42  0012               	return	
  2787                           
  2788                           ;SSIO.c: 79:     CToAReset();
  2789  000C44  EC82  F00D         	call	_CToAReset	;wreg free
  2790                           
  2791                           ;SSIO.c: 80:     CToAConverteix(UgetScore(usuariActualSIO));
  2792  000C48  5040               	movf	_usuariActualSIO^0,w,c
  2793  000C4A  EC4C  F00D         	call	_UgetScore
  2794  000C4E  ECAE  F00D         	call	_CToAConverteix
  2795  000C52  D78F               	goto	l5275
  2796  000C54                     l5333:
  2797                           
  2798                           ;SSIO.c: 85:    if (LcLliure()) {
  2799  000C54  EC7C  F00D         	call	_LcLliure	;wreg free
  2800  000C58  B0D8               	btfsc	status,0,c
  2801                           
  2802                           ;SSIO.c: 86:     state = 0;
  2803  000C5A  6A08               	clrf	SIOMotor@state^0,c
  2804  000C5C  0012               	return	
  2805  000C5E                     l5337:
  2806                           
  2807                           ;SSIO.c: 90:    if (LcLliure() && CToAHaAcabat() == 250) {
  2808  000C5E  EC7C  F00D         	call	_LcLliure	;wreg free
  2809  000C62  A0D8               	btfss	status,0,c
  2810  000C64  0012               	return	
  2811  000C66  ECD2  F00D         	call	_CToAHaAcabat	;wreg free
  2812  000C6A  0AFA               	xorlw	250
  2813  000C6C  A4D8               	btfss	status,2,c
  2814  000C6E  0012               	return	
  2815                           
  2816                           ;SSIO.c: 91:     LcGotoXY(12,1);
  2817  000C70  D830               	call	PL74	;call to abstracted procedure
  2818  000C72  ECD5  F009         	call	_LcGotoXY
  2819                           
  2820                           ;SSIO.c: 92:     LcNewString(CToAobtenir());
  2821  000C76  ECD0  F00D         	call	_CToAobtenir	;wreg free
  2822  000C7A  D826               	call	PL50	;call to abstracted procedure
  2823  000C7C  EC76  F00D         	call	_LcNewString	;wreg free
  2824                           
  2825                           ;SSIO.c: 93:     usuariActualSIO = -1;
  2826  000C80  6840               	setf	_usuariActualSIO^0,c
  2827  000C82  D777               	goto	l5275
  2828  000C84                     l5351:
  2829  000C84  5008               	movf	SIOMotor@state^0,w,c
  2830  000C86  6E71               	movwf	??_SIOMotor^0,c
  2831  000C88  6A72               	clrf	(??_SIOMotor+1)^0,c
  2832                           
  2833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2834                           ; Switch size 1, requested type "space"
  2835                           ; Number of cases is 1, Range of values is 0 to 0
  2836                           ; switch strategies available:
  2837                           ; Name         Instructions Cycles
  2838                           ; simple_byte            4     3 (average)
  2839                           ;	Chosen strategy is simple_byte
  2840  000C8A  5072               	movf	(??_SIOMotor+1)^0,w,c
  2841  000C8C  A4D8               	btfss	status,2,c
  2842  000C8E  0012               	return	
  2843                           
  2844                           ; Switch size 1, requested type "space"
  2845                           ; Number of cases is 9, Range of values is 0 to 8
  2846                           ; switch strategies available:
  2847                           ; Name         Instructions Cycles
  2848                           ; simple_byte           28    15 (average)
  2849                           ;	Chosen strategy is simple_byte
  2850  000C90  5071               	movf	??_SIOMotor^0,w,c
  2851  000C92  E101 D765          	bz	l5271
  2852  000C96  0A01               	xorlw	1	; case 1
  2853  000C98  E101 D76D          	bz	l1122
  2854  000C9C  0A03               	xorlw	3	; case 2
  2855  000C9E  E101 D776          	bz	l5287
  2856  000CA2  0A01               	xorlw	1	; case 3
  2857  000CA4  E087               	bz	l1130
  2858  000CA6  0A07               	xorlw	7	; case 4
  2859  000CA8  E0A7               	bz	l1135
  2860  000CAA  0A01               	xorlw	1	; case 5
  2861  000CAC  E0B2               	bz	l5315
  2862  000CAE  0A03               	xorlw	3	; case 6
  2863  000CB0  E0C5               	bz	l5325
  2864  000CB2  0A01               	xorlw	1	; case 7
  2865  000CB4  E0D4               	bz	l5337
  2866  000CB6  0A0F               	xorlw	15	; case 8
  2867  000CB8  E0CD               	bz	l5333
  2868  000CBA  0012               	return		;funcret
  2869  000CBC                     __end_of_SIOMotor:
  2870                           	callstack 0
  2871  000CBC                     PL44:
  2872                           	callstack 24
  2873  000CBC  C001  FFD9         	movff	_userPtr,fsr2l
  2874  000CC0  C002  FFDA         	movff	_userPtr+1,fsr2h
  2875  000CC4  50DF               	movf	indf2,w,c
  2876  000CC6  0012               	return	
  2877  000CC8                     __end_ofPL44:
  2878                           	callstack 0
  2879  000CC8                     PL50:
  2880                           	callstack 24
  2881  000CC8  6E71               	movwf	??_SIOMotor^0,c
  2882  000CCA  C071  F063         	movff	??_SIOMotor,LcNewString@new_s
  2883  000CCE  6A64               	clrf	(LcNewString@new_s+1)^0,c
  2884  000CD0  0012               	return	
  2885  000CD2                     __end_ofPL50:
  2886                           	callstack 0
  2887  000CD2                     PL74:
  2888                           	callstack 24
  2889  000CD2  0E01               	movlw	1
  2890  000CD4  6E68               	movwf	LcGotoXY@Row^0,c
  2891  000CD6  0C0C               	retlw	12
  2892  000CD8                     __end_ofPL74:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _UgetScore *****************
  2896 ;; Defined at:
  2897 ;;		line 41 in file "UUsuaris.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  quin            1    wreg     unsigned char 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  quin            1    5[COMRAM] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      unsigned char 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1
  2911 ;;      Params:         0       0       0
  2912 ;;      Locals:         1       0       0
  2913 ;;      Temps:          0       0       0
  2914 ;;      Totals:         1       0       0
  2915 ;;Total ram usage:        1 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 2
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_SIOMotor
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text14
  2926  001A98                     __ptext14:
  2927                           	callstack 0
  2928  001A98                     _UgetScore:
  2929                           	callstack 27
  2930                           
  2931                           ;incstack = 0
  2932                           ;UgetScore@quin stored from wreg
  2933  001A98  6E60               	movwf	UgetScore@quin^0,c
  2934                           
  2935                           ;UUsuaris.c: 42:     return usuaris[quin].highScore;
  2936  001A9A  5060               	movf	UgetScore@quin^0,w,c
  2937  001A9C  EC16  F008         	call	PL26	;call to abstracted procedure
  2938  001AA0  50DF               	movf	indf2,w,c
  2939  001AA2  0012               	return		;funcret
  2940  001AA4                     __end_of_UgetScore:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _UchangeScore *****************
  2944 ;; Defined at:
  2945 ;;		line 44 in file "UUsuaris.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  score           1    wreg     unsigned char 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  score           1    5[COMRAM] unsigned char 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1
  2959 ;;      Params:         0       0       0
  2960 ;;      Locals:         1       0       0
  2961 ;;      Temps:          0       0       0
  2962 ;;      Totals:         1       0       0
  2963 ;;Total ram usage:        1 bytes
  2964 ;; Hardware stack levels used: 1
  2965 ;; Hardware stack levels required when called: 2
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_SIOMotor
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text15
  2974  001B54                     __ptext15:
  2975                           	callstack 0
  2976  001B54                     _UchangeScore:
  2977                           	callstack 27
  2978                           
  2979                           ;incstack = 0
  2980                           ;UchangeScore@score stored from wreg
  2981  001B54  6E60               	movwf	UchangeScore@score^0,c
  2982                           
  2983                           ;UUsuaris.c: 45:     usuaris[quin].highScore = score;
  2984  001B56  C060  F10B         	movff	UchangeScore@score,_usuaris+11
  2985  001B5A  0012               	return		;funcret
  2986  001B5C                     __end_of_UchangeScore:
  2987                           	callstack 0
  2988                           
  2989 ;; *************** function _CToAobtenir *****************
  2990 ;; Defined at:
  2991 ;;		line 10 in file "CtoA.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      PTR unsigned char 
  2998 ;; Registers used:
  2999 ;;		wreg
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1
  3005 ;;      Params:         2       0       0
  3006 ;;      Locals:         0       0       0
  3007 ;;      Temps:          0       0       0
  3008 ;;      Totals:         2       0       0
  3009 ;;Total ram usage:        2 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 2
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_SIOMotor
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text16
  3020  001BA0                     __ptext16:
  3021                           	callstack 0
  3022  001BA0                     _CToAobtenir:
  3023                           	callstack 27
  3024                           
  3025                           ;CtoA.c: 11:     return stringScore;
  3026                           
  3027                           ;incstack = 0
  3028  001BA0  0E57               	movlw	_stringScore& (0+255)
  3029  001BA2  0012               	return		;funcret
  3030  001BA4                     __end_of_CToAobtenir:
  3031                           	callstack 0
  3032                           
  3033 ;; *************** function _CToAReset *****************
  3034 ;; Defined at:
  3035 ;;		line 17 in file "CtoA.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, status,2
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1
  3049 ;;      Params:         0       0       0
  3050 ;;      Locals:         0       0       0
  3051 ;;      Temps:          0       0       0
  3052 ;;      Totals:         0       0       0
  3053 ;;Total ram usage:        0 bytes
  3054 ;; Hardware stack levels used: 1
  3055 ;; Hardware stack levels required when called: 2
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_SIOMotor
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text17
  3064  001B04                     __ptext17:
  3065                           	callstack 0
  3066  001B04                     _CToAReset:
  3067                           	callstack 27
  3068                           
  3069                           ;CtoA.c: 18:     stringScore[0] = '0';
  3070                           
  3071                           ;incstack = 0
  3072  001B04  0E30               	movlw	48
  3073  001B06  6E57               	movwf	_stringScore^0,c
  3074                           
  3075                           ;CtoA.c: 19:     stringScore[1] = '0';
  3076  001B08  6E58               	movwf	(_stringScore+1)^0,c
  3077                           
  3078                           ;CtoA.c: 20:     stringScore[2] = '0';
  3079  001B0A  6E59               	movwf	(_stringScore+2)^0,c
  3080  001B0C  0C30               	retlw	48	;funcret
  3081  001B0E                     __end_of_CToAReset:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function _CToAHaAcabat *****************
  3085 ;; Defined at:
  3086 ;;		line 13 in file "CtoA.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      unsigned char 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1
  3100 ;;      Params:         0       0       0
  3101 ;;      Locals:         0       0       0
  3102 ;;      Temps:          0       0       0
  3103 ;;      Totals:         0       0       0
  3104 ;;Total ram usage:        0 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; Hardware stack levels required when called: 2
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_SIOMotor
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text18
  3115  001BA4                     __ptext18:
  3116                           	callstack 0
  3117  001BA4                     _CToAHaAcabat:
  3118                           	callstack 27
  3119                           
  3120                           ;CtoA.c: 14:     return convertir;
  3121                           
  3122                           ;incstack = 0
  3123  001BA4  503E               	movf	_convertir^0,w,c
  3124  001BA6  0012               	return		;funcret
  3125  001BA8                     __end_of_CToAHaAcabat:
  3126                           	callstack 0
  3127                           
  3128 ;; *************** function _CToAConverteix *****************
  3129 ;; Defined at:
  3130 ;;		line 7 in file "CtoA.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  numero          1    wreg     unsigned char 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  numero          1    5[COMRAM] unsigned char 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1
  3144 ;;      Params:         0       0       0
  3145 ;;      Locals:         1       0       0
  3146 ;;      Temps:          0       0       0
  3147 ;;      Totals:         1       0       0
  3148 ;;Total ram usage:        1 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 2
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_SIOMotor
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text19
  3159  001B5C                     __ptext19:
  3160                           	callstack 0
  3161  001B5C                     _CToAConverteix:
  3162                           	callstack 27
  3163                           
  3164                           ;incstack = 0
  3165                           ;CToAConverteix@numero stored from wreg
  3166  001B5C  6E60               	movwf	CToAConverteix@numero^0,c
  3167                           
  3168                           ;CtoA.c: 8:     convertir = numero;
  3169  001B5E  C060  F03E         	movff	CToAConverteix@numero,_convertir
  3170  001B62  0012               	return		;funcret
  3171  001B64                     __end_of_CToAConverteix:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _Minit *****************
  3175 ;; Defined at:
  3176 ;;		line 35 in file "MMenu.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1
  3190 ;;      Params:         0       0       0
  3191 ;;      Locals:         0       0       0
  3192 ;;      Temps:          0       0       0
  3193 ;;      Totals:         0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 3
  3197 ;; This function calls:
  3198 ;;		_TiGetTimer
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text20
  3205  001B64                     __ptext20:
  3206                           	callstack 0
  3207  001B64                     _Minit:
  3208                           	callstack 27
  3209                           
  3210                           ;MMenu.c: 36:     timerMenu = TiGetTimer();
  3211                           
  3212                           ;incstack = 0
  3213  001B64  EC60  F00C         	call	_TiGetTimer	;wreg free
  3214  001B68  6E23               	movwf	_timerMenu^0,c
  3215  001B6A  0012               	return		;funcret
  3216  001B6C                     __end_of_Minit:
  3217                           	callstack 0
  3218                           
  3219 ;; *************** function _MTMenu *****************
  3220 ;; Defined at:
  3221 ;;		line 40 in file "MMenu.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1
  3235 ;;      Params:         0       0       0
  3236 ;;      Locals:         0       0       0
  3237 ;;      Temps:          7       0       0
  3238 ;;      Totals:         7       0       0
  3239 ;;Total ram usage:        7 bytes
  3240 ;; Hardware stack levels used: 1
  3241 ;; Hardware stack levels required when called: 8
  3242 ;; This function calls:
  3243 ;;		_GLCDMostraMenu
  3244 ;;		_HActualitzarHora
  3245 ;;		_HClearNouMinut
  3246 ;;		_HGetTime
  3247 ;;		_HJuguem
  3248 ;;		_HNoJuguem
  3249 ;;		_HNouMinut
  3250 ;;		_JJuguem
  3251 ;;		_JUsuari
  3252 ;;		_LcClear
  3253 ;;		_LcCursorOff
  3254 ;;		_LcCursorOn
  3255 ;;		_LcGotoXY
  3256 ;;		_LcLliure
  3257 ;;		_LcNewString
  3258 ;;		_LcPutChar
  3259 ;;		_LcPutFletxa
  3260 ;;		_LcScroll
  3261 ;;		_NoFerMenu
  3262 ;;		_SMSoff
  3263 ;;		_SMSon
  3264 ;;		_SiFerMenu
  3265 ;;		_TiGetTics
  3266 ;;		_TiResetTics
  3267 ;;		_UAfegirLletraUsername
  3268 ;;		_UCancelaNouUser
  3269 ;;		_UcreateUser
  3270 ;;		_UdelUser
  3271 ;;		_UeditUsername
  3272 ;;		_UgetNumUsuaris
  3273 ;;		_UgetUserName
  3274 ;; This function is called by:
  3275 ;;		_main
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text21
  3280  000036                     __ptext21:
  3281                           	callstack 0
  3282  000036                     _MTMenu:
  3283                           	callstack 22
  3284                           
  3285                           ;MMenu.c: 41:     static char state = 0;;MMenu.c: 42:     switch(state) {
  3286                           
  3287                           ;incstack = 0
  3288  000036  D38D               	goto	l5213
  3289  000038                     l4603:
  3290                           
  3291                           ;MMenu.c: 44:    if (LcLliure()) {
  3292  000038  EC7C  F00D         	call	_LcLliure	;wreg free
  3293  00003C  A0D8               	btfss	status,0,c
  3294  00003E  0012               	return	
  3295                           
  3296                           ;MMenu.c: 45:     LcClear();
  3297  000040  EC05  F00D         	call	_LcClear	;wreg free
  3298                           
  3299                           ;MMenu.c: 46:     SiFerMenu();
  3300  000044  ECDA  F00D         	call	_SiFerMenu	;wreg free
  3301                           
  3302                           ;MMenu.c: 47:     GLCDMostraMenu(menuDalt);
  3303  000048  5025               	movf	_menuDalt^0,w,c
  3304  00004A  EC5E  F00D         	call	_GLCDMostraMenu
  3305                           
  3306                           ;MMenu.c: 48:     NovaTecla = -1;
  3307  00004E  684A               	setf	_NovaTecla^0,c
  3308                           
  3309                           ;MMenu.c: 49:     SMSoff();
  3310  000050  ECDC  F00D         	call	_SMSoff	;wreg free
  3311                           
  3312                           ;MMenu.c: 50:     LcCursorOff();
  3313  000054  EC91  F00D         	call	_LcCursorOff	;wreg free
  3314                           
  3315                           ;MMenu.c: 51:     state = 1;
  3316  000058  0E01               	movlw	1
  3317  00005A  6E22               	movwf	MTMenu@state^0,c
  3318                           
  3319                           ;MMenu.c: 53:   break;
  3320                           
  3321                           ;MMenu.c: 52:    }
  3322  00005C  0C01               	retlw	1
  3323  00005E                     l4619:
  3324                           
  3325                           ;MMenu.c: 55:    if (NovaTecla == 2) {
  3326  00005E  0E02               	movlw	2
  3327  000060  184A               	xorwf	_NovaTecla^0,w,c
  3328  000062  E105               	bnz	l4627
  3329                           
  3330                           ;MMenu.c: 56:     if(menuDalt > 0) menuDalt--;
  3331  000064  5025               	movf	_menuDalt^0,w,c
  3332  000066  E001               	bz	l4625
  3333  000068  0625               	decf	_menuDalt^0,f,c
  3334  00006A                     l4625:
  3335                           
  3336                           ;MMenu.c: 57:     state = 0;
  3337  00006A  6A22               	clrf	MTMenu@state^0,c
  3338                           
  3339                           ;MMenu.c: 58:    }
  3340  00006C  0012               	return	
  3341  00006E                     l4627:
  3342  00006E  0E08               	movlw	8
  3343  000070  184A               	xorwf	_NovaTecla^0,w,c
  3344  000072  E105               	bnz	l4635
  3345                           
  3346                           ;MMenu.c: 60:     if(menuDalt < 5) menuDalt++;
  3347  000074  0E05               	movlw	5
  3348  000076  6025               	cpfslt	_menuDalt^0,c
  3349  000078  D7F8               	goto	l4625
  3350  00007A  2A25               	incf	_menuDalt^0,f,c
  3351  00007C  D7F6               	goto	l4625
  3352  00007E                     l4635:
  3353  00007E  0E0A               	movlw	10
  3354  000080  184A               	xorwf	_NovaTecla^0,w,c
  3355  000082  E111               	bnz	l4649
  3356  000084  0E05               	movlw	5
  3357  000086  1825               	xorwf	_menuDalt^0,w,c
  3358  000088  E10E               	bnz	l4649
  3359                           
  3360                           ;MMenu.c: 64:     LcClear();
  3361  00008A  EC05  F00D         	call	_LcClear	;wreg free
  3362                           
  3363                           ;MMenu.c: 65:     NoFerMenu();
  3364  00008E  ECDE  F00D         	call	_NoFerMenu	;wreg free
  3365                           
  3366                           ;MMenu.c: 66:     LcNewString("Enter new time");
  3367  000092  0EB2               	movlw	low STR_1
  3368  000094  6E63               	movwf	LcNewString@new_s^0,c
  3369  000096  0E1F               	movlw	high STR_1
  3370  000098  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3371  00009A  EC76  F00D         	call	_LcNewString	;wreg free
  3372                           
  3373                           ;MMenu.c: 67:     NovaTecla = -1;
  3374  00009E  684A               	setf	_NovaTecla^0,c
  3375                           
  3376                           ;MMenu.c: 68:     state = 11;
  3377  0000A0  0E0B               	movlw	11
  3378  0000A2  6E22               	movwf	MTMenu@state^0,c
  3379                           
  3380                           ;MMenu.c: 69:    }
  3381  0000A4  0C0B               	retlw	11
  3382  0000A6                     l4649:
  3383  0000A6  0E0A               	movlw	10
  3384  0000A8  184A               	xorwf	_NovaTecla^0,w,c
  3385  0000AA  E109               	bnz	l4659
  3386  0000AC  5025               	movf	_menuDalt^0,w,c
  3387  0000AE  E107               	bnz	l4659
  3388                           
  3389                           ;MMenu.c: 71:     NoFerMenu();
  3390  0000B0  ECDE  F00D         	call	_NoFerMenu	;wreg free
  3391                           
  3392                           ;MMenu.c: 72:     LcClear();
  3393  0000B4  EC05  F00D         	call	_LcClear	;wreg free
  3394                           
  3395                           ;MMenu.c: 73:     state = 12;
  3396  0000B8  0E0C               	movlw	12
  3397  0000BA  6E22               	movwf	MTMenu@state^0,c
  3398                           
  3399                           ;MMenu.c: 74:    }
  3400  0000BC  0C0C               	retlw	12
  3401  0000BE                     l4659:
  3402  0000BE  0E0A               	movlw	10
  3403  0000C0  184A               	xorwf	_NovaTecla^0,w,c
  3404  0000C2  E10A               	bnz	l4669
  3405  0000C4  0E04               	movlw	4
  3406  0000C6  1825               	xorwf	_menuDalt^0,w,c
  3407  0000C8  E107               	bnz	l4669
  3408                           
  3409                           ;MMenu.c: 76:     LcClear();
  3410  0000CA  EC05  F00D         	call	_LcClear	;wreg free
  3411                           
  3412                           ;MMenu.c: 77:     NoFerMenu();
  3413  0000CE  ECDE  F00D         	call	_NoFerMenu	;wreg free
  3414  0000D2                     l4667:
  3415                           
  3416                           ;MMenu.c: 78:     state = 2;
  3417  0000D2  0E02               	movlw	2
  3418  0000D4  6E22               	movwf	MTMenu@state^0,c
  3419                           
  3420                           ;MMenu.c: 79:    }
  3421  0000D6  0C02               	retlw	2
  3422  0000D8                     l4669:
  3423  0000D8  0E0A               	movlw	10
  3424  0000DA  184A               	xorwf	_NovaTecla^0,w,c
  3425  0000DC  E10D               	bnz	l4681
  3426  0000DE  0E03               	movlw	3
  3427  0000E0  1825               	xorwf	_menuDalt^0,w,c
  3428  0000E2  E10A               	bnz	l4681
  3429  0000E4  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  3430  0000E8  0900               	iorlw	0
  3431  0000EA  E006               	bz	l4681
  3432                           
  3433                           ;MMenu.c: 81:     NoFerMenu();
  3434  0000EC  ECDE  F00D         	call	_NoFerMenu	;wreg free
  3435                           
  3436                           ;MMenu.c: 82:     menuDalt = 0;
  3437  0000F0  6A25               	clrf	_menuDalt^0,c
  3438  0000F2                     l4679:
  3439                           
  3440                           ;MMenu.c: 83:     state = 28;
  3441  0000F2  0E1C               	movlw	28
  3442  0000F4  6E22               	movwf	MTMenu@state^0,c
  3443                           
  3444                           ;MMenu.c: 84:    }
  3445  0000F6  0C1C               	retlw	28
  3446  0000F8                     l4681:
  3447  0000F8  0E0A               	movlw	10
  3448  0000FA  184A               	xorwf	_NovaTecla^0,w,c
  3449  0000FC  A4D8               	btfss	status,2,c
  3450  0000FE  0012               	return	
  3451  000100  0E02               	movlw	2
  3452  000102  1825               	xorwf	_menuDalt^0,w,c
  3453  000104  A4D8               	btfss	status,2,c
  3454  000106  0012               	return	
  3455  000108  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  3456  00010C  0900               	iorlw	0
  3457  00010E  B4D8               	btfsc	status,2,c
  3458  000110  0012               	return	
  3459                           
  3460                           ;MMenu.c: 86:     NoFerMenu();
  3461  000112  ECDE  F00D         	call	_NoFerMenu	;wreg free
  3462                           
  3463                           ;MMenu.c: 87:     menuDalt = 0;
  3464  000116  6A25               	clrf	_menuDalt^0,c
  3465                           
  3466                           ;MMenu.c: 88:     LcClear();
  3467  000118  EC05  F00D         	call	_LcClear	;wreg free
  3468  00011C                     l4693:
  3469                           
  3470                           ;MMenu.c: 89:     state = 36;
  3471  00011C  0E24               	movlw	36
  3472  00011E  6E22               	movwf	MTMenu@state^0,c
  3473  000120  0C24               	retlw	36
  3474  000122                     l4695:
  3475                           
  3476                           ;MMenu.c: 93:    if (LcLliure()) {
  3477  000122  EC7C  F00D         	call	_LcLliure	;wreg free
  3478  000126  A0D8               	btfss	status,0,c
  3479  000128  0012               	return	
  3480                           
  3481                           ;MMenu.c: 94:     LcNewString("Current Time");
  3482  00012A  0ED0               	movlw	low STR_2
  3483  00012C  6E63               	movwf	LcNewString@new_s^0,c
  3484  00012E  0E1F               	movlw	high STR_2
  3485  000130  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3486  000132  EC76  F00D         	call	_LcNewString	;wreg free
  3487                           
  3488                           ;MMenu.c: 95:     state = 3;
  3489  000136  0E03               	movlw	3
  3490  000138  6E22               	movwf	MTMenu@state^0,c
  3491  00013A  0C03               	retlw	3
  3492  00013C                     l4701:
  3493                           
  3494                           ;MMenu.c: 99:    if (HNouMinut() && NovaTecla != 11 && LcLliure()) {
  3495  00013C  EC52  F00D         	call	_HNouMinut	;wreg free
  3496  000140  E30B               	bnc	l4713
  3497  000142  0E0B               	movlw	11
  3498  000144  184A               	xorwf	_NovaTecla^0,w,c
  3499  000146  E008               	bz	l4713
  3500  000148  EC7C  F00D         	call	_LcLliure	;wreg free
  3501  00014C  E305               	bnc	l4713
  3502                           
  3503                           ;MMenu.c: 100:     HClearNouMinut();
  3504  00014E  ECE4  F00D         	call	_HClearNouMinut	;wreg free
  3505                           
  3506                           ;MMenu.c: 101:     LcClear();
  3507  000152  EC05  F00D         	call	_LcClear	;wreg free
  3508  000156  D7BD               	goto	l4667
  3509  000158                     l4713:
  3510  000158  0E0B               	movlw	11
  3511  00015A  184A               	xorwf	_NovaTecla^0,w,c
  3512  00015C  A4D8               	btfss	status,2,c
  3513  00015E  0012               	return	
  3514  000160  EC7C  F00D         	call	_LcLliure	;wreg free
  3515  000164  E282               	bc	l4625
  3516  000166  0012               	return	
  3517  000168                     l4719:
  3518                           
  3519                           ;MMenu.c: 109:    if (LcLliure()) {
  3520  000168  EC7C  F00D         	call	_LcLliure	;wreg free
  3521  00016C  A0D8               	btfss	status,0,c
  3522  00016E  0012               	return	
  3523                           
  3524                           ;MMenu.c: 110:     LcGotoXY(0,1);
  3525  000170  DB9C               	call	PL32	;call to abstracted procedure
  3526  000172  ECD5  F009         	call	_LcGotoXY
  3527                           
  3528                           ;MMenu.c: 111:     LcNewString("(HH:MM): ");
  3529  000176  0EF5               	movlw	low STR_3
  3530  000178  6E63               	movwf	LcNewString@new_s^0,c
  3531  00017A  0E1F               	movlw	high STR_3
  3532  00017C  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3533  00017E  EC76  F00D         	call	_LcNewString	;wreg free
  3534                           
  3535                           ;MMenu.c: 112:     LcCursorOn();
  3536  000182  EC8C  F00D         	call	_LcCursorOn	;wreg free
  3537                           
  3538                           ;MMenu.c: 113:     state = 5;
  3539  000186  0E05               	movlw	5
  3540  000188  6E22               	movwf	MTMenu@state^0,c
  3541  00018A  0C05               	retlw	5
  3542  00018C                     l4729:
  3543                           
  3544                           ;MMenu.c: 117:    if (NovaTecla > -1) {
  3545  00018C  BE4A               	btfsc	_NovaTecla^0,7,c
  3546  00018E  0012               	return	
  3547                           
  3548                           ;MMenu.c: 118:     horaTmp[0] = NovaTecla+48;
  3549  000190  504A               	movf	_NovaTecla^0,w,c
  3550  000192  0F30               	addlw	48
  3551  000194  6E30               	movwf	_horaTmp^0,c
  3552                           
  3553                           ;MMenu.c: 119:     LcPutChar(horaTmp[0]);
  3554  000196  5030               	movf	_horaTmp^0,w,c
  3555  000198  EC30  F00B         	call	_LcPutChar
  3556                           
  3557                           ;MMenu.c: 120:     NovaTecla = -1;
  3558  00019C  684A               	setf	_NovaTecla^0,c
  3559                           
  3560                           ;MMenu.c: 121:     state = 6;
  3561  00019E  0E06               	movlw	6
  3562  0001A0  6E22               	movwf	MTMenu@state^0,c
  3563  0001A2  0C06               	retlw	6
  3564  0001A4                     l4739:
  3565                           
  3566                           ;MMenu.c: 125:    if (NovaTecla > -1) {
  3567  0001A4  BE4A               	btfsc	_NovaTecla^0,7,c
  3568  0001A6  0012               	return	
  3569                           
  3570                           ;MMenu.c: 126:     horaTmp[1] = NovaTecla+48;
  3571  0001A8  504A               	movf	_NovaTecla^0,w,c
  3572  0001AA  0F30               	addlw	48
  3573  0001AC  6E31               	movwf	(_horaTmp+1)^0,c
  3574                           
  3575                           ;MMenu.c: 127:     LcPutChar(horaTmp[1]);
  3576  0001AE  5031               	movf	(_horaTmp+1)^0,w,c
  3577  0001B0  EC30  F00B         	call	_LcPutChar
  3578                           
  3579                           ;MMenu.c: 128:     NovaTecla = -1;
  3580  0001B4  684A               	setf	_NovaTecla^0,c
  3581                           
  3582                           ;MMenu.c: 129:     state = 7;
  3583  0001B6  0E07               	movlw	7
  3584  0001B8  6E22               	movwf	MTMenu@state^0,c
  3585  0001BA  0C07               	retlw	7
  3586  0001BC                     l4749:
  3587                           
  3588                           ;MMenu.c: 133:    LcPutChar(':');
  3589  0001BC  0E3A               	movlw	58
  3590  0001BE  EC30  F00B         	call	_LcPutChar
  3591                           
  3592                           ;MMenu.c: 134:    state = 8;
  3593  0001C2  0E08               	movlw	8
  3594  0001C4  6E22               	movwf	MTMenu@state^0,c
  3595                           
  3596                           ;MMenu.c: 135:   break;
  3597  0001C6  0C08               	retlw	8
  3598  0001C8                     l4753:
  3599                           
  3600                           ;MMenu.c: 137:    if (NovaTecla > -1) {
  3601  0001C8  BE4A               	btfsc	_NovaTecla^0,7,c
  3602  0001CA  0012               	return	
  3603                           
  3604                           ;MMenu.c: 138:     horaTmp[2] = NovaTecla+48;
  3605  0001CC  504A               	movf	_NovaTecla^0,w,c
  3606  0001CE  0F30               	addlw	48
  3607  0001D0  6E32               	movwf	(_horaTmp+2)^0,c
  3608                           
  3609                           ;MMenu.c: 139:     LcPutChar(horaTmp[2]);
  3610  0001D2  5032               	movf	(_horaTmp+2)^0,w,c
  3611  0001D4  EC30  F00B         	call	_LcPutChar
  3612                           
  3613                           ;MMenu.c: 140:     NovaTecla = -1;
  3614  0001D8  684A               	setf	_NovaTecla^0,c
  3615                           
  3616                           ;MMenu.c: 141:     state = 9;
  3617  0001DA  0E09               	movlw	9
  3618  0001DC  6E22               	movwf	MTMenu@state^0,c
  3619  0001DE  0C09               	retlw	9
  3620  0001E0                     l4763:
  3621                           
  3622                           ;MMenu.c: 145:    if (NovaTecla > -1) {
  3623  0001E0  BE4A               	btfsc	_NovaTecla^0,7,c
  3624  0001E2  0012               	return	
  3625                           
  3626                           ;MMenu.c: 146:     horaTmp[3] = NovaTecla+48;
  3627  0001E4  504A               	movf	_NovaTecla^0,w,c
  3628  0001E6  0F30               	addlw	48
  3629  0001E8  6E33               	movwf	(_horaTmp+3)^0,c
  3630                           
  3631                           ;MMenu.c: 147:     LcPutChar(horaTmp[3]);
  3632  0001EA  5033               	movf	(_horaTmp+3)^0,w,c
  3633  0001EC  EC30  F00B         	call	_LcPutChar
  3634                           
  3635                           ;MMenu.c: 148:     NovaTecla = -1;
  3636  0001F0  684A               	setf	_NovaTecla^0,c
  3637                           
  3638                           ;MMenu.c: 149:     state = 10;
  3639  0001F2  0E0A               	movlw	10
  3640  0001F4  6E22               	movwf	MTMenu@state^0,c
  3641  0001F6  0C0A               	retlw	10
  3642  0001F8                     l4773:
  3643                           
  3644                           ;MMenu.c: 153:    if (NovaTecla == 10) {
  3645  0001F8  0E0A               	movlw	10
  3646  0001FA  184A               	xorwf	_NovaTecla^0,w,c
  3647  0001FC  A4D8               	btfss	status,2,c
  3648  0001FE  0012               	return	
  3649                           
  3650                           ;MMenu.c: 154:     HActualitzarHora(horaTmp);
  3651  000200  0E30               	movlw	low _horaTmp
  3652  000202  6E60               	movwf	HActualitzarHora@nova^0,c
  3653  000204  EC46  F00C         	call	_HActualitzarHora	;wreg free
  3654                           
  3655                           ;MMenu.c: 155:     NovaTecla = -1;
  3656  000208  684A               	setf	_NovaTecla^0,c
  3657                           
  3658                           ;MMenu.c: 156:     LcCursorOff();
  3659  00020A  EC91  F00D         	call	_LcCursorOff	;wreg free
  3660  00020E  D72D               	goto	l4625
  3661  000210                     l4783:
  3662                           
  3663                           ;MMenu.c: 161:    if (LcLliure()) {
  3664  000210  EC7C  F00D         	call	_LcLliure	;wreg free
  3665  000214  A0D8               	btfss	status,0,c
  3666  000216  0012               	return	
  3667                           
  3668                           ;MMenu.c: 162:     LcGotoXY(0,1);
  3669  000218  DB48               	call	PL32	;call to abstracted procedure
  3670  00021A  ECD5  F009         	call	_LcGotoXY
  3671                           
  3672                           ;MMenu.c: 163:     LcNewString(HGetTime());
  3673  00021E  ECE2  F00D         	call	_HGetTime	;wreg free
  3674  000222  6E71               	movwf	??_MTMenu^0,c
  3675  000224  C071  F063         	movff	??_MTMenu,LcNewString@new_s
  3676  000228  6A64               	clrf	(LcNewString@new_s+1)^0,c
  3677  00022A  EC76  F00D         	call	_LcNewString	;wreg free
  3678                           
  3679                           ;MMenu.c: 164:     state = 4;
  3680  00022E  0E04               	movlw	4
  3681  000230  6E22               	movwf	MTMenu@state^0,c
  3682  000232  0C04               	retlw	4
  3683  000234                     l4791:
  3684                           
  3685                           ;MMenu.c: 168:    if (LcLliure()) {
  3686  000234  EC7C  F00D         	call	_LcLliure	;wreg free
  3687  000238  A0D8               	btfss	status,0,c
  3688  00023A  0012               	return	
  3689                           
  3690                           ;MMenu.c: 169:     LcNewString("1. Select User");
  3691  00023C  0EC1               	movlw	low STR_4
  3692  00023E  6E63               	movwf	LcNewString@new_s^0,c
  3693  000240  0E1F               	movlw	high STR_4
  3694  000242  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3695  000244  EC76  F00D         	call	_LcNewString	;wreg free
  3696                           
  3697                           ;MMenu.c: 170:     state = 13;
  3698  000248  0E0D               	movlw	13
  3699  00024A  6E22               	movwf	MTMenu@state^0,c
  3700  00024C  0C0D               	retlw	13
  3701  00024E                     l4797:
  3702                           
  3703                           ;MMenu.c: 174:    if (NovaTecla == 1 && UgetNumUsuaris() >= 1) {
  3704  00024E  044A               	decf	_NovaTecla^0,w,c
  3705  000250  E10B               	bnz	l4809
  3706  000252  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  3707  000256  0900               	iorlw	0
  3708  000258  E007               	bz	l4809
  3709                           
  3710                           ;MMenu.c: 175:     LcClear();
  3711  00025A  EC05  F00D         	call	_LcClear	;wreg free
  3712                           
  3713                           ;MMenu.c: 176:     menuDalt=0;
  3714  00025E  6A25               	clrf	_menuDalt^0,c
  3715                           
  3716                           ;MMenu.c: 177:     NovaTecla = -1;
  3717  000260  684A               	setf	_NovaTecla^0,c
  3718  000262                     l4807:
  3719                           
  3720                           ;MMenu.c: 178:     state = 20;
  3721  000262  0E14               	movlw	20
  3722  000264  6E22               	movwf	MTMenu@state^0,c
  3723                           
  3724                           ;MMenu.c: 179:    }
  3725  000266  0C14               	retlw	20
  3726  000268                     l4809:
  3727  000268  0E02               	movlw	2
  3728  00026A  184A               	xorwf	_NovaTecla^0,w,c
  3729  00026C  A4D8               	btfss	status,2,c
  3730  00026E  0012               	return	
  3731                           
  3732                           ;MMenu.c: 181:     NovaTecla = -1;
  3733  000270  684A               	setf	_NovaTecla^0,c
  3734                           
  3735                           ;MMenu.c: 182:     SMSon();
  3736  000272  ECCA  F00D         	call	_SMSon	;wreg free
  3737                           
  3738                           ;MMenu.c: 183:     LcCursorOn();
  3739  000276  EC8C  F00D         	call	_LcCursorOn	;wreg free
  3740                           
  3741                           ;MMenu.c: 184:     LcClear();
  3742  00027A  EC05  F00D         	call	_LcClear	;wreg free
  3743                           
  3744                           ;MMenu.c: 185:     LcNewString("Enter name:");
  3745  00027E  0EDD               	movlw	low STR_5
  3746  000280  6E63               	movwf	LcNewString@new_s^0,c
  3747  000282  0E1F               	movlw	high STR_5
  3748  000284  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3749  000286  EC76  F00D         	call	_LcNewString	;wreg free
  3750                           
  3751                           ;MMenu.c: 186:     state = 16;
  3752  00028A  0E10               	movlw	16
  3753  00028C  6E22               	movwf	MTMenu@state^0,c
  3754  00028E  0C10               	retlw	16
  3755  000290                     l4823:
  3756                           
  3757                           ;MMenu.c: 190:    if (LcLliure() && novaLletra > 47 && NovaTecla < 10 && UgetNumUsuaris(
      +                          ) < 20) {
  3758  000290  EC7C  F00D         	call	_LcLliure	;wreg free
  3759  000294  E319               	bnc	l4839
  3760  000296  5049               	movf	_novaLletra^0,w,c
  3761  000298  0A80               	xorlw	128
  3762  00029A  0F50               	addlw	-176
  3763  00029C  E315               	bnc	l4839
  3764  00029E  504A               	movf	_NovaTecla^0,w,c
  3765  0002A0  0A80               	xorlw	128
  3766  0002A2  0F76               	addlw	-138
  3767  0002A4  E211               	bc	l4839
  3768  0002A6  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  3769  0002AA  6E71               	movwf	??_MTMenu^0,c
  3770  0002AC  0E14               	movlw	20
  3771  0002AE  6071               	cpfslt	??_MTMenu^0,c
  3772  0002B0  D00B               	goto	l4839
  3773                           
  3774                           ;MMenu.c: 191:     LcPutChar(novaLletra);
  3775  0002B2  5049               	movf	_novaLletra^0,w,c
  3776  0002B4  EC30  F00B         	call	_LcPutChar
  3777                           
  3778                           ;MMenu.c: 192:     NovaTecla = -1;
  3779  0002B8  684A               	setf	_NovaTecla^0,c
  3780                           
  3781                           ;MMenu.c: 193:     UAfegirLletraUsername(novaLletra);
  3782  0002BA  5049               	movf	_novaLletra^0,w,c
  3783  0002BC  ECAC  F00B         	call	_UAfegirLletraUsername
  3784                           
  3785                           ;MMenu.c: 194:     novaLletra = -1;
  3786  0002C0  6849               	setf	_novaLletra^0,c
  3787                           
  3788                           ;MMenu.c: 195:     state = 19;
  3789  0002C2  0E13               	movlw	19
  3790  0002C4  6E22               	movwf	MTMenu@state^0,c
  3791                           
  3792                           ;MMenu.c: 196:    }
  3793  0002C6  0C13               	retlw	19
  3794  0002C8                     l4839:
  3795  0002C8  0E0A               	movlw	10
  3796  0002CA  184A               	xorwf	_NovaTecla^0,w,c
  3797  0002CC  E117               	bnz	l4853
  3798  0002CE  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  3799  0002D2  6E71               	movwf	??_MTMenu^0,c
  3800  0002D4  0E14               	movlw	20
  3801  0002D6  6071               	cpfslt	??_MTMenu^0,c
  3802  0002D8  D011               	goto	l4853
  3803                           
  3804                           ;MMenu.c: 198:     LcCursorOff();
  3805  0002DA  EC91  F00D         	call	_LcCursorOff	;wreg free
  3806                           
  3807                           ;MMenu.c: 199:     UAfegirLletraUsername('\0');
  3808  0002DE  0E00               	movlw	0
  3809  0002E0  ECAC  F00B         	call	_UAfegirLletraUsername
  3810                           
  3811                           ;MMenu.c: 200:     SMSoff();
  3812  0002E4  ECDC  F00D         	call	_SMSoff	;wreg free
  3813                           
  3814                           ;MMenu.c: 201:     LcClear();
  3815  0002E8  EC05  F00D         	call	_LcClear	;wreg free
  3816                           
  3817                           ;MMenu.c: 202:     menuDalt = UgetNumUsuaris()-1;
  3818  0002EC  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  3819  0002F0  6E71               	movwf	??_MTMenu^0,c
  3820  0002F2  0471               	decf	??_MTMenu^0,w,c
  3821  0002F4  6E25               	movwf	_menuDalt^0,c
  3822  0002F6                     l4851:
  3823                           
  3824                           ;MMenu.c: 203:     state = 24;
  3825  0002F6  0E18               	movlw	24
  3826  0002F8  6E22               	movwf	MTMenu@state^0,c
  3827                           
  3828                           ;MMenu.c: 204:    }
  3829  0002FA  0C18               	retlw	24
  3830  0002FC                     l4853:
  3831  0002FC  0E0B               	movlw	11
  3832  0002FE  184A               	xorwf	_NovaTecla^0,w,c
  3833  000300  E006               	bz	u4500
  3834  000302  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  3835  000306  6E71               	movwf	??_MTMenu^0,c
  3836  000308  0E13               	movlw	19
  3837  00030A  6471               	cpfsgt	??_MTMenu^0,c
  3838  00030C  0C13               	retlw	19
  3839  00030E                     u4500:
  3840                           
  3841                           ;MMenu.c: 206:     LcCursorOff();
  3842  00030E  EC91  F00D         	call	_LcCursorOff	;wreg free
  3843                           
  3844                           ;MMenu.c: 207:     UCancelaNouUser();
  3845  000312  ECD8  F00D         	call	_UCancelaNouUser	;wreg free
  3846  000316                     l4861:
  3847                           
  3848                           ;MMenu.c: 208:     menuDalt = 0;
  3849  000316  6A25               	clrf	_menuDalt^0,c
  3850  000318  D6A8               	goto	l4625
  3851  00031A                     l4865:
  3852                           
  3853                           ;MMenu.c: 213:    if (LcLliure()) {
  3854  00031A  EC7C  F00D         	call	_LcLliure	;wreg free
  3855  00031E  A0D8               	btfss	status,0,c
  3856  000320  0012               	return	
  3857                           
  3858                           ;MMenu.c: 214:     LcClear();
  3859  000322  EC05  F00D         	call	_LcClear	;wreg free
  3860                           
  3861                           ;MMenu.c: 215:     LcPutFletxa();
  3862  000326  EC6A  F00D         	call	_LcPutFletxa	;wreg free
  3863                           
  3864                           ;MMenu.c: 216:     LcGotoXY(3,0);
  3865  00032A  6A68               	clrf	LcGotoXY@Row^0,c
  3866  00032C  0E03               	movlw	3
  3867  00032E  ECD5  F009         	call	_LcGotoXY
  3868                           
  3869                           ;MMenu.c: 217:     LcNewString(UgetUserName(menuDalt));
  3870  000332  5025               	movf	_menuDalt^0,w,c
  3871  000334  EC29  F00D         	call	_UgetUserName
  3872  000338  DA8E               	call	PL8	;call to abstracted procedure
  3873  00033A  EC76  F00D         	call	_LcNewString	;wreg free
  3874                           
  3875                           ;MMenu.c: 218:     NovaTecla = -1;
  3876  00033E  684A               	setf	_NovaTecla^0,c
  3877                           
  3878                           ;MMenu.c: 219:     state = 23;
  3879  000340  0E17               	movlw	23
  3880  000342  6E22               	movwf	MTMenu@state^0,c
  3881  000344  0C17               	retlw	23
  3882  000346                     l4875:
  3883                           
  3884                           ;MMenu.c: 223:    if (LcLliure()) {
  3885  000346  EC7C  F00D         	call	_LcLliure	;wreg free
  3886  00034A  A0D8               	btfss	status,0,c
  3887  00034C  0012               	return	
  3888  00034E                     u4520:
  3889                           
  3890                           ;MMenu.c: 224:     state = 17;
  3891  00034E  0E11               	movlw	17
  3892  000350  6E22               	movwf	MTMenu@state^0,c
  3893  000352  0C11               	retlw	17
  3894  000354                     l4879:
  3895                           
  3896                           ;MMenu.c: 228:    if (LcLliure()) {
  3897  000354  EC7C  F00D         	call	_LcLliure	;wreg free
  3898  000358  A0D8               	btfss	status,0,c
  3899  00035A  0012               	return	
  3900                           
  3901                           ;MMenu.c: 229:     NovaTecla = -1;
  3902  00035C  684A               	setf	_NovaTecla^0,c
  3903                           
  3904                           ;MMenu.c: 230:     LcNewString(UgetUserName(menuDalt));
  3905  00035E  5025               	movf	_menuDalt^0,w,c
  3906  000360  EC29  F00D         	call	_UgetUserName
  3907  000364  DA78               	call	PL8	;call to abstracted procedure
  3908  000366  EC76  F00D         	call	_LcNewString	;wreg free
  3909                           
  3910                           ;MMenu.c: 231:     JJuguem(menuDalt);
  3911  00036A  5025               	movf	_menuDalt^0,w,c
  3912  00036C  ECB6  F00D         	call	_JJuguem
  3913                           
  3914                           ;MMenu.c: 232:     HJuguem();
  3915  000370  EC58  F00D         	call	_HJuguem	;wreg free
  3916                           
  3917                           ;MMenu.c: 233:     state = 25;
  3918  000374  0E19               	movlw	25
  3919  000376  6E22               	movwf	MTMenu@state^0,c
  3920  000378  0C19               	retlw	25
  3921  00037A                     l4891:
  3922                           
  3923                           ;MMenu.c: 237:    if (LcLliure()) {
  3924  00037A  EC7C  F00D         	call	_LcLliure	;wreg free
  3925  00037E  A0D8               	btfss	status,0,c
  3926  000380  0012               	return	
  3927                           
  3928                           ;MMenu.c: 238:     LcGotoXY(0,1);
  3929  000382  DA93               	call	PL32	;call to abstracted procedure
  3930  000384  ECD5  F009         	call	_LcGotoXY
  3931                           
  3932                           ;MMenu.c: 239:     LcNewString("2. New User");
  3933  000388  0EE9               	movlw	low STR_6
  3934  00038A  6E63               	movwf	LcNewString@new_s^0,c
  3935  00038C  0E1F               	movlw	high STR_6
  3936  00038E  6E64               	movwf	(LcNewString@new_s+1)^0,c
  3937  000390  EC76  F00D         	call	_LcNewString	;wreg free
  3938                           
  3939                           ;MMenu.c: 240:     NovaTecla = -1;
  3940  000394  684A               	setf	_NovaTecla^0,c
  3941                           
  3942                           ;MMenu.c: 241:     state = 14;
  3943  000396  0E0E               	movlw	14
  3944  000398  6E22               	movwf	MTMenu@state^0,c
  3945  00039A  0C0E               	retlw	14
  3946  00039C                     l4901:
  3947                           
  3948                           ;MMenu.c: 245:    if (LcLliure()) {
  3949  00039C  EC7C  F00D         	call	_LcLliure	;wreg free
  3950  0003A0  A0D8               	btfss	status,0,c
  3951  0003A2  0012               	return	
  3952                           
  3953                           ;MMenu.c: 246:     LcGotoXY(0,1);
  3954  0003A4  DA82               	call	PL32	;call to abstracted procedure
  3955  0003A6  ECD5  F009         	call	_LcGotoXY
  3956                           
  3957                           ;MMenu.c: 247:     pos = 0;
  3958  0003AA  6A24               	clrf	_pos^0,c
  3959                           
  3960                           ;MMenu.c: 248:     UcreateUser();
  3961  0003AC  ECD6  F00D         	call	_UcreateUser	;wreg free
  3962  0003B0  D7CE               	goto	u4520
  3963  0003B2                     l4911:
  3964                           
  3965                           ;MMenu.c: 253:    if (NovaTecla == 8) {
  3966  0003B2  0E08               	movlw	8
  3967  0003B4  184A               	xorwf	_NovaTecla^0,w,c
  3968  0003B6  E109               	bnz	l4919
  3969                           
  3970                           ;MMenu.c: 254:     if (menuDalt<UgetNumUsuaris()-1) menuDalt++;
  3971  0003B8  6871               	setf	??_MTMenu^0,c
  3972  0003BA  6872               	setf	(??_MTMenu+1)^0,c
  3973  0003BC  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  3974  0003C0  DA4F               	call	PL10	;call to abstracted procedure
  3975  0003C2  E301 D74E          	bc	l4807
  3976  0003C6  2A25               	incf	_menuDalt^0,f,c
  3977  0003C8  D74C               	goto	l4807
  3978  0003CA                     l4919:
  3979  0003CA  0E02               	movlw	2
  3980  0003CC  184A               	xorwf	_NovaTecla^0,w,c
  3981  0003CE  E105               	bnz	l4927
  3982                           
  3983                           ;MMenu.c: 258:     if (menuDalt>0) menuDalt--;
  3984  0003D0  5025               	movf	_menuDalt^0,w,c
  3985  0003D2  E101 D746          	bz	l4807
  3986  0003D6  0625               	decf	_menuDalt^0,f,c
  3987  0003D8  D744               	goto	l4807
  3988  0003DA                     l4927:
  3989  0003DA  0E0B               	movlw	11
  3990  0003DC  184A               	xorwf	_NovaTecla^0,w,c
  3991  0003DE  E102               	bnz	l4931
  3992                           
  3993                           ;MMenu.c: 262:     NovaTecla = -1;
  3994  0003E0  684A               	setf	_NovaTecla^0,c
  3995                           
  3996                           ;MMenu.c: 263:     menuDalt = 0;
  3997                           
  3998                           ;MMenu.c: 264:     state = 0;
  3999                           
  4000                           ;MMenu.c: 265:    }
  4001  0003E2  D26C               	goto	PL72	;call to abstracted procedure
  4002  0003E4                     l4931:
  4003  0003E4  0E0A               	movlw	10
  4004  0003E6  184A               	xorwf	_NovaTecla^0,w,c
  4005  0003E8  A4D8               	btfss	status,2,c
  4006  0003EA  0012               	return	
  4007                           
  4008                           ;MMenu.c: 267:     LcClear();
  4009  0003EC  EC05  F00D         	call	_LcClear	;wreg free
  4010  0003F0  D782               	goto	l4851
  4011  0003F2                     l4937:
  4012                           
  4013                           ;MMenu.c: 272:    if (LcLliure()) {
  4014  0003F2  EC7C  F00D         	call	_LcLliure	;wreg free
  4015  0003F6  A0D8               	btfss	status,0,c
  4016  0003F8  0012               	return	
  4017                           
  4018                           ;MMenu.c: 273:     LcGotoXY(3,1);
  4019  0003FA  DA5A               	call	PL68	;call to abstracted procedure
  4020  0003FC  ECD5  F009         	call	_LcGotoXY
  4021                           
  4022                           ;MMenu.c: 274:     if(menuDalt+2 <= UgetNumUsuaris()) LcNewString(UgetUserName(menuDalt+
      +                          1));
  4023  000400  DA4C               	call	PL28	;call to abstracted procedure
  4024  000402  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  4025  000406  DA3E               	call	PL20	;call to abstracted procedure
  4026  000408  E306               	bnc	l4945
  4027  00040A  2825               	incf	_menuDalt^0,w,c
  4028  00040C  EC29  F00D         	call	_UgetUserName
  4029  000410  DA22               	call	PL8	;call to abstracted procedure
  4030  000412  EC76  F00D         	call	_LcNewString	;wreg free
  4031  000416                     l4945:
  4032                           
  4033                           ;MMenu.c: 275:     state = 21;
  4034  000416  0E15               	movlw	21
  4035  000418  6E22               	movwf	MTMenu@state^0,c
  4036  00041A  0C15               	retlw	21
  4037  00041C                     l4947:
  4038                           
  4039                           ;MMenu.c: 279:    if (JUsuari() == -1 && LcLliure()) {
  4040  00041C  ECE0  F00D         	call	_JUsuari	;wreg free
  4041  000420  0AFF               	xorlw	255
  4042  000422  A4D8               	btfss	status,2,c
  4043  000424  0012               	return	
  4044  000426  EC7C  F00D         	call	_LcLliure	;wreg free
  4045  00042A  A0D8               	btfss	status,0,c
  4046  00042C  0012               	return	
  4047                           
  4048                           ;MMenu.c: 280:     HNoJuguem();
  4049  00042E  ECF0  F00D         	call	_HNoJuguem	;wreg free
  4050                           
  4051                           ;MMenu.c: 281:     LcGotoXY(0,0);
  4052  000432  0E00               	movlw	0
  4053  000434  6A68               	clrf	LcGotoXY@Row^0,c
  4054  000436  ECD5  F009         	call	_LcGotoXY
  4055                           
  4056                           ;MMenu.c: 282:     LcNewString(Score);
  4057  00043A  0EAB               	movlw	low _Score
  4058  00043C  6E63               	movwf	LcNewString@new_s^0,c
  4059  00043E  0E1F               	movlw	high _Score
  4060  000440  6E64               	movwf	(LcNewString@new_s+1)^0,c
  4061  000442  EC76  F00D         	call	_LcNewString	;wreg free
  4062                           
  4063                           ;MMenu.c: 283:     state = 26;
  4064  000446  0E1A               	movlw	26
  4065  000448  6E22               	movwf	MTMenu@state^0,c
  4066  00044A  0C1A               	retlw	26
  4067  00044C                     l4959:
  4068                           
  4069                           ;MMenu.c: 287:    if (LcLliure()) {
  4070  00044C  EC7C  F00D         	call	_LcLliure	;wreg free
  4071  000450  A0D8               	btfss	status,0,c
  4072  000452  0012               	return	
  4073                           
  4074                           ;MMenu.c: 288:     LcGotoXY(0,1);
  4075  000454  DA2A               	call	PL32	;call to abstracted procedure
  4076  000456  ECD5  F009         	call	_LcGotoXY
  4077                           
  4078                           ;MMenu.c: 289:     LcNewString(highScore);
  4079  00045A  0EAB               	movlw	low _highScore
  4080  00045C  6E63               	movwf	LcNewString@new_s^0,c
  4081  00045E  6A64               	clrf	(LcNewString@new_s+1)^0,c
  4082  000460  EC76  F00D         	call	_LcNewString	;wreg free
  4083                           
  4084                           ;MMenu.c: 290:     NovaTecla = -1;
  4085  000464  684A               	setf	_NovaTecla^0,c
  4086                           
  4087                           ;MMenu.c: 291:     state = 27;
  4088  000466  0E1B               	movlw	27
  4089  000468  6E22               	movwf	MTMenu@state^0,c
  4090  00046A  0C1B               	retlw	27
  4091  00046C                     l4969:
  4092                           
  4093                           ;MMenu.c: 295:    if (LcLliure() && NovaTecla == 10) {
  4094  00046C  EC7C  F00D         	call	_LcLliure	;wreg free
  4095  000470  A0D8               	btfss	status,0,c
  4096  000472  0012               	return	
  4097  000474  0E0A               	movlw	10
  4098  000476  184A               	xorwf	_NovaTecla^0,w,c
  4099  000478  A4D8               	btfss	status,2,c
  4100  00047A  0012               	return	
  4101  00047C                     u4680:
  4102                           
  4103                           ;MMenu.c: 296:     menuDalt = 0;
  4104                           
  4105                           ;MMenu.c: 297:     state = 0;
  4106  00047C  D21F               	goto	PL72	;call to abstracted procedure
  4107  00047E                     l4975:
  4108                           
  4109                           ;MMenu.c: 301:    LcClear();
  4110  00047E  EC05  F00D         	call	_LcClear	;wreg free
  4111                           
  4112                           ;MMenu.c: 302:    LcPutFletxa();
  4113  000482  EC6A  F00D         	call	_LcPutFletxa	;wreg free
  4114                           
  4115                           ;MMenu.c: 303:    LcGotoXY(3,0);
  4116  000486  6A68               	clrf	LcGotoXY@Row^0,c
  4117  000488  0E03               	movlw	3
  4118  00048A  ECD5  F009         	call	_LcGotoXY
  4119                           
  4120                           ;MMenu.c: 304:    NovaTecla = -1;
  4121  00048E  684A               	setf	_NovaTecla^0,c
  4122                           
  4123                           ;MMenu.c: 305:    LcNewString(UgetUserName(menuDalt));
  4124  000490  5025               	movf	_menuDalt^0,w,c
  4125  000492  EC29  F00D         	call	_UgetUserName
  4126  000496  D9DF               	call	PL8	;call to abstracted procedure
  4127  000498  EC76  F00D         	call	_LcNewString	;wreg free
  4128                           
  4129                           ;MMenu.c: 306:    state = 29;
  4130  00049C  0E1D               	movlw	29
  4131  00049E  6E22               	movwf	MTMenu@state^0,c
  4132                           
  4133                           ;MMenu.c: 307:   break;
  4134  0004A0  0C1D               	retlw	29
  4135  0004A2                     l4983:
  4136                           
  4137                           ;MMenu.c: 309:    if (LcLliure()) {
  4138  0004A2  EC7C  F00D         	call	_LcLliure	;wreg free
  4139  0004A6  A0D8               	btfss	status,0,c
  4140  0004A8  0012               	return	
  4141                           
  4142                           ;MMenu.c: 310:     LcGotoXY(3,1);
  4143  0004AA  DA02               	call	PL68	;call to abstracted procedure
  4144  0004AC  ECD5  F009         	call	_LcGotoXY
  4145                           
  4146                           ;MMenu.c: 311:     if(menuDalt+2 <= UgetNumUsuaris()) LcNewString(UgetUserName(menuDalt+
      +                          1));
  4147  0004B0  D9F4               	call	PL28	;call to abstracted procedure
  4148  0004B2  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  4149  0004B6  D9E6               	call	PL20	;call to abstracted procedure
  4150  0004B8  E306               	bnc	l4991
  4151  0004BA  2825               	incf	_menuDalt^0,w,c
  4152  0004BC  EC29  F00D         	call	_UgetUserName
  4153  0004C0  D9CA               	call	PL8	;call to abstracted procedure
  4154  0004C2  EC76  F00D         	call	_LcNewString	;wreg free
  4155  0004C6                     l4991:
  4156                           
  4157                           ;MMenu.c: 312:     state = 30;
  4158  0004C6  0E1E               	movlw	30
  4159  0004C8  6E22               	movwf	MTMenu@state^0,c
  4160  0004CA  0C1E               	retlw	30
  4161  0004CC                     l4993:
  4162                           
  4163                           ;MMenu.c: 316:    if (NovaTecla == 8 && LcLliure()) {
  4164  0004CC  0E08               	movlw	8
  4165  0004CE  184A               	xorwf	_NovaTecla^0,w,c
  4166  0004D0  E10C               	bnz	l5003
  4167  0004D2  EC7C  F00D         	call	_LcLliure	;wreg free
  4168  0004D6  E309               	bnc	l5003
  4169                           
  4170                           ;MMenu.c: 317:     if(menuDalt<UgetNumUsuaris()-1)menuDalt++;
  4171  0004D8  6871               	setf	??_MTMenu^0,c
  4172  0004DA  6872               	setf	(??_MTMenu+1)^0,c
  4173  0004DC  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  4174  0004E0  D9BF               	call	PL10	;call to abstracted procedure
  4175  0004E2  E301 D606          	bc	l4679
  4176  0004E6  2A25               	incf	_menuDalt^0,f,c
  4177  0004E8  D604               	goto	l4679
  4178  0004EA                     l5003:
  4179  0004EA  0E02               	movlw	2
  4180  0004EC  184A               	xorwf	_NovaTecla^0,w,c
  4181  0004EE  E108               	bnz	l5013
  4182  0004F0  EC7C  F00D         	call	_LcLliure	;wreg free
  4183  0004F4  E305               	bnc	l5013
  4184                           
  4185                           ;MMenu.c: 321:     if(menuDalt>0) menuDalt--;
  4186  0004F6  5025               	movf	_menuDalt^0,w,c
  4187  0004F8  E101 D5FB          	bz	l4679
  4188  0004FC  0625               	decf	_menuDalt^0,f,c
  4189  0004FE  D5F9               	goto	l4679
  4190  000500                     l5013:
  4191  000500  0E0B               	movlw	11
  4192  000502  184A               	xorwf	_NovaTecla^0,w,c
  4193  000504  E0BB               	bz	u4680
  4194  000506  0E0A               	movlw	10
  4195  000508  184A               	xorwf	_NovaTecla^0,w,c
  4196  00050A  A4D8               	btfss	status,2,c
  4197  00050C  0012               	return	
  4198  00050E                     u4780:
  4199                           
  4200                           ;MMenu.c: 329:     state = 34;
  4201  00050E  0E22               	movlw	34
  4202  000510  6E22               	movwf	MTMenu@state^0,c
  4203  000512  0C22               	retlw	34
  4204  000514                     l5021:
  4205                           
  4206                           ;MMenu.c: 333:    if (LcLliure()) {
  4207  000514  EC7C  F00D         	call	_LcLliure	;wreg free
  4208  000518  A0D8               	btfss	status,0,c
  4209  00051A  0012               	return	
  4210                           
  4211                           ;MMenu.c: 334:     LcGotoXY(3,1);
  4212  00051C  D9C9               	call	PL68	;call to abstracted procedure
  4213  00051E  ECD5  F009         	call	_LcGotoXY
  4214                           
  4215                           ;MMenu.c: 335:     LcNewString(deleteUser);
  4216  000522  0E9F               	movlw	low _deleteUser
  4217  000524  6E63               	movwf	LcNewString@new_s^0,c
  4218  000526  0E1F               	movlw	high _deleteUser
  4219  000528  6E64               	movwf	(LcNewString@new_s+1)^0,c
  4220  00052A  EC76  F00D         	call	_LcNewString	;wreg free
  4221                           
  4222                           ;MMenu.c: 336:     state = 32;
  4223  00052E  0E20               	movlw	32
  4224  000530  6E22               	movwf	MTMenu@state^0,c
  4225  000532  0C20               	retlw	32
  4226  000534                     l5029:
  4227                           
  4228                           ;MMenu.c: 340:    if (NovaTecla == 8) {
  4229  000534  0E08               	movlw	8
  4230  000536  184A               	xorwf	_NovaTecla^0,w,c
  4231  000538  E102               	bnz	l5035
  4232                           
  4233                           ;MMenu.c: 341:     posFletxa = 1;
  4234  00053A  8C78               	bsf	(_posFletxa/(0+8))^0,_posFletxa& (0+7),c
  4235  00053C  D7E8               	goto	u4780
  4236  00053E                     l5035:
  4237  00053E  0E02               	movlw	2
  4238  000540  184A               	xorwf	_NovaTecla^0,w,c
  4239  000542  E102               	bnz	l5041
  4240                           
  4241                           ;MMenu.c: 345:     posFletxa = 0;
  4242  000544  9C78               	bcf	(_posFletxa/(0+8))^0,_posFletxa& (0+7),c
  4243  000546  D7E3               	goto	u4780
  4244  000548                     l5041:
  4245  000548  0E0A               	movlw	10
  4246  00054A  184A               	xorwf	_NovaTecla^0,w,c
  4247  00054C  E106               	bnz	l5051
  4248  00054E  AC78               	btfss	(_posFletxa/(0+8))^0,_posFletxa& (0+7),c
  4249  000550  D004               	goto	l5051
  4250                           
  4251                           ;MMenu.c: 349:     UdelUser(menuDalt);
  4252  000552  5025               	movf	_menuDalt^0,w,c
  4253  000554  EC87  F00D         	call	_UdelUser
  4254  000558  D6DE               	goto	l4861
  4255  00055A                     l5051:
  4256  00055A  0E0A               	movlw	10
  4257  00055C  184A               	xorwf	_NovaTecla^0,w,c
  4258  00055E  B4D8               	btfsc	status,2,c
  4259  000560  BC78               	btfsc	(_posFletxa/(0+8))^0,_posFletxa& (0+7),c
  4260  000562  0012               	return	
  4261                           
  4262                           ;MMenu.c: 354:     LcClear();
  4263  000564  EC05  F00D         	call	_LcClear	;wreg free
  4264                           
  4265                           ;MMenu.c: 355:     LcNewString(enterNewName);
  4266  000568  0E90               	movlw	low _enterNewName
  4267  00056A  6E63               	movwf	LcNewString@new_s^0,c
  4268  00056C  6A64               	clrf	(LcNewString@new_s+1)^0,c
  4269  00056E  EC76  F00D         	call	_LcNewString	;wreg free
  4270                           
  4271                           ;MMenu.c: 356:     NovaTecla = -1;
  4272  000572  684A               	setf	_NovaTecla^0,c
  4273                           
  4274                           ;MMenu.c: 358:     state = 33;
  4275  000574  0E21               	movlw	33
  4276  000576  6E22               	movwf	MTMenu@state^0,c
  4277  000578  0C21               	retlw	33
  4278  00057A                     l5063:
  4279                           
  4280                           ;MMenu.c: 365:    if (LcLliure()) {
  4281  00057A  EC7C  F00D         	call	_LcLliure	;wreg free
  4282  00057E  A0D8               	btfss	status,0,c
  4283  000580  0012               	return	
  4284                           
  4285                           ;MMenu.c: 366:     LcGotoXY(0,1);
  4286  000582  D993               	call	PL32	;call to abstracted procedure
  4287  000584  ECD5  F009         	call	_LcGotoXY
  4288                           
  4289                           ;MMenu.c: 367:     SMSon();
  4290  000588  ECCA  F00D         	call	_SMSon	;wreg free
  4291                           
  4292                           ;MMenu.c: 368:     pos=0;
  4293  00058C  6A24               	clrf	_pos^0,c
  4294                           
  4295                           ;MMenu.c: 369:     LcCursorOn();
  4296  00058E  EC8C  F00D         	call	_LcCursorOn	;wreg free
  4297  000592                     l5073:
  4298                           
  4299                           ;MMenu.c: 370:     state = 35;
  4300  000592  0E23               	movlw	35
  4301  000594  6E22               	movwf	MTMenu@state^0,c
  4302  000596  0C23               	retlw	35
  4303  000598                     l5075:
  4304                           
  4305                           ;MMenu.c: 374:    if (NovaTecla == 10) {
  4306  000598  0E0A               	movlw	10
  4307  00059A  184A               	xorwf	_NovaTecla^0,w,c
  4308  00059C  E101 D76E          	bz	u4680
  4309  0005A0  0E0A               	movlw	10
  4310  0005A2  184A               	xorwf	_NovaTecla^0,w,c
  4311  0005A4  A4D8               	btfss	status,2,c
  4312  0005A6  BE4A               	btfsc	_NovaTecla^0,7,c
  4313  0005A8  0012               	return	
  4314                           
  4315                           ;MMenu.c: 379:     LcPutChar(novaLletra);
  4316  0005AA  5049               	movf	_novaLletra^0,w,c
  4317  0005AC  EC30  F00B         	call	_LcPutChar
  4318                           
  4319                           ;MMenu.c: 380:     NovaTecla = -1;
  4320  0005B0  684A               	setf	_NovaTecla^0,c
  4321                           
  4322                           ;MMenu.c: 381:     UeditUsername(menuDalt,pos,novaLletra);
  4323  0005B2  C024  F060         	movff	_pos,UeditUsername@pos
  4324  0005B6  C049  F061         	movff	_novaLletra,UeditUsername@novaLletra
  4325  0005BA  5025               	movf	_menuDalt^0,w,c
  4326  0005BC  EC8B  F00C         	call	_UeditUsername
  4327                           
  4328                           ;MMenu.c: 382:     pos++;
  4329  0005C0  2A24               	incf	_pos^0,f,c
  4330                           
  4331                           ;MMenu.c: 383:     novaLletra = -1;
  4332  0005C2  6849               	setf	_novaLletra^0,c
  4333  0005C4  D7E6               	goto	l5073
  4334  0005C6                     l5093:
  4335                           
  4336                           ;MMenu.c: 388:    if (LcLliure()) {
  4337  0005C6  EC7C  F00D         	call	_LcLliure	;wreg free
  4338  0005CA  A0D8               	btfss	status,0,c
  4339  0005CC  0012               	return	
  4340                           
  4341                           ;MMenu.c: 389:                 LcGotoXY(0,0);
  4342  0005CE  0E00               	movlw	0
  4343  0005D0  6A68               	clrf	LcGotoXY@Row^0,c
  4344  0005D2  ECD5  F009         	call	_LcGotoXY
  4345                           
  4346                           ;MMenu.c: 390:     LcNewString(UgetUserName(menuDalt));
  4347  0005D6  5025               	movf	_menuDalt^0,w,c
  4348  0005D8  EC29  F00D         	call	_UgetUserName
  4349  0005DC  D93C               	call	PL8	;call to abstracted procedure
  4350  0005DE  EC76  F00D         	call	_LcNewString	;wreg free
  4351                           
  4352                           ;MMenu.c: 391:     menuDalt++;
  4353  0005E2  2A25               	incf	_menuDalt^0,f,c
  4354                           
  4355                           ;MMenu.c: 392:     state = 37;
  4356  0005E4  0E25               	movlw	37
  4357  0005E6  6E22               	movwf	MTMenu@state^0,c
  4358  0005E8  0C25               	retlw	37
  4359  0005EA                     l5103:
  4360                           
  4361                           ;MMenu.c: 396:    if (LcLliure() && menuDalt < UgetNumUsuaris()) {
  4362  0005EA  EC7C  F00D         	call	_LcLliure	;wreg free
  4363  0005EE  E311               	bnc	l5115
  4364  0005F0  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  4365  0005F4  6025               	cpfslt	_menuDalt^0,c
  4366  0005F6  D00D               	goto	l5115
  4367                           
  4368                           ;MMenu.c: 397:     LcGotoXY(0,1);
  4369  0005F8  D958               	call	PL32	;call to abstracted procedure
  4370  0005FA  ECD5  F009         	call	_LcGotoXY
  4371                           
  4372                           ;MMenu.c: 398:     LcNewString(UgetUserName(menuDalt));
  4373  0005FE  5025               	movf	_menuDalt^0,w,c
  4374  000600  EC29  F00D         	call	_UgetUserName
  4375  000604  D928               	call	PL8	;call to abstracted procedure
  4376  000606  EC76  F00D         	call	_LcNewString	;wreg free
  4377                           
  4378                           ;MMenu.c: 399:     menuDalt++;
  4379  00060A  2A25               	incf	_menuDalt^0,f,c
  4380  00060C                     l5113:
  4381                           
  4382                           ;MMenu.c: 400:     state = 38;
  4383  00060C  0E26               	movlw	38
  4384  00060E  6E22               	movwf	MTMenu@state^0,c
  4385                           
  4386                           ;MMenu.c: 401:    }
  4387  000610  0C26               	retlw	38
  4388  000612                     l5115:
  4389  000612  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  4390  000616  1825               	xorwf	_menuDalt^0,w,c
  4391  000618  A4D8               	btfss	status,2,c
  4392  00061A  0012               	return	
  4393  00061C  EC7C  F00D         	call	_LcLliure	;wreg free
  4394  000620  A0D8               	btfss	status,0,c
  4395  000622  0012               	return	
  4396                           
  4397                           ;MMenu.c: 403:     LcGotoXY(17,0);
  4398  000624  6A68               	clrf	LcGotoXY@Row^0,c
  4399  000626  0E11               	movlw	17
  4400  000628  ECD5  F009         	call	_LcGotoXY
  4401                           
  4402                           ;MMenu.c: 404:     LcNewString(UgetUserName(menuDalt-1));
  4403  00062C  0425               	decf	_menuDalt^0,w,c
  4404  00062E  EC29  F00D         	call	_UgetUserName
  4405  000632  D911               	call	PL8	;call to abstracted procedure
  4406  000634  EC76  F00D         	call	_LcNewString	;wreg free
  4407  000638                     l5123:
  4408                           
  4409                           ;MMenu.c: 405:     state = 40;
  4410  000638  0E28               	movlw	40
  4411  00063A  6E22               	movwf	MTMenu@state^0,c
  4412  00063C  0C28               	retlw	40
  4413  00063E                     l5125:
  4414                           
  4415                           ;MMenu.c: 409:    if (LcLliure() && menuDalt < UgetNumUsuaris()) {
  4416  00063E  EC7C  F00D         	call	_LcLliure	;wreg free
  4417  000642  E312               	bnc	l5137
  4418  000644  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  4419  000648  6025               	cpfslt	_menuDalt^0,c
  4420  00064A  D00E               	goto	l5137
  4421                           
  4422                           ;MMenu.c: 410:     LcGotoXY(17,0);
  4423  00064C  6A68               	clrf	LcGotoXY@Row^0,c
  4424  00064E  0E11               	movlw	17
  4425  000650  ECD5  F009         	call	_LcGotoXY
  4426                           
  4427                           ;MMenu.c: 411:     LcNewString(UgetUserName(menuDalt));
  4428  000654  5025               	movf	_menuDalt^0,w,c
  4429  000656  EC29  F00D         	call	_UgetUserName
  4430  00065A  D8FD               	call	PL8	;call to abstracted procedure
  4431  00065C  EC76  F00D         	call	_LcNewString	;wreg free
  4432                           
  4433                           ;MMenu.c: 412:     menuDalt++;
  4434  000660  2A25               	incf	_menuDalt^0,f,c
  4435                           
  4436                           ;MMenu.c: 413:     state = 39;
  4437  000662  0E27               	movlw	39
  4438  000664  6E22               	movwf	MTMenu@state^0,c
  4439                           
  4440                           ;MMenu.c: 414:    }
  4441  000666  0C27               	retlw	39
  4442  000668                     l5137:
  4443  000668  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  4444  00066C  1825               	xorwf	_menuDalt^0,w,c
  4445  00066E  A4D8               	btfss	status,2,c
  4446  000670  0012               	return	
  4447  000672  EC7C  F00D         	call	_LcLliure	;wreg free
  4448  000676  A0D8               	btfss	status,0,c
  4449  000678  0012               	return	
  4450                           
  4451                           ;MMenu.c: 416:     LcGotoXY(17,0);
  4452  00067A  6A68               	clrf	LcGotoXY@Row^0,c
  4453  00067C  0E11               	movlw	17
  4454  00067E  ECD5  F009         	call	_LcGotoXY
  4455                           
  4456                           ;MMenu.c: 417:     LcNewString(UgetUserName(menuDalt-2));
  4457  000682  5025               	movf	_menuDalt^0,w,c
  4458  000684  0FFE               	addlw	254
  4459  000686  EC29  F00D         	call	_UgetUserName
  4460  00068A  D8E5               	call	PL8	;call to abstracted procedure
  4461  00068C  EC76  F00D         	call	_LcNewString	;wreg free
  4462                           
  4463                           ;MMenu.c: 418:     state = 43;
  4464  000690  0E2B               	movlw	43
  4465  000692  6E22               	movwf	MTMenu@state^0,c
  4466  000694  0C2B               	retlw	43
  4467  000696                     l5147:
  4468                           
  4469                           ;MMenu.c: 422:    if (LcLliure() && menuDalt < UgetNumUsuaris()) {
  4470  000696  EC7C  F00D         	call	_LcLliure	;wreg free
  4471  00069A  E30F               	bnc	l5159
  4472  00069C  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  4473  0006A0  6025               	cpfslt	_menuDalt^0,c
  4474  0006A2  D00B               	goto	l5159
  4475                           
  4476                           ;MMenu.c: 423:     LcGotoXY(17,1);
  4477  0006A4  D908               	call	PL70	;call to abstracted procedure
  4478  0006A6  ECD5  F009         	call	_LcGotoXY
  4479                           
  4480                           ;MMenu.c: 424:     LcNewString(UgetUserName(menuDalt));
  4481  0006AA  5025               	movf	_menuDalt^0,w,c
  4482  0006AC  EC29  F00D         	call	_UgetUserName
  4483  0006B0  D8D2               	call	PL8	;call to abstracted procedure
  4484  0006B2  EC76  F00D         	call	_LcNewString	;wreg free
  4485                           
  4486                           ;MMenu.c: 425:     menuDalt++;
  4487  0006B6  2A25               	incf	_menuDalt^0,f,c
  4488  0006B8  D7BF               	goto	l5123
  4489  0006BA                     l5159:
  4490  0006BA  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  4491  0006BE  1825               	xorwf	_menuDalt^0,w,c
  4492  0006C0  E0BB               	bz	l5123
  4493  0006C2  0012               	return	
  4494  0006C4                     l5163:
  4495                           
  4496                           ;MMenu.c: 433:    if (LcLliure()) {
  4497  0006C4  EC7C  F00D         	call	_LcLliure	;wreg free
  4498  0006C8  A0D8               	btfss	status,0,c
  4499  0006CA  0012               	return	
  4500                           
  4501                           ;MMenu.c: 434:     TiResetTics(timerMenu);
  4502  0006CC  5023               	movf	_timerMenu^0,w,c
  4503  0006CE  ECF7  F00C         	call	_TiResetTics
  4504                           
  4505                           ;MMenu.c: 435:     pos = 0;
  4506  0006D2  6A24               	clrf	_pos^0,c
  4507  0006D4                     l5169:
  4508                           
  4509                           ;MMenu.c: 436:     state = 41;
  4510  0006D4  0E29               	movlw	41
  4511  0006D6  6E22               	movwf	MTMenu@state^0,c
  4512  0006D8  0C29               	retlw	41
  4513  0006DA                     l5171:
  4514                           
  4515                           ;MMenu.c: 440:    if (TiGetTics(timerMenu) > 1000) {
  4516  0006DA  5023               	movf	_timerMenu^0,w,c
  4517  0006DC  ECC5  F00C         	call	_TiGetTics
  4518  0006E0  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  4519  0006E2  D008               	goto	l5175
  4520  0006E4  0EE9               	movlw	233
  4521  0006E6  5C60               	subwf	?_TiGetTics^0,w,c
  4522  0006E8  0E03               	movlw	3
  4523  0006EA  5861               	subwfb	(?_TiGetTics+1)^0,w,c
  4524  0006EC  E303               	bnc	l5175
  4525                           
  4526                           ;MMenu.c: 441:     state = 42;
  4527  0006EE  0E2A               	movlw	42
  4528  0006F0  6E22               	movwf	MTMenu@state^0,c
  4529                           
  4530                           ;MMenu.c: 442:    }
  4531  0006F2  0C2A               	retlw	42
  4532  0006F4                     l5175:
  4533  0006F4  0E0B               	movlw	11
  4534  0006F6  184A               	xorwf	_NovaTecla^0,w,c
  4535  0006F8  E101 D6C0          	bz	u4680
  4536  0006FC  0012               	return	
  4537  0006FE                     l5179:
  4538                           
  4539                           ;MMenu.c: 449:    if (pos < 16) {
  4540  0006FE  0E10               	movlw	16
  4541  000700  6024               	cpfslt	_pos^0,c
  4542  000702  D007               	goto	l5189
  4543                           
  4544                           ;MMenu.c: 450:     TiResetTics(timerMenu);
  4545  000704  5023               	movf	_timerMenu^0,w,c
  4546  000706  ECF7  F00C         	call	_TiResetTics
  4547                           
  4548                           ;MMenu.c: 451:     LcScroll();
  4549  00070A  ECCD  F00D         	call	_LcScroll	;wreg free
  4550                           
  4551                           ;MMenu.c: 452:     pos++;
  4552  00070E  2A24               	incf	_pos^0,f,c
  4553  000710  D7E1               	goto	l5169
  4554  000712                     l5189:
  4555  000712  0E0F               	movlw	15
  4556  000714  6424               	cpfsgt	_pos^0,c
  4557  000716  D005               	goto	l5195
  4558  000718  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  4559  00071C  6025               	cpfslt	_menuDalt^0,c
  4560  00071E  D001               	goto	l5195
  4561  000720  D775               	goto	l5113
  4562  000722                     l5195:
  4563  000722  0E0F               	movlw	15
  4564  000724  6424               	cpfsgt	_pos^0,c
  4565  000726  0C0F               	retlw	15
  4566  000728  ECD4  F00D         	call	_UgetNumUsuaris	;wreg free
  4567  00072C  1825               	xorwf	_menuDalt^0,w,c
  4568  00072E  A4D8               	btfss	status,2,c
  4569  000730  0012               	return	
  4570                           
  4571                           ;MMenu.c: 459:     menuDalt = 0;
  4572  000732  6A25               	clrf	_menuDalt^0,c
  4573  000734  D4F3               	goto	l4693
  4574  000736                     l5203:
  4575                           
  4576                           ;MMenu.c: 464:    if (LcLliure()) {
  4577  000736  EC7C  F00D         	call	_LcLliure	;wreg free
  4578  00073A  A0D8               	btfss	status,0,c
  4579  00073C  0012               	return	
  4580                           
  4581                           ;MMenu.c: 465:     LcGotoXY(17,1);
  4582  00073E  D8BB               	call	PL70	;call to abstracted procedure
  4583  000740  ECD5  F009         	call	_LcGotoXY
  4584                           
  4585                           ;MMenu.c: 466:     LcNewString(UgetUserName(menuDalt-1));
  4586  000744  0425               	decf	_menuDalt^0,w,c
  4587  000746  EC29  F00D         	call	_UgetUserName
  4588  00074A  D885               	call	PL8	;call to abstracted procedure
  4589  00074C  EC76  F00D         	call	_LcNewString	;wreg free
  4590  000750  D773               	goto	l5123
  4591  000752                     l5213:
  4592  000752  5022               	movf	MTMenu@state^0,w,c
  4593  000754  6E71               	movwf	??_MTMenu^0,c
  4594  000756  6A72               	clrf	(??_MTMenu+1)^0,c
  4595                           
  4596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4597                           ; Switch size 1, requested type "space"
  4598                           ; Number of cases is 1, Range of values is 0 to 0
  4599                           ; switch strategies available:
  4600                           ; Name         Instructions Cycles
  4601                           ; simple_byte            4     3 (average)
  4602                           ;	Chosen strategy is simple_byte
  4603  000758  5072               	movf	(??_MTMenu+1)^0,w,c
  4604  00075A  A4D8               	btfss	status,2,c
  4605  00075C  0012               	return	
  4606                           
  4607                           ; Switch size 1, requested type "space"
  4608                           ; Number of cases is 41, Range of values is 0 to 43
  4609                           ; switch strategies available:
  4610                           ; Name         Instructions Cycles
  4611                           ; simple_byte          124    63 (average)
  4612                           ;	Chosen strategy is simple_byte
  4613  00075E  5071               	movf	??_MTMenu^0,w,c
  4614  000760  E101 D46A          	bz	l4603
  4615  000764  0A01               	xorlw	1	; case 1
  4616  000766  E101 D47A          	bz	l4619
  4617  00076A  0A03               	xorlw	3	; case 2
  4618  00076C  E101 D4D9          	bz	l4695
  4619  000770  0A01               	xorlw	1	; case 3
  4620  000772  E101 D54D          	bz	l4783
  4621  000776  0A07               	xorlw	7	; case 4
  4622  000778  E101 D4E0          	bz	l4701
  4623  00077C  0A01               	xorlw	1	; case 5
  4624  00077E  E101 D505          	bz	l4729
  4625  000782  0A03               	xorlw	3	; case 6
  4626  000784  E101 D50E          	bz	l4739
  4627  000788  0A01               	xorlw	1	; case 7
  4628  00078A  E101 D517          	bz	l4749
  4629  00078E  0A0F               	xorlw	15	; case 8
  4630  000790  E101 D51A          	bz	l4753
  4631  000794  0A01               	xorlw	1	; case 9
  4632  000796  E101 D523          	bz	l4763
  4633  00079A  0A03               	xorlw	3	; case 10
  4634  00079C  E101 D52C          	bz	l4773
  4635  0007A0  0A01               	xorlw	1	; case 11
  4636  0007A2  E101 D4E1          	bz	l4719
  4637  0007A6  0A07               	xorlw	7	; case 12
  4638  0007A8  E101 D544          	bz	l4791
  4639  0007AC  0A01               	xorlw	1	; case 13
  4640  0007AE  E101 D5E4          	bz	l4891
  4641  0007B2  0A03               	xorlw	3	; case 14
  4642  0007B4  E101 D54B          	bz	l4797
  4643  0007B8  0A1E               	xorlw	30	; case 16
  4644  0007BA  E101 D5EF          	bz	l4901
  4645  0007BE  0A01               	xorlw	1	; case 17
  4646  0007C0  E101 D566          	bz	l4823
  4647  0007C4  0A02               	xorlw	2	; case 19
  4648  0007C6  E101 D5BE          	bz	l4875
  4649  0007CA  0A07               	xorlw	7	; case 20
  4650  0007CC  E101 D5A5          	bz	l4865
  4651  0007D0  0A01               	xorlw	1	; case 21
  4652  0007D2  E101 D5EE          	bz	l4911
  4653  0007D6  0A02               	xorlw	2	; case 23
  4654  0007D8  E101 D60B          	bz	l4937
  4655  0007DC  0A0F               	xorlw	15	; case 24
  4656  0007DE  E101 D5B9          	bz	l4879
  4657  0007E2  0A01               	xorlw	1	; case 25
  4658  0007E4  E101 D61A          	bz	l4947
  4659  0007E8  0A03               	xorlw	3	; case 26
  4660  0007EA  E101 D62F          	bz	l4959
  4661  0007EE  0A01               	xorlw	1	; case 27
  4662  0007F0  E101 D63C          	bz	l4969
  4663  0007F4  0A07               	xorlw	7	; case 28
  4664  0007F6  E101 D642          	bz	l4975
  4665  0007FA  0A01               	xorlw	1	; case 29
  4666  0007FC  E101 D651          	bz	l4983
  4667  000800  0A03               	xorlw	3	; case 30
  4668  000802  E101 D663          	bz	l4993
  4669  000806  0A01               	xorlw	1	; case 31
  4670  000808  E101 D684          	bz	l5021
  4671  00080C  0A3F               	xorlw	63	; case 32
  4672  00080E  E101 D691          	bz	l5029
  4673  000812  0A01               	xorlw	1	; case 33
  4674  000814  E101 D6B1          	bz	l5063
  4675  000818  0A03               	xorlw	3	; case 34
  4676  00081A  B4D8               	btfsc	status,2,c
  4677  00081C  0012               	return	
  4678  00081E  0A01               	xorlw	1	; case 35
  4679  000820  E101 D6BA          	bz	l5075
  4680  000824  0A07               	xorlw	7	; case 36
  4681  000826  E101 D6CE          	bz	l5093
  4682  00082A  0A01               	xorlw	1	; case 37
  4683  00082C  E101 D6DD          	bz	l5103
  4684  000830  0A03               	xorlw	3	; case 38
  4685  000832  E101 D704          	bz	l5125
  4686  000836  0A01               	xorlw	1	; case 39
  4687  000838  E101 D72D          	bz	l5147
  4688  00083C  0A0F               	xorlw	15	; case 40
  4689  00083E  E101 D741          	bz	l5163
  4690  000842  0A01               	xorlw	1	; case 41
  4691  000844  E101 D749          	bz	l5171
  4692  000848  0A03               	xorlw	3	; case 42
  4693  00084A  E101 D758          	bz	l5179
  4694  00084E  0A01               	xorlw	1	; case 43
  4695  000850  E101 D771          	bz	l5203
  4696  000854  0012               	return		;funcret
  4697  000856                     __end_of_MTMenu:
  4698                           	callstack 0
  4699  000856                     PL8:
  4700                           	callstack 22
  4701  000856  C060  F063         	movff	?_UgetUserName,LcNewString@new_s
  4702  00085A  C061  F064         	movff	?_UgetUserName+1,LcNewString@new_s+1
  4703  00085E  0012               	return	
  4704  000860                     __end_ofPL8:
  4705                           	callstack 0
  4706  000860                     PL10:
  4707                           	callstack 22
  4708  000860  6E73               	movwf	(??_MTMenu+2)^0,c
  4709  000862  6A74               	clrf	(??_MTMenu+3)^0,c
  4710  000864  5071               	movf	??_MTMenu^0,w,c
  4711  000866  2673               	addwf	(??_MTMenu+2)^0,f,c
  4712  000868  5072               	movf	(??_MTMenu+1)^0,w,c
  4713  00086A  2274               	addwfc	(??_MTMenu+3)^0,f,c
  4714  00086C  5025               	movf	_menuDalt^0,w,c
  4715  00086E  6E75               	movwf	(??_MTMenu+4)^0,c
  4716  000870  6A76               	clrf	(??_MTMenu+5)^0,c
  4717  000872  5073               	movf	(??_MTMenu+2)^0,w,c
  4718  000874  5C75               	subwf	(??_MTMenu+4)^0,w,c
  4719  000876  5076               	movf	(??_MTMenu+5)^0,w,c
  4720  000878  0A80               	xorlw	128
  4721  00087A  6E77               	movwf	(??_MTMenu+6)^0,c
  4722  00087C  5074               	movf	(??_MTMenu+3)^0,w,c
  4723  00087E  0A80               	xorlw	128
  4724  000880  5877               	subwfb	(??_MTMenu+6)^0,w,c
  4725  000882  0012               	return	
  4726  000884                     __end_ofPL10:
  4727                           	callstack 0
  4728  000884                     PL20:
  4729                           	callstack 22
  4730  000884  6E73               	movwf	(??_MTMenu+2)^0,c
  4731  000886  6A74               	clrf	(??_MTMenu+3)^0,c
  4732  000888  5071               	movf	??_MTMenu^0,w,c
  4733  00088A  5C73               	subwf	(??_MTMenu+2)^0,w,c
  4734  00088C  5074               	movf	(??_MTMenu+3)^0,w,c
  4735  00088E  0A80               	xorlw	128
  4736  000890  6E75               	movwf	(??_MTMenu+4)^0,c
  4737  000892  5072               	movf	(??_MTMenu+1)^0,w,c
  4738  000894  0A80               	xorlw	128
  4739  000896  5875               	subwfb	(??_MTMenu+4)^0,w,c
  4740  000898  0012               	return	
  4741  00089A                     __end_ofPL20:
  4742                           	callstack 0
  4743  00089A                     PL28:
  4744                           	callstack 22
  4745  00089A  5025               	movf	_menuDalt^0,w,c
  4746  00089C  6E71               	movwf	??_MTMenu^0,c
  4747  00089E  6A72               	clrf	(??_MTMenu+1)^0,c
  4748  0008A0  0E02               	movlw	2
  4749  0008A2  2671               	addwf	??_MTMenu^0,f,c
  4750  0008A4  0E00               	movlw	0
  4751  0008A6  2272               	addwfc	(??_MTMenu+1)^0,f,c
  4752  0008A8  0C00               	retlw	0
  4753  0008AA                     __end_ofPL28:
  4754                           	callstack 0
  4755  0008AA                     PL32:
  4756                           	callstack 25
  4757  0008AA  0E01               	movlw	1
  4758  0008AC  6E68               	movwf	LcGotoXY@Row^0,c
  4759  0008AE  0C00               	retlw	0
  4760  0008B0                     __end_ofPL32:
  4761                           	callstack 0
  4762  0008B0                     PL68:
  4763                           	callstack 22
  4764  0008B0  0E01               	movlw	1
  4765  0008B2  6E68               	movwf	LcGotoXY@Row^0,c
  4766  0008B4  0C03               	retlw	3
  4767  0008B6                     __end_ofPL68:
  4768                           	callstack 0
  4769  0008B6                     PL70:
  4770                           	callstack 22
  4771  0008B6  0E01               	movlw	1
  4772  0008B8  6E68               	movwf	LcGotoXY@Row^0,c
  4773  0008BA  0C11               	retlw	17
  4774  0008BC                     __end_ofPL70:
  4775                           	callstack 0
  4776  0008BC                     PL72:
  4777                           	callstack 22
  4778  0008BC  6A25               	clrf	_menuDalt^0,c
  4779  0008BE  6A22               	clrf	MTMenu@state^0,c
  4780  0008C0  0012               	return	
  4781  0008C2                     __end_ofPL72:
  4782                           	callstack 0
  4783                           
  4784 ;; *************** function _UgetUserName *****************
  4785 ;; Defined at:
  4786 ;;		line 37 in file "UUsuaris.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  quin            1    wreg     unsigned char 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  quin            1    7[COMRAM] unsigned char 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  2    5[COMRAM] PTR unsigned char 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0, prodl, prodh
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1
  4800 ;;      Params:         2       0       0
  4801 ;;      Locals:         1       0       0
  4802 ;;      Temps:          0       0       0
  4803 ;;      Totals:         3       0       0
  4804 ;;Total ram usage:        3 bytes
  4805 ;; Hardware stack levels used: 1
  4806 ;; Hardware stack levels required when called: 2
  4807 ;; This function calls:
  4808 ;;		Nothing
  4809 ;; This function is called by:
  4810 ;;		_MTMenu
  4811 ;;		_SIOMotor
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text22
  4816  001A52                     __ptext22:
  4817                           	callstack 0
  4818  001A52                     _UgetUserName:
  4819                           	callstack 27
  4820                           
  4821                           ;incstack = 0
  4822                           ;UgetUserName@quin stored from wreg
  4823  001A52  6E62               	movwf	UgetUserName@quin^0,c
  4824                           
  4825                           ;UUsuaris.c: 38:     return usuaris[quin].username;
  4826  001A54  5062               	movf	UgetUserName@quin^0,w,c
  4827  001A56  0D0C               	mullw	12
  4828  001A58  0E00               	movlw	low _usuaris
  4829  001A5A  24F3               	addwf	243,w,c
  4830  001A5C  6E60               	movwf	?_UgetUserName^0,c
  4831  001A5E  0E01               	movlw	high _usuaris
  4832  001A60  20F4               	addwfc	prodh,w,c
  4833  001A62  6E61               	movwf	(?_UgetUserName+1)^0,c
  4834  001A64  0012               	return		;funcret
  4835  001A66                     __end_of_UgetUserName:
  4836                           	callstack 0
  4837                           
  4838 ;; *************** function _UgetNumUsuaris *****************
  4839 ;; Defined at:
  4840 ;;		line 98 in file "UUsuaris.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      unsigned char 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1
  4854 ;;      Params:         0       0       0
  4855 ;;      Locals:         0       0       0
  4856 ;;      Temps:          0       0       0
  4857 ;;      Totals:         0       0       0
  4858 ;;Total ram usage:        0 bytes
  4859 ;; Hardware stack levels used: 1
  4860 ;; Hardware stack levels required when called: 2
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_MTMenu
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text23
  4869  001BA8                     __ptext23:
  4870                           	callstack 0
  4871  001BA8                     _UgetNumUsuaris:
  4872                           	callstack 27
  4873                           
  4874                           ;UUsuaris.c: 99:     return numUsuaris;
  4875                           
  4876                           ;incstack = 0
  4877  001BA8  500D               	movf	_numUsuaris^0,w,c
  4878  001BAA  0012               	return		;funcret
  4879  001BAC                     __end_of_UgetNumUsuaris:
  4880                           	callstack 0
  4881                           
  4882 ;; *************** function _UeditUsername *****************
  4883 ;; Defined at:
  4884 ;;		line 115 in file "UUsuaris.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;  menuDalt        1    wreg     unsigned char 
  4887 ;;  pos             1    5[COMRAM] unsigned char 
  4888 ;;  novaLletra      1    6[COMRAM] unsigned char 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  menuDalt        1    9[COMRAM] unsigned char 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1
  4900 ;;      Params:         2       0       0
  4901 ;;      Locals:         1       0       0
  4902 ;;      Temps:          2       0       0
  4903 ;;      Totals:         5       0       0
  4904 ;;Total ram usage:        5 bytes
  4905 ;; Hardware stack levels used: 1
  4906 ;; Hardware stack levels required when called: 2
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_MTMenu
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	text24
  4915  001916                     __ptext24:
  4916                           	callstack 0
  4917  001916                     _UeditUsername:
  4918                           	callstack 27
  4919                           
  4920                           ;incstack = 0
  4921                           ;UeditUsername@menuDalt stored from wreg
  4922  001916  6E64               	movwf	UeditUsername@menuDalt^0,c
  4923                           
  4924                           ;UUsuaris.c: 116:     usuaris[menuDalt].username[pos] = novaLletra;
  4925  001918  5064               	movf	UeditUsername@menuDalt^0,w,c
  4926  00191A  0D0C               	mullw	12
  4927  00191C  0E00               	movlw	low _usuaris
  4928  00191E  6E62               	movwf	??_UeditUsername^0,c
  4929  001920  0E01               	movlw	high _usuaris
  4930  001922  6E63               	movwf	(??_UeditUsername+1)^0,c
  4931  001924  50F3               	movf	243,w,c
  4932  001926  2662               	addwf	??_UeditUsername^0,f,c
  4933  001928  50F4               	movf	244,w,c
  4934  00192A  2263               	addwfc	(??_UeditUsername+1)^0,f,c
  4935  00192C  5060               	movf	UeditUsername@pos^0,w,c
  4936  00192E  2462               	addwf	??_UeditUsername^0,w,c
  4937  001930  6ED9               	movwf	fsr2l,c
  4938  001932  0E00               	movlw	0
  4939  001934  2063               	addwfc	(??_UeditUsername+1)^0,w,c
  4940  001936  6EDA               	movwf	fsr2h,c
  4941  001938  C061  FFDF         	movff	UeditUsername@novaLletra,indf2
  4942  00193C  0012               	return		;funcret
  4943  00193E                     __end_of_UeditUsername:
  4944                           	callstack 0
  4945                           
  4946 ;; *************** function _UdelUser *****************
  4947 ;; Defined at:
  4948 ;;		line 110 in file "UUsuaris.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  index           1    wreg     unsigned char 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  index           1    5[COMRAM] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1
  4962 ;;      Params:         0       0       0
  4963 ;;      Locals:         1       0       0
  4964 ;;      Temps:          0       0       0
  4965 ;;      Totals:         1       0       0
  4966 ;;Total ram usage:        1 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 2
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_MTMenu
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text25
  4977  001B0E                     __ptext25:
  4978                           	callstack 0
  4979  001B0E                     _UdelUser:
  4980                           	callstack 27
  4981                           
  4982                           ;incstack = 0
  4983                           ;UdelUser@index stored from wreg
  4984  001B0E  6E60               	movwf	UdelUser@index^0,c
  4985                           
  4986                           ;UUsuaris.c: 111:     delUser = index;
  4987  001B10  C060  F042         	movff	UdelUser@index,_delUser
  4988                           
  4989                           ;UUsuaris.c: 112:     numUsuaris--;
  4990  001B14  060D               	decf	_numUsuaris^0,f,c
  4991  001B16  0012               	return		;funcret
  4992  001B18                     __end_of_UdelUser:
  4993                           	callstack 0
  4994                           
  4995 ;; *************** function _UcreateUser *****************
  4996 ;; Defined at:
  4997 ;;		line 82 in file "UUsuaris.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		None
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1
  5011 ;;      Params:         0       0       0
  5012 ;;      Locals:         0       0       0
  5013 ;;      Temps:          0       0       0
  5014 ;;      Totals:         0       0       0
  5015 ;;Total ram usage:        0 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; Hardware stack levels required when called: 2
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_MTMenu
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text26
  5026  001BAC                     __ptext26:
  5027                           	callstack 0
  5028  001BAC                     _UcreateUser:
  5029                           	callstack 27
  5030                           
  5031                           ;UUsuaris.c: 83:     createUser = 1;
  5032                           
  5033                           ;incstack = 0
  5034  001BAC  8078               	bsf	(_createUser/(0+8))^0,_createUser& (0+7),c
  5035  001BAE  0012               	return		;funcret
  5036  001BB0                     __end_of_UcreateUser:
  5037                           	callstack 0
  5038                           
  5039 ;; *************** function _UCancelaNouUser *****************
  5040 ;; Defined at:
  5041 ;;		line 28 in file "UUsuaris.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		None
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1
  5055 ;;      Params:         0       0       0
  5056 ;;      Locals:         0       0       0
  5057 ;;      Temps:          0       0       0
  5058 ;;      Totals:         0       0       0
  5059 ;;Total ram usage:        0 bytes
  5060 ;; Hardware stack levels used: 1
  5061 ;; Hardware stack levels required when called: 2
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_MTMenu
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           	psect	text27
  5070  001BB0                     __ptext27:
  5071                           	callstack 0
  5072  001BB0                     _UCancelaNouUser:
  5073                           	callstack 27
  5074                           
  5075                           ;UUsuaris.c: 29:     createUser = 0;
  5076                           
  5077                           ;incstack = 0
  5078  001BB0  9078               	bcf	(_createUser/(0+8))^0,_createUser& (0+7),c
  5079  001BB2  0012               	return		;funcret
  5080  001BB4                     __end_of_UCancelaNouUser:
  5081                           	callstack 0
  5082                           
  5083 ;; *************** function _UAfegirLletraUsername *****************
  5084 ;; Defined at:
  5085 ;;		line 85 in file "UUsuaris.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  lletra          1    wreg     unsigned char 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  lletra          1    7[COMRAM] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  1    wreg      void 
  5092 ;; Registers used:
  5093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1
  5099 ;;      Params:         0       0       0
  5100 ;;      Locals:         1       0       0
  5101 ;;      Temps:          2       0       0
  5102 ;;      Totals:         3       0       0
  5103 ;;Total ram usage:        3 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; Hardware stack levels required when called: 2
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_MTMenu
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text28
  5114  001758                     __ptext28:
  5115                           	callstack 0
  5116  001758                     _UAfegirLletraUsername:
  5117                           	callstack 27
  5118                           
  5119                           ;incstack = 0
  5120                           ;UAfegirLletraUsername@lletra stored from wreg
  5121  001758  6E62               	movwf	UAfegirLletraUsername@lletra^0,c
  5122                           
  5123                           ;UUsuaris.c: 86:  if(createUser) usuaris[numUsuaris].username[pos]=lletra;
  5124  00175A  A078               	btfss	(_createUser/(0+8))^0,_createUser& (0+7),c
  5125  00175C  D003               	goto	l4129
  5126  00175E  D80D               	call	PL12	;call to abstracted procedure
  5127  001760  C062  FFDF         	movff	UAfegirLletraUsername@lletra,indf2
  5128  001764                     l4129:
  5129                           
  5130                           ;UUsuaris.c: 87:  if (lletra != '\0'){
  5131  001764  5062               	movf	UAfegirLletraUsername@lletra^0,w,c
  5132  001766  E002               	bz	l4133
  5133                           
  5134                           ;UUsuaris.c: 88:         pos++;
  5135  001768  2A24               	incf	_pos^0,f,c
  5136                           
  5137                           ;UUsuaris.c: 89:     }else{
  5138  00176A  0012               	return	
  5139  00176C                     l4133:
  5140                           
  5141                           ;UUsuaris.c: 90:         usuaris[numUsuaris].username[pos] = '\0';
  5142  00176C  D806               	call	PL12	;call to abstracted procedure
  5143  00176E  0E00               	movlw	0
  5144  001770  6ADF               	clrf	indf2,c
  5145                           
  5146                           ;UUsuaris.c: 91:         pos = 0;
  5147  001772  6A24               	clrf	_pos^0,c
  5148                           
  5149                           ;UUsuaris.c: 92:         createUser = 0;
  5150  001774  9078               	bcf	(_createUser/(0+8))^0,_createUser& (0+7),c
  5151                           
  5152                           ;UUsuaris.c: 93:         numUsuaris++;
  5153  001776  2A0D               	incf	_numUsuaris^0,f,c
  5154  001778  0012               	return		;funcret
  5155  00177A                     __end_of_UAfegirLletraUsername:
  5156                           	callstack 0
  5157  00177A                     PL12:
  5158                           	callstack 27
  5159  00177A  500D               	movf	_numUsuaris^0,w,c
  5160  00177C  0D0C               	mullw	12
  5161  00177E  0E00               	movlw	low _usuaris
  5162  001780  6E60               	movwf	??_UAfegirLletraUsername^0,c
  5163  001782  0E01               	movlw	high _usuaris
  5164  001784  6E61               	movwf	(??_UAfegirLletraUsername+1)^0,c
  5165  001786  50F3               	movf	243,w,c
  5166  001788  2660               	addwf	??_UAfegirLletraUsername^0,f,c
  5167  00178A  50F4               	movf	244,w,c
  5168  00178C  2261               	addwfc	(??_UAfegirLletraUsername+1)^0,f,c
  5169  00178E  5024               	movf	_pos^0,w,c
  5170  001790  2460               	addwf	??_UAfegirLletraUsername^0,w,c
  5171  001792  6ED9               	movwf	fsr2l,c
  5172  001794  0E00               	movlw	0
  5173  001796  2061               	addwfc	(??_UAfegirLletraUsername+1)^0,w,c
  5174  001798  6EDA               	movwf	fsr2h,c
  5175  00179A  0012               	return	
  5176  00179C                     __end_ofPL12:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _SiFerMenu *****************
  5180 ;; Defined at:
  5181 ;;		line 19 in file "GLCDGestioLCD.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		None
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1
  5195 ;;      Params:         0       0       0
  5196 ;;      Locals:         0       0       0
  5197 ;;      Temps:          0       0       0
  5198 ;;      Totals:         0       0       0
  5199 ;;Total ram usage:        0 bytes
  5200 ;; Hardware stack levels used: 1
  5201 ;; Hardware stack levels required when called: 2
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_MTMenu
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text29
  5210  001BB4                     __ptext29:
  5211                           	callstack 0
  5212  001BB4                     _SiFerMenu:
  5213                           	callstack 27
  5214                           
  5215                           ;GLCDGestioLCD.c: 20:     ferMenu = 1;
  5216                           
  5217                           ;incstack = 0
  5218  001BB4  8A78               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5219  001BB6  0012               	return		;funcret
  5220  001BB8                     __end_of_SiFerMenu:
  5221                           	callstack 0
  5222                           
  5223 ;; *************** function _SMSon *****************
  5224 ;; Defined at:
  5225 ;;		line 113 in file "Ssms.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      void 
  5232 ;; Registers used:
  5233 ;;		None
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1
  5239 ;;      Params:         0       0       0
  5240 ;;      Locals:         0       0       0
  5241 ;;      Temps:          0       0       0
  5242 ;;      Totals:         0       0       0
  5243 ;;Total ram usage:        0 bytes
  5244 ;; Hardware stack levels used: 1
  5245 ;; Hardware stack levels required when called: 2
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_MTMenu
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           	psect	text30
  5254  001B94                     __ptext30:
  5255                           	callstack 0
  5256  001B94                     _SMSon:
  5257                           	callstack 27
  5258                           
  5259                           ;Ssms.c: 114:     setSMSon = 1;
  5260                           
  5261                           ;incstack = 0
  5262  001B94  8278               	bsf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5263                           
  5264                           ;Ssms.c: 115:     novaTecla = -1;
  5265  001B96  6845               	setf	_novaTecla^0,c
  5266  001B98  0012               	return		;funcret
  5267  001B9A                     __end_of_SMSon:
  5268                           	callstack 0
  5269                           
  5270 ;; *************** function _SMSoff *****************
  5271 ;; Defined at:
  5272 ;;		line 118 in file "Ssms.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      void 
  5279 ;; Registers used:
  5280 ;;		None
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1
  5286 ;;      Params:         0       0       0
  5287 ;;      Locals:         0       0       0
  5288 ;;      Temps:          0       0       0
  5289 ;;      Totals:         0       0       0
  5290 ;;Total ram usage:        0 bytes
  5291 ;; Hardware stack levels used: 1
  5292 ;; Hardware stack levels required when called: 2
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_MTMenu
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text31
  5301  001BB8                     __ptext31:
  5302                           	callstack 0
  5303  001BB8                     _SMSoff:
  5304                           	callstack 27
  5305                           
  5306                           ;Ssms.c: 119:     setSMSon = 0;
  5307                           
  5308                           ;incstack = 0
  5309  001BB8  9278               	bcf	(_setSMSon/(0+8))^0,_setSMSon& (0+7),c
  5310  001BBA  0012               	return		;funcret
  5311  001BBC                     __end_of_SMSoff:
  5312                           	callstack 0
  5313                           
  5314 ;; *************** function _NoFerMenu *****************
  5315 ;; Defined at:
  5316 ;;		line 22 in file "GLCDGestioLCD.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;		None
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		None
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1
  5330 ;;      Params:         0       0       0
  5331 ;;      Locals:         0       0       0
  5332 ;;      Temps:          0       0       0
  5333 ;;      Totals:         0       0       0
  5334 ;;Total ram usage:        0 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 2
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_MTMenu
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text32
  5345  001BBC                     __ptext32:
  5346                           	callstack 0
  5347  001BBC                     _NoFerMenu:
  5348                           	callstack 27
  5349                           
  5350                           ;GLCDGestioLCD.c: 23:     ferMenu = 0;
  5351                           
  5352                           ;incstack = 0
  5353  001BBC  9A78               	bcf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5354  001BBE  0012               	return		;funcret
  5355  001BC0                     __end_of_NoFerMenu:
  5356                           	callstack 0
  5357                           
  5358 ;; *************** function _LcScroll *****************
  5359 ;; Defined at:
  5360 ;;		line 37 in file "LcTLCD.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      void 
  5367 ;; Registers used:
  5368 ;;		wreg, status,2, status,0, cstack
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1
  5374 ;;      Params:         0       0       0
  5375 ;;      Locals:         0       0       0
  5376 ;;      Temps:          0       0       0
  5377 ;;      Totals:         0       0       0
  5378 ;;Total ram usage:        0 bytes
  5379 ;; Hardware stack levels used: 1
  5380 ;; Hardware stack levels required when called: 4
  5381 ;; This function calls:
  5382 ;;		_CantaIR
  5383 ;; This function is called by:
  5384 ;;		_MTMenu
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text33
  5389  001B9A                     __ptext33:
  5390                           	callstack 0
  5391  001B9A                     _LcScroll:
  5392                           	callstack 25
  5393                           
  5394                           ;LcTLCD.c: 38:   CantaIR(0x10 | 0x08 | 0x00);
  5395                           
  5396                           ;incstack = 0
  5397  001B9A  0E18               	movlw	24
  5398  001B9C  EFE9  F00C         	goto	_CantaIR
  5399  001BA0                     __end_of_LcScroll:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function _LcCursorOn *****************
  5403 ;; Defined at:
  5404 ;;		line 94 in file "LcTLCD.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1
  5418 ;;      Params:         0       0       0
  5419 ;;      Locals:         0       0       0
  5420 ;;      Temps:          0       0       0
  5421 ;;      Totals:         0       0       0
  5422 ;;Total ram usage:        0 bytes
  5423 ;; Hardware stack levels used: 1
  5424 ;; Hardware stack levels required when called: 4
  5425 ;; This function calls:
  5426 ;;		_CantaIR
  5427 ;;		_WaitForBusy
  5428 ;; This function is called by:
  5429 ;;		_MTMenu
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text34
  5434  001B18                     __ptext34:
  5435                           	callstack 0
  5436  001B18                     _LcCursorOn:
  5437                           	callstack 25
  5438                           
  5439                           ;LcTLCD.c: 97:  WaitForBusy();
  5440                           
  5441                           ;incstack = 0
  5442  001B18  ECEF  F00B         	call	_WaitForBusy	;wreg free
  5443                           
  5444                           ;LcTLCD.c: 98:  CantaIR(0x08 | 0x04 | 0x02);
  5445  001B1C  0E0E               	movlw	14
  5446  001B1E  EFE9  F00C         	goto	_CantaIR
  5447  001B22                     __end_of_LcCursorOn:
  5448                           	callstack 0
  5449                           
  5450 ;; *************** function _JUsuari *****************
  5451 ;; Defined at:
  5452 ;;		line 13 in file "JJoc.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;		None
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      char 
  5459 ;; Registers used:
  5460 ;;		wreg, status,2
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1
  5466 ;;      Params:         0       0       0
  5467 ;;      Locals:         0       0       0
  5468 ;;      Temps:          0       0       0
  5469 ;;      Totals:         0       0       0
  5470 ;;Total ram usage:        0 bytes
  5471 ;; Hardware stack levels used: 1
  5472 ;; Hardware stack levels required when called: 2
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_MTMenu
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           	psect	text35
  5481  001BC0                     __ptext35:
  5482                           	callstack 0
  5483  001BC0                     _JUsuari:
  5484                           	callstack 27
  5485                           
  5486                           ;JJoc.c: 14:     return usuariActual;
  5487                           
  5488                           ;incstack = 0
  5489  001BC0  5041               	movf	_usuariActual^0,w,c
  5490  001BC2  0012               	return		;funcret
  5491  001BC4                     __end_of_JUsuari:
  5492                           	callstack 0
  5493                           
  5494 ;; *************** function _JJuguem *****************
  5495 ;; Defined at:
  5496 ;;		line 51 in file "JJoc.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  usuari          1    wreg     unsigned char 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  usuari          1    5[COMRAM] unsigned char 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1
  5510 ;;      Params:         0       0       0
  5511 ;;      Locals:         1       0       0
  5512 ;;      Temps:          0       0       0
  5513 ;;      Totals:         1       0       0
  5514 ;;Total ram usage:        1 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; Hardware stack levels required when called: 2
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_MTMenu
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text36
  5525  001B6C                     __ptext36:
  5526                           	callstack 0
  5527  001B6C                     _JJuguem:
  5528                           	callstack 27
  5529                           
  5530                           ;incstack = 0
  5531                           ;JJuguem@usuari stored from wreg
  5532  001B6C  6E60               	movwf	JJuguem@usuari^0,c
  5533                           
  5534                           ;JJoc.c: 52:     usuariActual = usuari;
  5535  001B6E  C060  F041         	movff	JJuguem@usuari,_usuariActual
  5536  001B72  0012               	return		;funcret
  5537  001B74                     __end_of_JJuguem:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _HNouMinut *****************
  5541 ;; Defined at:
  5542 ;;		line 16 in file "HHora.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;		None
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;		None               void
  5549 ;; Registers used:
  5550 ;;		status,0
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1
  5556 ;;      Params:         0       0       0
  5557 ;;      Locals:         0       0       0
  5558 ;;      Temps:          0       0       0
  5559 ;;      Totals:         0       0       0
  5560 ;;Total ram usage:        0 bytes
  5561 ;; Hardware stack levels used: 1
  5562 ;; Hardware stack levels required when called: 2
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_MTMenu
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text37
  5571  001AA4                     __ptext37:
  5572                           	callstack 0
  5573  001AA4                     _HNouMinut:
  5574                           	callstack 27
  5575                           
  5576                           ;HHora.c: 17:     return nouMinut;
  5577                           
  5578                           ;incstack = 0
  5579  001AA4  B678               	btfsc	(_nouMinut/(0+8))^0,_nouMinut& (0+7),c
  5580  001AA6  D002               	goto	l4105
  5581  001AA8  90D8               	bcf	status,0,c
  5582  001AAA  0012               	return	
  5583  001AAC                     l4105:
  5584  001AAC  80D8               	bsf	status,0,c
  5585  001AAE  0012               	return		;funcret
  5586  001AB0                     __end_of_HNouMinut:
  5587                           	callstack 0
  5588                           
  5589 ;; *************** function _HNoJuguem *****************
  5590 ;; Defined at:
  5591 ;;		line 117 in file "HHora.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		None
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1
  5605 ;;      Params:         0       0       0
  5606 ;;      Locals:         0       0       0
  5607 ;;      Temps:          0       0       0
  5608 ;;      Totals:         0       0       0
  5609 ;;Total ram usage:        0 bytes
  5610 ;; Hardware stack levels used: 1
  5611 ;; Hardware stack levels required when called: 2
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_MTMenu
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text38
  5620  001BE0                     __ptext38:
  5621                           	callstack 0
  5622  001BE0                     _HNoJuguem:
  5623                           	callstack 27
  5624                           
  5625                           ;incstack = 0
  5626  001BE0  0012               	return		;funcret
  5627  001BE2                     __end_of_HNoJuguem:
  5628                           	callstack 0
  5629                           
  5630 ;; *************** function _HJuguem *****************
  5631 ;; Defined at:
  5632 ;;		line 109 in file "HHora.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;		None
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, status,2
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1
  5646 ;;      Params:         0       0       0
  5647 ;;      Locals:         0       0       0
  5648 ;;      Temps:          0       0       0
  5649 ;;      Totals:         0       0       0
  5650 ;;Total ram usage:        0 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; Hardware stack levels required when called: 2
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_MTMenu
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text39
  5661  001AB0                     __ptext39:
  5662                           	callstack 0
  5663  001AB0                     _HJuguem:
  5664                           	callstack 27
  5665                           
  5666                           ;HHora.c: 111:     tempsJugant[0] = '0';
  5667                           
  5668                           ;incstack = 0
  5669  001AB0  0E30               	movlw	48
  5670  001AB2  6E4B               	movwf	_tempsJugant^0,c
  5671                           
  5672                           ;HHora.c: 112:     tempsJugant[1] = '0';
  5673  001AB4  6E4C               	movwf	(_tempsJugant+1)^0,c
  5674                           
  5675                           ;HHora.c: 113:     tempsJugant[3] = '0';
  5676  001AB6  6E4E               	movwf	(_tempsJugant+3)^0,c
  5677                           
  5678                           ;HHora.c: 114:     tempsJugant[4] = '0';
  5679  001AB8  6E4F               	movwf	(_tempsJugant+4)^0,c
  5680  001ABA  0C30               	retlw	48	;funcret
  5681  001ABC                     __end_of_HJuguem:
  5682                           	callstack 0
  5683                           
  5684 ;; *************** function _HGetTime *****************
  5685 ;; Defined at:
  5686 ;;		line 85 in file "HHora.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;		None
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;		None
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      PTR unsigned char 
  5693 ;; Registers used:
  5694 ;;		wreg
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1
  5700 ;;      Params:         2       0       0
  5701 ;;      Locals:         0       0       0
  5702 ;;      Temps:          0       0       0
  5703 ;;      Totals:         2       0       0
  5704 ;;Total ram usage:        2 bytes
  5705 ;; Hardware stack levels used: 1
  5706 ;; Hardware stack levels required when called: 2
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_MTMenu
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text40
  5715  001BC4                     __ptext40:
  5716                           	callstack 0
  5717  001BC4                     _HGetTime:
  5718                           	callstack 27
  5719                           
  5720                           ;HHora.c: 86:     return string;
  5721                           
  5722                           ;incstack = 0
  5723  001BC4  0E51               	movlw	_string& (0+255)
  5724  001BC6  0012               	return		;funcret
  5725  001BC8                     __end_of_HGetTime:
  5726                           	callstack 0
  5727                           
  5728 ;; *************** function _HClearNouMinut *****************
  5729 ;; Defined at:
  5730 ;;		line 20 in file "HHora.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		None
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1
  5744 ;;      Params:         0       0       0
  5745 ;;      Locals:         0       0       0
  5746 ;;      Temps:          0       0       0
  5747 ;;      Totals:         0       0       0
  5748 ;;Total ram usage:        0 bytes
  5749 ;; Hardware stack levels used: 1
  5750 ;; Hardware stack levels required when called: 2
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_MTMenu
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text41
  5759  001BC8                     __ptext41:
  5760                           	callstack 0
  5761  001BC8                     _HClearNouMinut:
  5762                           	callstack 27
  5763                           
  5764                           ;HHora.c: 21:     nouMinut = 0;
  5765                           
  5766                           ;incstack = 0
  5767  001BC8  9678               	bcf	(_nouMinut/(0+8))^0,_nouMinut& (0+7),c
  5768  001BCA  0012               	return		;funcret
  5769  001BCC                     __end_of_HClearNouMinut:
  5770                           	callstack 0
  5771                           
  5772 ;; *************** function _HActualitzarHora *****************
  5773 ;; Defined at:
  5774 ;;		line 94 in file "HHora.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  nova            1    5[COMRAM] PTR unsigned char 
  5777 ;;		 -> horaTmp(5), 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      void 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1
  5789 ;;      Params:         1       0       0
  5790 ;;      Locals:         0       0       0
  5791 ;;      Temps:          0       0       0
  5792 ;;      Totals:         1       0       0
  5793 ;;Total ram usage:        1 bytes
  5794 ;; Hardware stack levels used: 1
  5795 ;; Hardware stack levels required when called: 2
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_MTMenu
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text42
  5804  00188C                     __ptext42:
  5805                           	callstack 0
  5806  00188C                     _HActualitzarHora:
  5807                           	callstack 27
  5808                           
  5809                           ;HHora.c: 95:     string[0] = nova[0];
  5810                           
  5811                           ;incstack = 0
  5812  00188C  5060               	movf	HActualitzarHora@nova^0,w,c
  5813  00188E  6ED9               	movwf	fsr2l,c
  5814  001890  6ADA               	clrf	fsr2h,c
  5815  001892  50DF               	movf	indf2,w,c
  5816  001894  6E51               	movwf	_string^0,c
  5817                           
  5818                           ;HHora.c: 96:     string[1] = nova[1];
  5819  001896  5060               	movf	HActualitzarHora@nova^0,w,c
  5820  001898  6ED9               	movwf	fsr2l,c
  5821  00189A  6ADA               	clrf	fsr2h,c
  5822  00189C  2AD9               	incf	fsr2l,f,c
  5823  00189E  50DF               	movf	indf2,w,c
  5824  0018A0  6E52               	movwf	(_string+1)^0,c
  5825                           
  5826                           ;HHora.c: 97:     string[3] = nova[2];
  5827  0018A2  5060               	movf	HActualitzarHora@nova^0,w,c
  5828  0018A4  6ED9               	movwf	fsr2l,c
  5829  0018A6  6ADA               	clrf	fsr2h,c
  5830  0018A8  0E02               	movlw	2
  5831  0018AA  26D9               	addwf	fsr2l,f,c
  5832  0018AC  50DF               	movf	indf2,w,c
  5833  0018AE  6E54               	movwf	(_string+3)^0,c
  5834                           
  5835                           ;HHora.c: 98:     string[4] = nova[3];
  5836  0018B0  5060               	movf	HActualitzarHora@nova^0,w,c
  5837  0018B2  6ED9               	movwf	fsr2l,c
  5838  0018B4  6ADA               	clrf	fsr2h,c
  5839  0018B6  0E03               	movlw	3
  5840  0018B8  26D9               	addwf	fsr2l,f,c
  5841  0018BA  50DF               	movf	indf2,w,c
  5842  0018BC  6E55               	movwf	(_string+4)^0,c
  5843  0018BE  0012               	return		;funcret
  5844  0018C0                     __end_of_HActualitzarHora:
  5845                           	callstack 0
  5846                           
  5847 ;; *************** function _GLCDMostraMenu *****************
  5848 ;; Defined at:
  5849 ;;		line 30 in file "GLCDGestioLCD.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  num             1    wreg     unsigned char 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  num             1    5[COMRAM] unsigned char 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1
  5863 ;;      Params:         0       0       0
  5864 ;;      Locals:         1       0       0
  5865 ;;      Temps:          0       0       0
  5866 ;;      Totals:         1       0       0
  5867 ;;Total ram usage:        1 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 2
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_MTMenu
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text43
  5878  001ABC                     __ptext43:
  5879                           	callstack 0
  5880  001ABC                     _GLCDMostraMenu:
  5881                           	callstack 27
  5882                           
  5883                           ;incstack = 0
  5884                           ;GLCDMostraMenu@num stored from wreg
  5885  001ABC  6E60               	movwf	GLCDMostraMenu@num^0,c
  5886                           
  5887                           ;GLCDGestioLCD.c: 31:     newString = 1;
  5888  001ABE  8878               	bsf	(_newString/(0+8))^0,_newString& (0+7),c
  5889                           
  5890                           ;GLCDGestioLCD.c: 32:     menuDalt = num;
  5891  001AC0  C060  F025         	movff	GLCDMostraMenu@num,_menuDalt
  5892                           
  5893                           ;GLCDGestioLCD.c: 33:     ferMenu = 1;
  5894  001AC4  8A78               	bsf	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  5895  001AC6  0012               	return		;funcret
  5896  001AC8                     __end_of_GLCDMostraMenu:
  5897                           	callstack 0
  5898                           
  5899 ;; *************** function _LcLCD *****************
  5900 ;; Defined at:
  5901 ;;		line 272 in file "LcTLCD.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      void 
  5908 ;; Registers used:
  5909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1
  5915 ;;      Params:         0       0       0
  5916 ;;      Locals:         0       0       0
  5917 ;;      Temps:          0       0       0
  5918 ;;      Totals:         0       0       0
  5919 ;;Total ram usage:        0 bytes
  5920 ;; Hardware stack levels used: 1
  5921 ;; Hardware stack levels required when called: 6
  5922 ;; This function calls:
  5923 ;;		_LcPutChar
  5924 ;; This function is called by:
  5925 ;;		_main
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text44
  5930  001708                     __ptext44:
  5931                           	callstack 0
  5932  001708                     _LcLCD:
  5933                           	callstack 24
  5934                           
  5935                           ;LcTLCD.c: 273:     if(nou_s == 1){
  5936                           
  5937                           ;incstack = 0
  5938  001708  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5939  00170A  0012               	return	
  5940                           
  5941                           ;LcTLCD.c: 274:         LcPutChar(*s_ptr);
  5942  00170C  D818               	call	PL34	;call to abstracted procedure
  5943  00170E  64F7               	cpfsgt	tblptrh,c
  5944  001710  D003               	bra	u6057
  5945  001712  0008               	tblrd		*
  5946  001714  50F5               	movf	tablat,w,c
  5947  001716  D001               	bra	u6050
  5948  001718                     u6057:
  5949  001718  D819               	call	PL46	;call to abstracted procedure
  5950  00171A                     u6050:
  5951  00171A  EC30  F00B         	call	_LcPutChar
  5952                           
  5953                           ;LcTLCD.c: 275:         s_ptr++;
  5954  00171E  4A05               	infsnz	_s_ptr^0,f,c
  5955  001720  2A06               	incf	(_s_ptr+1)^0,f,c
  5956                           
  5957                           ;LcTLCD.c: 276:         if(*s_ptr == '\0'){
  5958  001722  D80D               	call	PL34	;call to abstracted procedure
  5959  001724  64F7               	cpfsgt	tblptrh,c
  5960  001726  D003               	bra	u6067
  5961  001728  0008               	tblrd		*
  5962  00172A  50F5               	movf	tablat,w,c
  5963  00172C  D001               	bra	u6060
  5964  00172E                     u6067:
  5965  00172E  D80E               	call	PL46	;call to abstracted procedure
  5966  001730                     u6060:
  5967  001730  0900               	iorlw	0
  5968  001732  A4D8               	btfss	status,2,c
  5969  001734  0012               	return	
  5970                           
  5971                           ;LcTLCD.c: 277:             nou_s = 0;
  5972  001736  9079               	bcf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  5973                           
  5974                           ;LcTLCD.c: 278:             s_ptr=0;
  5975  001738  6A05               	clrf	_s_ptr^0,c
  5976  00173A  6A06               	clrf	(_s_ptr+1)^0,c
  5977  00173C  0012               	return		;funcret
  5978  00173E                     __end_of_LcLCD:
  5979                           	callstack 0
  5980  00173E                     PL34:
  5981                           	callstack 24
  5982  00173E  C005  FFF6         	movff	_s_ptr,tblptrl
  5983  001742  C006  FFF7         	movff	_s_ptr+1,tblptrh
  5984  001746  6AF8               	clrf	tblptru,c
  5985  001748  0E01               	movlw	(high __ramtop+-1)
  5986  00174A  0012               	return	
  5987  00174C                     __end_ofPL34:
  5988                           	callstack 0
  5989  00174C                     PL46:
  5990                           	callstack 24
  5991  00174C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5992  001750  CFF7 FFE2          	movff	tblptrh,fsr1h
  5993  001754  50E7               	movf	indf1,w,c
  5994  001756  0012               	return	
  5995  001758                     __end_ofPL46:
  5996                           	callstack 0
  5997                           
  5998 ;; *************** function _LcInit *****************
  5999 ;; Defined at:
  6000 ;;		line 41 in file "LcTLCD.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  rows            1    wreg     unsigned char 
  6003 ;;  columns         1   16[COMRAM] unsigned char 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  rows            1   17[COMRAM] unsigned char 
  6006 ;;  i               2   18[COMRAM] int 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      void 
  6009 ;; Registers used:
  6010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1
  6016 ;;      Params:         1       0       0
  6017 ;;      Locals:         3       0       0
  6018 ;;      Temps:          0       0       0
  6019 ;;      Totals:         4       0       0
  6020 ;;Total ram usage:        4 bytes
  6021 ;; Hardware stack levels used: 1
  6022 ;; Hardware stack levels required when called: 5
  6023 ;; This function calls:
  6024 ;;		_CantaIR
  6025 ;;		_EscriuPrimeraOrdre
  6026 ;;		_Espera
  6027 ;;		_LcCursorOff
  6028 ;;		_TiGetTimer
  6029 ;;		_WaitForBusy
  6030 ;; This function is called by:
  6031 ;;		_main
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text45
  6036  001054                     __ptext45:
  6037                           	callstack 0
  6038  001054                     _LcInit:
  6039                           	callstack 25
  6040                           
  6041                           ;incstack = 0
  6042                           ;LcInit@rows stored from wreg
  6043  001054  6E6C               	movwf	LcInit@rows^0,c
  6044                           
  6045                           ;LcTLCD.c: 47:  int i;;LcTLCD.c: 48:  Timer = TiGetTimer();
  6046  001056  EC60  F00C         	call	_TiGetTimer	;wreg free
  6047  00105A  6E2B               	movwf	_Timer^0,c
  6048                           
  6049                           ;LcTLCD.c: 49:  Rows = rows; Columns = columns;
  6050  00105C  C06C  F02F         	movff	LcInit@rows,_Rows
  6051  001060  C06B  F02E         	movff	LcInit@columns,_Columns
  6052                           
  6053                           ;LcTLCD.c: 50:  RowAct = ColumnAct = 0;
  6054  001064  6A2C               	clrf	_ColumnAct^0,c
  6055  001066  6A2D               	clrf	_RowAct^0,c
  6056                           
  6057                           ;LcTLCD.c: 51:  (TRISCbits.TRISC5 = TRISDbits.TRISD7 = TRISCbits.TRISC4 = 0);
  6058  001068  9894               	bcf	148,4,c	;volatile
  6059  00106A  9E95               	bcf	149,7,c	;volatile
  6060  00106C  9A94               	bcf	148,5,c	;volatile
  6061                           
  6062                           ;LcTLCD.c: 52:  for (i = 0; i < 2; i++) {
  6063  00106E  6A6D               	clrf	LcInit@i^0,c
  6064  001070  6A6E               	clrf	(LcInit@i+1)^0,c
  6065  001072                     l4269:
  6066                           
  6067                           ;LcTLCD.c: 53:   Espera(Timer, 200);
  6068  001072  6A68               	clrf	(Espera@ms+1)^0,c
  6069  001074  0EC8               	movlw	200
  6070  001076  6E67               	movwf	Espera@ms^0,c
  6071  001078  502B               	movf	_Timer^0,w,c
  6072  00107A  ECD8  F00C         	call	_Espera
  6073                           
  6074                           ;LcTLCD.c: 56:   EscriuPrimeraOrdre(0x02 | 0x01);
  6075  00107E  0E03               	movlw	3
  6076  001080  EC1F  F00A         	call	_EscriuPrimeraOrdre
  6077                           
  6078                           ;LcTLCD.c: 57:   Espera(Timer, 10);
  6079  001084  6A68               	clrf	(Espera@ms+1)^0,c
  6080  001086  0E0A               	movlw	10
  6081  001088  6E67               	movwf	Espera@ms^0,c
  6082  00108A  502B               	movf	_Timer^0,w,c
  6083  00108C  ECD8  F00C         	call	_Espera
  6084                           
  6085                           ;LcTLCD.c: 58:   EscriuPrimeraOrdre(0x02 | 0x01);
  6086  001090  0E03               	movlw	3
  6087  001092  EC1F  F00A         	call	_EscriuPrimeraOrdre
  6088                           
  6089                           ;LcTLCD.c: 59:   Espera(Timer, 2);
  6090  001096  D836               	call	PL42	;call to abstracted procedure
  6091  001098  ECD8  F00C         	call	_Espera
  6092                           
  6093                           ;LcTLCD.c: 60:   EscriuPrimeraOrdre(0x02 | 0x01);
  6094  00109C  0E03               	movlw	3
  6095  00109E  EC1F  F00A         	call	_EscriuPrimeraOrdre
  6096                           
  6097                           ;LcTLCD.c: 61:   Espera(Timer, 2);
  6098  0010A2  D830               	call	PL42	;call to abstracted procedure
  6099  0010A4  ECD8  F00C         	call	_Espera
  6100                           
  6101                           ;LcTLCD.c: 64:   EscriuPrimeraOrdre(0x02);
  6102  0010A8  0E02               	movlw	2
  6103  0010AA  EC1F  F00A         	call	_EscriuPrimeraOrdre
  6104                           
  6105                           ;LcTLCD.c: 65:   Espera(Timer, 2);
  6106  0010AE  D82A               	call	PL42	;call to abstracted procedure
  6107  0010B0  ECD8  F00C         	call	_Espera
  6108                           
  6109                           ;LcTLCD.c: 66:   CantaIR(0x20 | 0x08);
  6110  0010B4  0E28               	movlw	40
  6111  0010B6  ECE9  F00C         	call	_CantaIR
  6112                           
  6113                           ;LcTLCD.c: 69:   WaitForBusy(); CantaIR(0x08);
  6114  0010BA  ECEF  F00B         	call	_WaitForBusy	;wreg free
  6115  0010BE  0E08               	movlw	8
  6116  0010C0  ECE9  F00C         	call	_CantaIR
  6117                           
  6118                           ;LcTLCD.c: 70:   WaitForBusy(); CantaIR(0x01);
  6119  0010C4  ECEF  F00B         	call	_WaitForBusy	;wreg free
  6120  0010C8  0E01               	movlw	1
  6121  0010CA  ECE9  F00C         	call	_CantaIR
  6122                           
  6123                           ;LcTLCD.c: 71:   Espera(Timer,6);
  6124  0010CE  EC0D  F00D         	call	PL60	;call to abstracted procedure
  6125  0010D2  ECD8  F00C         	call	_Espera
  6126                           
  6127                           ;LcTLCD.c: 72:   WaitForBusy(); CantaIR(0x04 | 0x02);
  6128  0010D6  ECEF  F00B         	call	_WaitForBusy	;wreg free
  6129  0010DA  0E06               	movlw	6
  6130  0010DC  ECE9  F00C         	call	_CantaIR
  6131                           
  6132                           ;LcTLCD.c: 73:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  6133  0010E0  ECEF  F00B         	call	_WaitForBusy	;wreg free
  6134  0010E4  0E0F               	movlw	15
  6135  0010E6  ECE9  F00C         	call	_CantaIR
  6136                           
  6137                           ;LcTLCD.c: 74:  }
  6138  0010EA  4A6D               	infsnz	LcInit@i^0,f,c
  6139  0010EC  2A6E               	incf	(LcInit@i+1)^0,f,c
  6140  0010EE  BE6E               	btfsc	(LcInit@i+1)^0,7,c
  6141  0010F0  D7C0               	goto	l4269
  6142  0010F2  506E               	movf	(LcInit@i+1)^0,w,c
  6143  0010F4  E002 EF91  F00D    	bnz	_LcCursorOff
  6144  0010FA  0E02               	movlw	2
  6145  0010FC  5C6D               	subwf	LcInit@i^0,w,c
  6146  0010FE  E3B9               	bnc	l4269
  6147                           
  6148                           ;LcTLCD.c: 79:     LcCursorOff();
  6149  001100  EF91  F00D         	goto	_LcCursorOff	;wreg free
  6150  001104                     __end_of_LcInit:
  6151                           	callstack 0
  6152  001104                     PL42:
  6153                           	callstack 25
  6154  001104  6A68               	clrf	(Espera@ms+1)^0,c
  6155  001106  0E02               	movlw	2
  6156  001108  6E67               	movwf	Espera@ms^0,c
  6157  00110A  502B               	movf	_Timer^0,w,c
  6158  00110C  0012               	return	
  6159  00110E                     __end_ofPL42:
  6160                           	callstack 0
  6161                           
  6162 ;; *************** function _LcCursorOff *****************
  6163 ;; Defined at:
  6164 ;;		line 101 in file "LcTLCD.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1
  6178 ;;      Params:         0       0       0
  6179 ;;      Locals:         0       0       0
  6180 ;;      Temps:          0       0       0
  6181 ;;      Totals:         0       0       0
  6182 ;;Total ram usage:        0 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; Hardware stack levels required when called: 4
  6185 ;; This function calls:
  6186 ;;		_CantaIR
  6187 ;;		_WaitForBusy
  6188 ;; This function is called by:
  6189 ;;		_LcInit
  6190 ;;		_MTMenu
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text46
  6195  001B22                     __ptext46:
  6196                           	callstack 0
  6197  001B22                     _LcCursorOff:
  6198                           	callstack 25
  6199                           
  6200                           ;LcTLCD.c: 104:  WaitForBusy();
  6201                           
  6202                           ;incstack = 0
  6203  001B22  ECEF  F00B         	call	_WaitForBusy	;wreg free
  6204                           
  6205                           ;LcTLCD.c: 105:  CantaIR(0x08 | 0x04);
  6206  001B26  0E0C               	movlw	12
  6207  001B28  EFE9  F00C         	goto	_CantaIR
  6208  001B2C                     __end_of_LcCursorOff:
  6209                           	callstack 0
  6210                           
  6211 ;; *************** function _EscriuPrimeraOrdre *****************
  6212 ;; Defined at:
  6213 ;;		line 237 in file "LcTLCD.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  ordre           1    wreg     unsigned char 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  ordre           1    6[COMRAM] unsigned char 
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      void 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1
  6227 ;;      Params:         0       0       0
  6228 ;;      Locals:         1       0       0
  6229 ;;      Temps:          1       0       0
  6230 ;;      Totals:         2       0       0
  6231 ;;Total ram usage:        2 bytes
  6232 ;; Hardware stack levels used: 1
  6233 ;; Hardware stack levels required when called: 2
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_LcInit
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text47
  6242  00143E                     __ptext47:
  6243                           	callstack 0
  6244  00143E                     _EscriuPrimeraOrdre:
  6245                           	callstack 27
  6246                           
  6247                           ;incstack = 0
  6248                           ;EscriuPrimeraOrdre@ordre stored from wreg
  6249  00143E  6E61               	movwf	EscriuPrimeraOrdre@ordre^0,c
  6250                           
  6251                           ;LcTLCD.c: 239:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0); (LATCbits.LATC5 = 0); (LATDbits.LATD7 = 0);
  6252  001440  9694               	bcf	148,3,c	;volatile
  6253                           
  6254                           ;LcTLCD.c: 240:  (LATCbits.LATC4 = 1); (LATCbits.LATC4 = 1);
  6255  001442  D82F               	call	PL40	;call to abstracted procedure
  6256  001444  888B               	bsf	139,4,c	;volatile
  6257                           
  6258                           ;LcTLCD.c: 241:   (LATCbits.LATC3 = (ordre & 0x08 ? 1 : 0));
  6259  001446  A661               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  6260  001448  D003               	goto	u340
  6261  00144A  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6262  00144C  2A60               	incf	??_EscriuPrimeraOrdre^0,f,c
  6263  00144E  D001               	goto	u358
  6264  001450                     u340:
  6265  001450  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6266  001452                     u358:
  6267  001452  4660               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6268  001454  D82D               	call	PL54	;call to abstracted procedure
  6269  001456  0BF7               	andlw	-9
  6270  001458  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6271  00145A  6E8B               	movwf	139,c	;volatile
  6272                           
  6273                           ;LcTLCD.c: 242:   (LATCbits.LATC2 = (ordre & 0x04 ? 1 : 0));
  6274  00145C  A461               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  6275  00145E  D003               	goto	u360
  6276  001460  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6277  001462  2A60               	incf	??_EscriuPrimeraOrdre^0,f,c
  6278  001464  D001               	goto	u378
  6279  001466                     u360:
  6280  001466  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6281  001468                     u378:
  6282  001468  D823               	call	PL54	;call to abstracted procedure
  6283  00146A  0BFB               	andlw	-5
  6284  00146C  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6285  00146E  6E8B               	movwf	139,c	;volatile
  6286                           
  6287                           ;LcTLCD.c: 243:   (LATCbits.LATC1 = (ordre & 0x02 ? 1 : 0));
  6288  001470  A261               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  6289  001472  D003               	goto	u380
  6290  001474  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6291  001476  2A60               	incf	??_EscriuPrimeraOrdre^0,f,c
  6292  001478  D001               	goto	u398
  6293  00147A                     u380:
  6294  00147A  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6295  00147C                     u398:
  6296  00147C  4660               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6297  00147E  508B               	movf	139,w,c	;volatile
  6298  001480  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6299  001482  0BFD               	andlw	-3
  6300  001484  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6301  001486  6E8B               	movwf	139,c	;volatile
  6302                           
  6303                           ;LcTLCD.c: 244:   (LATCbits.LATC0 = (ordre & 0x01 ? 1 : 0));
  6304  001488  A061               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  6305  00148A  D003               	goto	u400
  6306  00148C  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6307  00148E  2A60               	incf	??_EscriuPrimeraOrdre^0,f,c
  6308  001490  D001               	goto	u418
  6309  001492                     u400:
  6310  001492  6A60               	clrf	??_EscriuPrimeraOrdre^0,c
  6311  001494                     u418:
  6312  001494  508B               	movf	139,w,c	;volatile
  6313  001496  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6314  001498  0BFE               	andlw	-2
  6315  00149A  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6316  00149C  6E8B               	movwf	139,c	;volatile
  6317                           
  6318                           ;LcTLCD.c: 245:  (LATCbits.LATC4 = 0);
  6319  00149E  988B               	bcf	139,4,c	;volatile
  6320  0014A0  0012               	return		;funcret
  6321  0014A2                     __end_of_EscriuPrimeraOrdre:
  6322                           	callstack 0
  6323  0014A2                     PL40:
  6324                           	callstack 24
  6325  0014A2  9494               	bcf	148,2,c	;volatile
  6326  0014A4  9294               	bcf	148,1,c	;volatile
  6327  0014A6  9094               	bcf	148,0,c	;volatile
  6328  0014A8  9A8B               	bcf	139,5,c	;volatile
  6329  0014AA  9E8C               	bcf	140,7,c	;volatile
  6330  0014AC  888B               	bsf	139,4,c	;volatile
  6331  0014AE  0012               	return	
  6332  0014B0                     __end_ofPL40:
  6333                           	callstack 0
  6334  0014B0                     PL54:
  6335                           	callstack 27
  6336  0014B0  4660               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6337  0014B2  4660               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  6338  0014B4  508B               	movf	139,w,c	;volatile
  6339  0014B6  1860               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  6340  0014B8  0012               	return	
  6341  0014BA                     __end_ofPL54:
  6342                           	callstack 0
  6343                           
  6344 ;; *************** function _JMotor *****************
  6345 ;; Defined at:
  6346 ;;		line 17 in file "JJoc.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;		None
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      void 
  6353 ;; Registers used:
  6354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1
  6360 ;;      Params:         0       0       0
  6361 ;;      Locals:         0       0       0
  6362 ;;      Temps:          2       0       0
  6363 ;;      Totals:         2       0       0
  6364 ;;Total ram usage:        2 bytes
  6365 ;; Hardware stack levels used: 1
  6366 ;; Hardware stack levels required when called: 5
  6367 ;; This function calls:
  6368 ;;		_AlPlay
  6369 ;;		_AlStop
  6370 ;;		_HClearNouSegon
  6371 ;;		_HNouSegon
  6372 ;;		_HTempsJocs
  6373 ;;		_LcGotoXY
  6374 ;;		_LcLliure
  6375 ;;		_LcNewString
  6376 ;;		_SIONovaDireccio
  6377 ;;		_SIOStartGame
  6378 ;;		_SIOUsuariActual
  6379 ;; This function is called by:
  6380 ;;		_main
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text48
  6385  001314                     __ptext48:
  6386                           	callstack 0
  6387  001314                     _JMotor:
  6388                           	callstack 25
  6389                           
  6390                           ;JJoc.c: 18:     static char state = 0;;JJoc.c: 20:  switch(state) {
  6391                           
  6392                           ;incstack = 0
  6393  001314  D03F               	goto	l5263
  6394  001316                     l5221:
  6395                           
  6396                           ;JJoc.c: 22:    if (usuariActual != -1 && LcLliure()) {
  6397  001316  2841               	incf	_usuariActual^0,w,c
  6398  001318  B4D8               	btfsc	status,2,c
  6399  00131A  0012               	return	
  6400  00131C  EC7C  F00D         	call	_LcLliure	;wreg free
  6401  001320  A0D8               	btfss	status,0,c
  6402  001322  0012               	return	
  6403                           
  6404                           ;JJoc.c: 23:     SIOStartGame(usuariActual);
  6405  001324  5041               	movf	_usuariActual^0,w,c
  6406  001326  ECBA  F00D         	call	_SIOStartGame
  6407                           
  6408                           ;JJoc.c: 24:     AlPlay();
  6409  00132A  ECEE  F00D         	call	_AlPlay	;wreg free
  6410                           
  6411                           ;JJoc.c: 25:     LcGotoXY(0,1);
  6412  00132E  EC55  F004         	call	PL32	;call to abstracted procedure
  6413  001332  ECD5  F009         	call	_LcGotoXY
  6414                           
  6415                           ;JJoc.c: 26:     LcNewString(stringText);
  6416  001336  0E80               	movlw	low _stringText
  6417  001338  6E63               	movwf	LcNewString@new_s^0,c
  6418  00133A  6A64               	clrf	(LcNewString@new_s+1)^0,c
  6419  00133C  EC76  F00D         	call	_LcNewString	;wreg free
  6420                           
  6421                           ;JJoc.c: 27:     state++;
  6422  001340  2A0A               	incf	JMotor@state^0,f,c
  6423  001342  0012               	return	
  6424  001344                     l5235:
  6425                           
  6426                           ;JJoc.c: 31:             if (SIOUsuariActual() == -1) {
  6427  001344  ECE6  F00D         	call	_SIOUsuariActual	;wreg free
  6428  001348  0AFF               	xorlw	255
  6429  00134A  E105               	bnz	l5243
  6430                           
  6431                           ;JJoc.c: 32:     AlStop();
  6432  00134C  ECEC  F00D         	call	_AlStop	;wreg free
  6433                           
  6434                           ;JJoc.c: 33:     usuariActual = -1;
  6435  001350  6841               	setf	_usuariActual^0,c
  6436                           
  6437                           ;JJoc.c: 34:     state--;
  6438  001352  060A               	decf	JMotor@state^0,f,c
  6439                           
  6440                           ;JJoc.c: 35:    } else if (HNouSegon() && LcLliure()) {
  6441  001354  0012               	return	
  6442  001356                     l5243:
  6443  001356  EC64  F00D         	call	_HNouSegon	;wreg free
  6444  00135A  E315               	bnc	l5255
  6445  00135C  EC7C  F00D         	call	_LcLliure	;wreg free
  6446  001360  E312               	bnc	l5255
  6447                           
  6448                           ;JJoc.c: 36:     HClearNouSegon();
  6449  001362  ECEA  F00D         	call	_HClearNouSegon	;wreg free
  6450                           
  6451                           ;JJoc.c: 37:     LcGotoXY(2,1);
  6452  001366  0E01               	movlw	1
  6453  001368  6E68               	movwf	LcGotoXY@Row^0,c
  6454  00136A  0E02               	movlw	2
  6455  00136C  ECD5  F009         	call	_LcGotoXY
  6456                           
  6457                           ;JJoc.c: 38:     LcNewString(HTempsJocs());
  6458  001370  ECE8  F00D         	call	_HTempsJocs	;wreg free
  6459  001374  6E70               	movwf	??_JMotor^0,c
  6460  001376  C070  F063         	movff	??_JMotor,LcNewString@new_s
  6461  00137A  6A64               	clrf	(LcNewString@new_s+1)^0,c
  6462  00137C  EC76  F00D         	call	_LcNewString	;wreg free
  6463                           
  6464                           ;JJoc.c: 39:     SIONovaDireccio(12);
  6465  001380  0E0C               	movlw	12
  6466  001382  EFBE  F00D         	goto	_SIONovaDireccio
  6467  001386                     l5255:
  6468  001386  BE0B               	btfsc	_novaDireccio^0,7,c
  6469  001388  0012               	return	
  6470                           
  6471                           ;JJoc.c: 42:     SIONovaDireccio(novaDireccio);
  6472  00138A  500B               	movf	_novaDireccio^0,w,c
  6473  00138C  ECBE  F00D         	call	_SIONovaDireccio
  6474                           
  6475                           ;JJoc.c: 43:     novaDireccio = -1;
  6476  001390  680B               	setf	_novaDireccio^0,c
  6477  001392  0012               	return	
  6478  001394                     l5263:
  6479  001394  500A               	movf	JMotor@state^0,w,c
  6480  001396  6E70               	movwf	??_JMotor^0,c
  6481  001398  6A71               	clrf	(??_JMotor+1)^0,c
  6482                           
  6483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6484                           ; Switch size 1, requested type "space"
  6485                           ; Number of cases is 1, Range of values is 0 to 0
  6486                           ; switch strategies available:
  6487                           ; Name         Instructions Cycles
  6488                           ; simple_byte            4     3 (average)
  6489                           ;	Chosen strategy is simple_byte
  6490  00139A  5071               	movf	(??_JMotor+1)^0,w,c
  6491  00139C  A4D8               	btfss	status,2,c
  6492  00139E  0012               	return	
  6493                           
  6494                           ; Switch size 1, requested type "space"
  6495                           ; Number of cases is 2, Range of values is 0 to 1
  6496                           ; switch strategies available:
  6497                           ; Name         Instructions Cycles
  6498                           ; simple_byte            7     4 (average)
  6499                           ;	Chosen strategy is simple_byte
  6500  0013A0  5070               	movf	??_JMotor^0,w,c
  6501  0013A2  E0B9               	bz	l5221
  6502  0013A4  0A01               	xorlw	1	; case 1
  6503  0013A6  E0CE               	bz	l5235
  6504  0013A8  0012               	return		;funcret
  6505  0013AA                     __end_of_JMotor:
  6506                           	callstack 0
  6507                           
  6508 ;; *************** function _SIOUsuariActual *****************
  6509 ;; Defined at:
  6510 ;;		line 109 in file "SSIO.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;		None
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;		None
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1    wreg      char 
  6517 ;; Registers used:
  6518 ;;		wreg, status,2
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1
  6524 ;;      Params:         0       0       0
  6525 ;;      Locals:         0       0       0
  6526 ;;      Temps:          0       0       0
  6527 ;;      Totals:         0       0       0
  6528 ;;Total ram usage:        0 bytes
  6529 ;; Hardware stack levels used: 1
  6530 ;; Hardware stack levels required when called: 2
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_JMotor
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           	psect	text49
  6539  001BCC                     __ptext49:
  6540                           	callstack 0
  6541  001BCC                     _SIOUsuariActual:
  6542                           	callstack 27
  6543                           
  6544                           ;SSIO.c: 110:     return usuariActualSIO;
  6545                           
  6546                           ;incstack = 0
  6547  001BCC  5040               	movf	_usuariActualSIO^0,w,c
  6548  001BCE  0012               	return		;funcret
  6549  001BD0                     __end_of_SIOUsuariActual:
  6550                           	callstack 0
  6551                           
  6552 ;; *************** function _SIOStartGame *****************
  6553 ;; Defined at:
  6554 ;;		line 105 in file "SSIO.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  usuari          1    wreg     unsigned char 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  usuari          1    5[COMRAM] unsigned char 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      void 
  6561 ;; Registers used:
  6562 ;;		wreg
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1
  6568 ;;      Params:         0       0       0
  6569 ;;      Locals:         1       0       0
  6570 ;;      Temps:          0       0       0
  6571 ;;      Totals:         1       0       0
  6572 ;;Total ram usage:        1 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; Hardware stack levels required when called: 2
  6575 ;; This function calls:
  6576 ;;		Nothing
  6577 ;; This function is called by:
  6578 ;;		_JMotor
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text50
  6583  001B74                     __ptext50:
  6584                           	callstack 0
  6585  001B74                     _SIOStartGame:
  6586                           	callstack 27
  6587                           
  6588                           ;incstack = 0
  6589                           ;SIOStartGame@usuari stored from wreg
  6590  001B74  6E60               	movwf	SIOStartGame@usuari^0,c
  6591                           
  6592                           ;SSIO.c: 106:     usuariActualSIO = usuari;
  6593  001B76  C060  F040         	movff	SIOStartGame@usuari,_usuariActualSIO
  6594  001B7A  0012               	return		;funcret
  6595  001B7C                     __end_of_SIOStartGame:
  6596                           	callstack 0
  6597                           
  6598 ;; *************** function _SIONovaDireccio *****************
  6599 ;; Defined at:
  6600 ;;		line 101 in file "SSIO.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  num             1    wreg     unsigned char 
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  num             1    5[COMRAM] unsigned char 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  1    wreg      void 
  6607 ;; Registers used:
  6608 ;;		wreg
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1
  6614 ;;      Params:         0       0       0
  6615 ;;      Locals:         1       0       0
  6616 ;;      Temps:          0       0       0
  6617 ;;      Totals:         1       0       0
  6618 ;;Total ram usage:        1 bytes
  6619 ;; Hardware stack levels used: 1
  6620 ;; Hardware stack levels required when called: 2
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		_JMotor
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text51
  6629  001B7C                     __ptext51:
  6630                           	callstack 0
  6631  001B7C                     _SIONovaDireccio:
  6632                           	callstack 27
  6633                           
  6634                           ;incstack = 0
  6635                           ;SIONovaDireccio@num stored from wreg
  6636  001B7C  6E60               	movwf	SIONovaDireccio@num^0,c
  6637                           
  6638                           ;SSIO.c: 102:     direccio = num;
  6639  001B7E  C060  F03F         	movff	SIONovaDireccio@num,_direccio
  6640  001B82  0012               	return		;funcret
  6641  001B84                     __end_of_SIONovaDireccio:
  6642                           	callstack 0
  6643                           
  6644 ;; *************** function _HTempsJocs *****************
  6645 ;; Defined at:
  6646 ;;		line 90 in file "HHora.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;		None
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  1    wreg      PTR unsigned char 
  6653 ;; Registers used:
  6654 ;;		wreg
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1
  6660 ;;      Params:         2       0       0
  6661 ;;      Locals:         0       0       0
  6662 ;;      Temps:          0       0       0
  6663 ;;      Totals:         2       0       0
  6664 ;;Total ram usage:        2 bytes
  6665 ;; Hardware stack levels used: 1
  6666 ;; Hardware stack levels required when called: 2
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_JMotor
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text52
  6675  001BD0                     __ptext52:
  6676                           	callstack 0
  6677  001BD0                     _HTempsJocs:
  6678                           	callstack 27
  6679                           
  6680                           ;HHora.c: 91:     return tempsJugant;
  6681                           
  6682                           ;incstack = 0
  6683  001BD0  0E4B               	movlw	_tempsJugant& (0+255)
  6684  001BD2  0012               	return		;funcret
  6685  001BD4                     __end_of_HTempsJocs:
  6686                           	callstack 0
  6687                           
  6688 ;; *************** function _HNouSegon *****************
  6689 ;; Defined at:
  6690 ;;		line 101 in file "HHora.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;		None
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;		None
  6695 ;; Return value:  Size  Location     Type
  6696 ;;		None               void
  6697 ;; Registers used:
  6698 ;;		status,0
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1
  6704 ;;      Params:         0       0       0
  6705 ;;      Locals:         0       0       0
  6706 ;;      Temps:          0       0       0
  6707 ;;      Totals:         0       0       0
  6708 ;;Total ram usage:        0 bytes
  6709 ;; Hardware stack levels used: 1
  6710 ;; Hardware stack levels required when called: 2
  6711 ;; This function calls:
  6712 ;;		Nothing
  6713 ;; This function is called by:
  6714 ;;		_JMotor
  6715 ;; This function uses a non-reentrant model
  6716 ;;
  6717                           
  6718                           	psect	text53
  6719  001AC8                     __ptext53:
  6720                           	callstack 0
  6721  001AC8                     _HNouSegon:
  6722                           	callstack 27
  6723                           
  6724                           ;HHora.c: 102:     return nouSegon;
  6725                           
  6726                           ;incstack = 0
  6727  001AC8  B478               	btfsc	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  6728  001ACA  D002               	goto	l4181
  6729  001ACC  90D8               	bcf	status,0,c
  6730  001ACE  0012               	return	
  6731  001AD0                     l4181:
  6732  001AD0  80D8               	bsf	status,0,c
  6733  001AD2  0012               	return		;funcret
  6734  001AD4                     __end_of_HNouSegon:
  6735                           	callstack 0
  6736                           
  6737 ;; *************** function _HClearNouSegon *****************
  6738 ;; Defined at:
  6739 ;;		line 105 in file "HHora.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;		None
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;		None
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1    wreg      void 
  6746 ;; Registers used:
  6747 ;;		None
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMRAM   BANK0   BANK1
  6753 ;;      Params:         0       0       0
  6754 ;;      Locals:         0       0       0
  6755 ;;      Temps:          0       0       0
  6756 ;;      Totals:         0       0       0
  6757 ;;Total ram usage:        0 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; Hardware stack levels required when called: 2
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_JMotor
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text54
  6768  001BD4                     __ptext54:
  6769                           	callstack 0
  6770  001BD4                     _HClearNouSegon:
  6771                           	callstack 27
  6772                           
  6773                           ;HHora.c: 106:     nouSegon = 0;
  6774                           
  6775                           ;incstack = 0
  6776  001BD4  9478               	bcf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  6777  001BD6  0012               	return		;funcret
  6778  001BD8                     __end_of_HClearNouSegon:
  6779                           	callstack 0
  6780                           
  6781 ;; *************** function _AlStop *****************
  6782 ;; Defined at:
  6783 ;;		line 20 in file "AlTAltaveu.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;		None
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		None
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1
  6797 ;;      Params:         0       0       0
  6798 ;;      Locals:         0       0       0
  6799 ;;      Temps:          0       0       0
  6800 ;;      Totals:         0       0       0
  6801 ;;Total ram usage:        0 bytes
  6802 ;; Hardware stack levels used: 1
  6803 ;; Hardware stack levels required when called: 2
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_JMotor
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text55
  6812  001BD8                     __ptext55:
  6813                           	callstack 0
  6814  001BD8                     _AlStop:
  6815                           	callstack 27
  6816                           
  6817                           ;AlTAltaveu.c: 21:     reproduir = 0;
  6818                           
  6819                           ;incstack = 0
  6820  001BD8  9E78               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  6821  001BDA  0012               	return		;funcret
  6822  001BDC                     __end_of_AlStop:
  6823                           	callstack 0
  6824                           
  6825 ;; *************** function _AlPlay *****************
  6826 ;; Defined at:
  6827 ;;		line 17 in file "AlTAltaveu.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;		None
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;		None
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  1    wreg      void 
  6834 ;; Registers used:
  6835 ;;		None
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1
  6841 ;;      Params:         0       0       0
  6842 ;;      Locals:         0       0       0
  6843 ;;      Temps:          0       0       0
  6844 ;;      Totals:         0       0       0
  6845 ;;Total ram usage:        0 bytes
  6846 ;; Hardware stack levels used: 1
  6847 ;; Hardware stack levels required when called: 2
  6848 ;; This function calls:
  6849 ;;		Nothing
  6850 ;; This function is called by:
  6851 ;;		_JMotor
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text56
  6856  001BDC                     __ptext56:
  6857                           	callstack 0
  6858  001BDC                     _AlPlay:
  6859                           	callstack 27
  6860                           
  6861                           ;AlTAltaveu.c: 18:     reproduir = 1;
  6862                           
  6863                           ;incstack = 0
  6864  001BDC  8E78               	bsf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  6865  001BDE  0012               	return		;funcret
  6866  001BE0                     __end_of_AlPlay:
  6867                           	callstack 0
  6868                           
  6869 ;; *************** function _HInit *****************
  6870 ;; Defined at:
  6871 ;;		line 24 in file "HHora.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      void 
  6878 ;; Registers used:
  6879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1
  6885 ;;      Params:         0       0       0
  6886 ;;      Locals:         0       0       0
  6887 ;;      Temps:          0       0       0
  6888 ;;      Totals:         0       0       0
  6889 ;;Total ram usage:        0 bytes
  6890 ;; Hardware stack levels used: 1
  6891 ;; Hardware stack levels required when called: 3
  6892 ;; This function calls:
  6893 ;;		_TiGetTimer
  6894 ;;		_TiResetTics
  6895 ;; This function is called by:
  6896 ;;		_main
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text57
  6901  001A78                     __ptext57:
  6902                           	callstack 0
  6903  001A78                     _HInit:
  6904                           	callstack 27
  6905                           
  6906                           ;HHora.c: 25:     timerHora = TiGetTimer();
  6907                           
  6908                           ;incstack = 0
  6909  001A78  EC60  F00C         	call	_TiGetTimer	;wreg free
  6910  001A7C  6E13               	movwf	_timerHora^0,c
  6911                           
  6912                           ;HHora.c: 26:     TiResetTics(timerHora);
  6913  001A7E  5013               	movf	_timerHora^0,w,c
  6914  001A80  ECF7  F00C         	call	_TiResetTics
  6915                           
  6916                           ;HHora.c: 27:     nouMinut = 0;
  6917  001A84  9678               	bcf	(_nouMinut/(0+8))^0,_nouMinut& (0+7),c
  6918  001A86  0012               	return		;funcret
  6919  001A88                     __end_of_HInit:
  6920                           	callstack 0
  6921                           
  6922 ;; *************** function _HHoraMotor *****************
  6923 ;; Defined at:
  6924 ;;		line 30 in file "HHora.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;		None
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;		None
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1    wreg      void 
  6931 ;; Registers used:
  6932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1
  6938 ;;      Params:         0       0       0
  6939 ;;      Locals:         0       0       0
  6940 ;;      Temps:          2       0       0
  6941 ;;      Totals:         2       0       0
  6942 ;;Total ram usage:        2 bytes
  6943 ;; Hardware stack levels used: 1
  6944 ;; Hardware stack levels required when called: 3
  6945 ;; This function calls:
  6946 ;;		_TiGetTics
  6947 ;;		_TiResetTics
  6948 ;; This function is called by:
  6949 ;;		_main
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text58
  6954  001276                     __ptext58:
  6955                           	callstack 0
  6956  001276                     _HHoraMotor:
  6957                           	callstack 27
  6958                           
  6959                           ;HHora.c: 32:     static char state = 0;;HHora.c: 33:  switch(state) {
  6960                           
  6961                           ;incstack = 0
  6962  001276  D045               	goto	l5421
  6963  001278                     l5359:
  6964                           
  6965                           ;HHora.c: 35:    if (TiGetTics(timerHora) >= 2000) {
  6966  001278  5013               	movf	_timerHora^0,w,c
  6967  00127A  ECC5  F00C         	call	_TiGetTics
  6968  00127E  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  6969  001280  0012               	return	
  6970  001282  ECAA  F005         	call	PL64	;call to abstracted procedure
  6971  001286  A0D8               	btfss	status,0,c
  6972  001288  0012               	return	
  6973                           
  6974                           ;HHora.c: 36:     TiResetTics(timerHora);
  6975  00128A  5013               	movf	_timerHora^0,w,c
  6976  00128C  ECF7  F00C         	call	_TiResetTics
  6977                           
  6978                           ;HHora.c: 37:     segons++;
  6979  001290  2A14               	incf	_segons^0,f,c
  6980                           
  6981                           ;HHora.c: 38:     nouSegon=1;
  6982  001292  8478               	bsf	(_nouSegon/(0+8))^0,_nouSegon& (0+7),c
  6983                           
  6984                           ;HHora.c: 40:     tempsJugant[4]++;
  6985  001294  2A4F               	incf	(_tempsJugant+4)^0,f,c
  6986                           
  6987                           ;HHora.c: 41:     if(tempsJugant[4] == ('9'+1)){
  6988  001296  0E3A               	movlw	58
  6989  001298  184F               	xorwf	(_tempsJugant+4)^0,w,c
  6990  00129A  E103               	bnz	l5375
  6991                           
  6992                           ;HHora.c: 42:      tempsJugant[4] = '0';
  6993  00129C  0E30               	movlw	48
  6994  00129E  6E4F               	movwf	(_tempsJugant+4)^0,c
  6995                           
  6996                           ;HHora.c: 43:      tempsJugant[3]++;
  6997  0012A0  2A4E               	incf	(_tempsJugant+3)^0,f,c
  6998  0012A2                     l5375:
  6999                           
  7000                           ;HHora.c: 45:     if(segons >= 60){
  7001  0012A2  0E3B               	movlw	59
  7002  0012A4  6414               	cpfsgt	_segons^0,c
  7003  0012A6  D008               	goto	l5387
  7004                           
  7005                           ;HHora.c: 46:      segons = 0;
  7006  0012A8  6A14               	clrf	_segons^0,c
  7007                           
  7008                           ;HHora.c: 48:      string[4]++;
  7009  0012AA  2A55               	incf	(_string+4)^0,f,c
  7010                           
  7011                           ;HHora.c: 49:      if(string[4] == ('9'+1)){
  7012  0012AC  0E3A               	movlw	58
  7013  0012AE  1855               	xorwf	(_string+4)^0,w,c
  7014  0012B0  E103               	bnz	l5387
  7015                           
  7016                           ;HHora.c: 50:       string[4] = '0';
  7017  0012B2  0E30               	movlw	48
  7018  0012B4  6E55               	movwf	(_string+4)^0,c
  7019                           
  7020                           ;HHora.c: 51:       string[3]++;
  7021  0012B6  2A54               	incf	(_string+3)^0,f,c
  7022  0012B8                     l5387:
  7023                           
  7024                           ;HHora.c: 55:     if(string[3] == '6'){
  7025  0012B8  0E36               	movlw	54
  7026  0012BA  1854               	xorwf	(_string+3)^0,w,c
  7027  0012BC  E10A               	bnz	l5399
  7028                           
  7029                           ;HHora.c: 56:      string[4] = '0';
  7030  0012BE  0E30               	movlw	48
  7031  0012C0  6E55               	movwf	(_string+4)^0,c
  7032                           
  7033                           ;HHora.c: 57:      string[3] = '0';
  7034  0012C2  6E54               	movwf	(_string+3)^0,c
  7035                           
  7036                           ;HHora.c: 58:      string[1]++;
  7037  0012C4  2A52               	incf	(_string+1)^0,f,c
  7038                           
  7039                           ;HHora.c: 59:      if(string[1] == ('9'+1)){
  7040  0012C6  0E3A               	movlw	58
  7041  0012C8  1852               	xorwf	(_string+1)^0,w,c
  7042  0012CA  E103               	bnz	l5399
  7043                           
  7044                           ;HHora.c: 60:       string[1] = '0';
  7045  0012CC  0E30               	movlw	48
  7046  0012CE  6E52               	movwf	(_string+1)^0,c
  7047                           
  7048                           ;HHora.c: 61:       string[0]++;
  7049  0012D0  2A51               	incf	_string^0,f,c
  7050  0012D2                     l5399:
  7051                           
  7052                           ;HHora.c: 65:     if(tempsJugant[3] == '6'){
  7053  0012D2  0E36               	movlw	54
  7054  0012D4  184E               	xorwf	(_tempsJugant+3)^0,w,c
  7055  0012D6  E10A               	bnz	l5411
  7056                           
  7057                           ;HHora.c: 66:      tempsJugant[4] = '0';
  7058  0012D8  0E30               	movlw	48
  7059  0012DA  6E4F               	movwf	(_tempsJugant+4)^0,c
  7060                           
  7061                           ;HHora.c: 67:      tempsJugant[3] = '0';
  7062  0012DC  6E4E               	movwf	(_tempsJugant+3)^0,c
  7063                           
  7064                           ;HHora.c: 68:      tempsJugant[1]++;
  7065  0012DE  2A4C               	incf	(_tempsJugant+1)^0,f,c
  7066                           
  7067                           ;HHora.c: 69:      if(tempsJugant[1] == ('9'+1)){
  7068  0012E0  0E3A               	movlw	58
  7069  0012E2  184C               	xorwf	(_tempsJugant+1)^0,w,c
  7070  0012E4  E103               	bnz	l5411
  7071                           
  7072                           ;HHora.c: 70:       tempsJugant[1] = '0';
  7073  0012E6  0E30               	movlw	48
  7074  0012E8  6E4C               	movwf	(_tempsJugant+1)^0,c
  7075                           
  7076                           ;HHora.c: 71:       tempsJugant[0]++;
  7077  0012EA  2A4B               	incf	_tempsJugant^0,f,c
  7078  0012EC                     l5411:
  7079                           
  7080                           ;HHora.c: 75:     if(string[0] >= '2' && string[1] >= '4'){
  7081  0012EC  0E31               	movlw	49
  7082  0012EE  6451               	cpfsgt	_string^0,c
  7083  0012F0  D006               	goto	l5417
  7084  0012F2  0E33               	movlw	51
  7085  0012F4  6452               	cpfsgt	(_string+1)^0,c
  7086  0012F6  D003               	goto	l5417
  7087                           
  7088                           ;HHora.c: 76:      string[1] = '0';
  7089  0012F8  0E30               	movlw	48
  7090  0012FA  6E52               	movwf	(_string+1)^0,c
  7091                           
  7092                           ;HHora.c: 77:      string[0] = '0';
  7093  0012FC  6E51               	movwf	_string^0,c
  7094  0012FE                     l5417:
  7095                           
  7096                           ;HHora.c: 79:     state = 0;
  7097  0012FE  6A12               	clrf	HHoraMotor@state^0,c
  7098  001300  0012               	return	
  7099  001302                     l5421:
  7100  001302  5012               	movf	HHoraMotor@state^0,w,c
  7101  001304  6E67               	movwf	??_HHoraMotor^0,c
  7102  001306  6A68               	clrf	(??_HHoraMotor+1)^0,c
  7103                           
  7104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7105                           ; Switch size 1, requested type "space"
  7106                           ; Number of cases is 1, Range of values is 0 to 0
  7107                           ; switch strategies available:
  7108                           ; Name         Instructions Cycles
  7109                           ; simple_byte            4     3 (average)
  7110                           ;	Chosen strategy is simple_byte
  7111  001308  5068               	movf	(??_HHoraMotor+1)^0,w,c
  7112  00130A  A4D8               	btfss	status,2,c
  7113  00130C  0012               	return	
  7114                           
  7115                           ; Switch size 1, requested type "space"
  7116                           ; Number of cases is 1, Range of values is 0 to 0
  7117                           ; switch strategies available:
  7118                           ; Name         Instructions Cycles
  7119                           ; simple_byte            4     3 (average)
  7120                           ;	Chosen strategy is simple_byte
  7121  00130E  5067               	movf	??_HHoraMotor^0,w,c
  7122  001310  E0B3               	bz	l5359
  7123  001312  0012               	return		;funcret
  7124  001314                     __end_of_HHoraMotor:
  7125                           	callstack 0
  7126                           
  7127 ;; *************** function _GLCDMotor *****************
  7128 ;; Defined at:
  7129 ;;		line 36 in file "GLCDGestioLCD.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;		None
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;		None
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  1    wreg      void 
  7136 ;; Registers used:
  7137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1
  7143 ;;      Params:         0       0       0
  7144 ;;      Locals:         0       0       0
  7145 ;;      Temps:          2       0       0
  7146 ;;      Totals:         2       0       0
  7147 ;;Total ram usage:        2 bytes
  7148 ;; Hardware stack levels used: 1
  7149 ;; Hardware stack levels required when called: 8
  7150 ;; This function calls:
  7151 ;;		_LcClear
  7152 ;;		_LcGotoXY
  7153 ;;		_LcLliure
  7154 ;;		_LcNewString
  7155 ;;		_LcPutChar
  7156 ;;		_LcPutFletxa
  7157 ;;		_TiGetTics
  7158 ;;		_TiResetTics
  7159 ;; This function is called by:
  7160 ;;		_main
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text59
  7165  0008C2                     __ptext59:
  7166                           	callstack 0
  7167  0008C2                     _GLCDMotor:
  7168                           	callstack 22
  7169                           
  7170                           ;GLCDGestioLCD.c: 37:  static char state = 0;;GLCDGestioLCD.c: 38:     static char j=0;;
      +                          GLCDGestioLCD.c: 39:     static char max1 = 15;;GLCDGestioLCD.c: 40:     static char min
      +                          1 = 0;;GLCDGestioLCD.c: 41:     static char min2 = 0;;GLCDGestioLCD.c: 42:     static ch
      +                          ar max2 = 15;;GLCDGestioLCD.c: 43:     static char k1 = 0;;GLCDGestioLCD.c: 44:     stat
      +                          ic char k2 = 0;;GLCDGestioLCD.c: 45:     static char length1=0;;GLCDGestioLCD.c: 46:    
      +                           static char length2=0;;GLCDGestioLCD.c: 48:     switch(state) {
  7171                           
  7172                           ;incstack = 0
  7173  0008C2  D102               	goto	l4557
  7174  0008C4                     l4365:
  7175                           
  7176                           ;GLCDGestioLCD.c: 50:    if (length1 < 17 && ferMenu == 1) {
  7177  0008C4  0E11               	movlw	17
  7178  0008C6  6016               	cpfslt	GLCDMotor@length1^0,c
  7179  0008C8  D00E               	goto	l4375
  7180  0008CA  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7181  0008CC  D00C               	goto	l4375
  7182                           
  7183                           ;GLCDGestioLCD.c: 51:     LcGotoXY(0,0);
  7184  0008CE  0E00               	movlw	0
  7185  0008D0  6A68               	clrf	LcGotoXY@Row^0,c
  7186  0008D2  ECD5  F009         	call	_LcGotoXY
  7187                           
  7188                           ;GLCDGestioLCD.c: 52:     LcNewString(menu[menuDalt]);
  7189  0008D6  5025               	movf	_menuDalt^0,w,c
  7190  0008D8  0D16               	mullw	22
  7191  0008DA  D935               	call	PL36	;call to abstracted procedure
  7192  0008DC  EC76  F00D         	call	_LcNewString	;wreg free
  7193                           
  7194                           ;GLCDGestioLCD.c: 53:     state = 5;
  7195  0008E0  0E05               	movlw	5
  7196  0008E2  6E1C               	movwf	GLCDMotor@state^0,c
  7197                           
  7198                           ;GLCDGestioLCD.c: 54:    }
  7199  0008E4  0C05               	retlw	5
  7200  0008E6                     l4375:
  7201  0008E6  0E10               	movlw	16
  7202  0008E8  6416               	cpfsgt	GLCDMotor@length1^0,c
  7203  0008EA  0C10               	retlw	16
  7204  0008EC  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7205  0008EE  0C10               	retlw	16
  7206  0008F0                     u3630:
  7207                           
  7208                           ;GLCDGestioLCD.c: 56:     state++;
  7209  0008F0  2A1C               	incf	GLCDMotor@state^0,f,c
  7210  0008F2  0012               	return	
  7211  0008F4                     l4381:
  7212                           
  7213                           ;GLCDGestioLCD.c: 60:    if (j>=16) {
  7214  0008F4  0E0F               	movlw	15
  7215  0008F6  641B               	cpfsgt	GLCDMotor@j^0,c
  7216  0008F8  D012               	goto	l4395
  7217                           
  7218                           ;GLCDGestioLCD.c: 61:     min1++;
  7219  0008FA  2A1A               	incf	GLCDMotor@min1^0,f,c
  7220                           
  7221                           ;GLCDGestioLCD.c: 62:     max1++;
  7222  0008FC  2A48               	incf	GLCDMotor@max1^0,f,c
  7223                           
  7224                           ;GLCDGestioLCD.c: 63:     if (menu[menuDalt][max1] == '\0') max1=0;
  7225  0008FE  D90A               	call	PL2	;call to abstracted procedure
  7226  000900  5048               	movf	GLCDMotor@max1^0,w,c
  7227  000902  D913               	call	PL4	;call to abstracted procedure
  7228  000904  E101               	bnz	l4389
  7229  000906  6A48               	clrf	GLCDMotor@max1^0,c
  7230  000908                     l4389:
  7231                           
  7232                           ;GLCDGestioLCD.c: 64:     if (menu[menuDalt][min1] == '\0') min1=0;
  7233  000908  D905               	call	PL2	;call to abstracted procedure
  7234  00090A  501A               	movf	GLCDMotor@min1^0,w,c
  7235  00090C  D90E               	call	PL4	;call to abstracted procedure
  7236  00090E  E101               	bnz	l708
  7237  000910  6A1A               	clrf	GLCDMotor@min1^0,c
  7238  000912                     l708:
  7239                           
  7240                           ;GLCDGestioLCD.c: 65:     j=0;
  7241  000912  6A1B               	clrf	GLCDMotor@j^0,c
  7242                           
  7243                           ;GLCDGestioLCD.c: 66:     k1=min1;
  7244  000914  C01A  F018         	movff	GLCDMotor@min1,GLCDMotor@k1
  7245                           
  7246                           ;GLCDGestioLCD.c: 67:     state = 6;
  7247  000918  0E06               	movlw	6
  7248  00091A  6E1C               	movwf	GLCDMotor@state^0,c
  7249                           
  7250                           ;GLCDGestioLCD.c: 68:    }
  7251  00091C  0C06               	retlw	6
  7252  00091E                     l4395:
  7253  00091E  0E10               	movlw	16
  7254  000920  601B               	cpfslt	GLCDMotor@j^0,c
  7255  000922  0C10               	retlw	16
  7256                           
  7257                           ;GLCDGestioLCD.c: 70:     LcGotoXY(j,0);
  7258  000924  6A68               	clrf	LcGotoXY@Row^0,c
  7259  000926  501B               	movf	GLCDMotor@j^0,w,c
  7260  000928  ECD5  F009         	call	_LcGotoXY
  7261                           
  7262                           ;GLCDGestioLCD.c: 71:     LcPutChar(menu[menuDalt][k1]);
  7263  00092C  D8F3               	call	PL2	;call to abstracted procedure
  7264  00092E  5018               	movf	GLCDMotor@k1^0,w,c
  7265  000930  D8FC               	call	PL4	;call to abstracted procedure
  7266  000932  EC30  F00B         	call	_LcPutChar
  7267                           
  7268                           ;GLCDGestioLCD.c: 72:     j++;
  7269  000936  2A1B               	incf	GLCDMotor@j^0,f,c
  7270                           
  7271                           ;GLCDGestioLCD.c: 73:     k1++;
  7272  000938  2A18               	incf	GLCDMotor@k1^0,f,c
  7273                           
  7274                           ;GLCDGestioLCD.c: 74:     if(menu[menuDalt][k1] == '\0') k1 = 0;
  7275  00093A  D8EC               	call	PL2	;call to abstracted procedure
  7276  00093C  5018               	movf	GLCDMotor@k1^0,w,c
  7277  00093E  D8F5               	call	PL4	;call to abstracted procedure
  7278  000940  B4D8               	btfsc	status,2,c
  7279  000942  6A18               	clrf	GLCDMotor@k1^0,c
  7280  000944  0012               	return	
  7281  000946                     l4409:
  7282                           
  7283                           ;GLCDGestioLCD.c: 78:    if (menuDalt<5) {
  7284  000946  0E05               	movlw	5
  7285  000948  6025               	cpfslt	_menuDalt^0,c
  7286  00094A  D016               	goto	u3730
  7287                           
  7288                           ;GLCDGestioLCD.c: 79:     LcPutFletxa();
  7289  00094C  EC6A  F00D         	call	_LcPutFletxa	;wreg free
  7290  000950  D7CF               	goto	u3630
  7291  000952                     u3700:
  7292                           
  7293                           ;GLCDGestioLCD.c: 83:     LcPutFletxa();
  7294  000952  EC6A  F00D         	call	_LcPutFletxa	;wreg free
  7295  000956                     l4419:
  7296                           
  7297                           ;GLCDGestioLCD.c: 84:     state = 0;
  7298  000956  6A1C               	clrf	GLCDMotor@state^0,c
  7299  000958  0012               	return	
  7300  00095A                     l4421:
  7301                           
  7302                           ;GLCDGestioLCD.c: 88:    if (LcLliure() && menuDalt<5) {
  7303  00095A  EC7C  F00D         	call	_LcLliure	;wreg free
  7304  00095E  E308               	bnc	l4429
  7305  000960  0E05               	movlw	5
  7306  000962  6025               	cpfslt	_menuDalt^0,c
  7307  000964  D005               	goto	l4429
  7308                           
  7309                           ;GLCDGestioLCD.c: 89:     LcPutFletxa();
  7310  000966  EC6A  F00D         	call	_LcPutFletxa	;wreg free
  7311                           
  7312                           ;GLCDGestioLCD.c: 90:     state = 7;
  7313  00096A  0E07               	movlw	7
  7314  00096C  6E1C               	movwf	GLCDMotor@state^0,c
  7315                           
  7316                           ;GLCDGestioLCD.c: 91:    }
  7317  00096E  0C07               	retlw	7
  7318  000970                     l4429:
  7319  000970  EC7C  F00D         	call	_LcLliure	;wreg free
  7320  000974  A0D8               	btfss	status,0,c
  7321  000976  0012               	return	
  7322  000978                     u3730:
  7323  000978  0E04               	movlw	4
  7324  00097A  6425               	cpfsgt	_menuDalt^0,c
  7325  00097C  0C04               	retlw	4
  7326  00097E  D7E9               	goto	u3700
  7327  000980                     l720:
  7328                           
  7329                           ;GLCDGestioLCD.c: 98:    if (newString != 0 && ferMenu == 1) {
  7330  000980  B878               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  7331  000982  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7332  000984  0012               	return	
  7333                           
  7334                           ;GLCDGestioLCD.c: 99:     length1 = 0;
  7335  000986  6A16               	clrf	GLCDMotor@length1^0,c
  7336                           
  7337                           ;GLCDGestioLCD.c: 100:     length2 = 0;
  7338  000988  6A15               	clrf	GLCDMotor@length2^0,c
  7339                           
  7340                           ;GLCDGestioLCD.c: 101:     LcGotoXY(0,0);
  7341  00098A  0E00               	movlw	0
  7342  00098C  6A68               	clrf	LcGotoXY@Row^0,c
  7343  00098E  ECD5  F009         	call	_LcGotoXY
  7344                           
  7345                           ;GLCDGestioLCD.c: 102:     min1 = 0;
  7346  000992  6A1A               	clrf	GLCDMotor@min1^0,c
  7347                           
  7348                           ;GLCDGestioLCD.c: 103:     max1 = 15;
  7349  000994  0E0F               	movlw	15
  7350  000996  6E48               	movwf	GLCDMotor@max1^0,c
  7351                           
  7352                           ;GLCDGestioLCD.c: 104:     min2 = 0;
  7353  000998  6A19               	clrf	GLCDMotor@min2^0,c
  7354                           
  7355                           ;GLCDGestioLCD.c: 105:     max2 = 15;
  7356  00099A  0E0F               	movlw	15
  7357  00099C  6E47               	movwf	GLCDMotor@max2^0,c
  7358                           
  7359                           ;GLCDGestioLCD.c: 106:     j = 0;
  7360  00099E  6A1B               	clrf	GLCDMotor@j^0,c
  7361                           
  7362                           ;GLCDGestioLCD.c: 107:     k1 = 0;
  7363  0009A0  6A18               	clrf	GLCDMotor@k1^0,c
  7364                           
  7365                           ;GLCDGestioLCD.c: 108:     k2 = 0;
  7366  0009A2  6A17               	clrf	GLCDMotor@k2^0,c
  7367                           
  7368                           ;GLCDGestioLCD.c: 109:     newString = 0;
  7369  0009A4  9878               	bcf	(_newString/(0+8))^0,_newString& (0+7),c
  7370  0009A6  D7A4               	goto	u3630
  7371  0009A8                     l4461:
  7372                           
  7373                           ;GLCDGestioLCD.c: 114:    if (menu[menuDalt][length1] == '\0' && menuDalt>=5) {
  7374  0009A8  D8B5               	call	PL2	;call to abstracted procedure
  7375  0009AA  5016               	movf	GLCDMotor@length1^0,w,c
  7376  0009AC  D8BE               	call	PL4	;call to abstracted procedure
  7377  0009AE  E104               	bnz	l4467
  7378  0009B0  0E04               	movlw	4
  7379  0009B2  6425               	cpfsgt	_menuDalt^0,c
  7380  0009B4  D001               	goto	l4467
  7381  0009B6  D79C               	goto	u3630
  7382  0009B8                     l4467:
  7383  0009B8  D8AD               	call	PL2	;call to abstracted procedure
  7384  0009BA  5016               	movf	GLCDMotor@length1^0,w,c
  7385  0009BC  D8B6               	call	PL4	;call to abstracted procedure
  7386  0009BE  E002               	bz	l4471
  7387                           
  7388                           ;GLCDGestioLCD.c: 118:     length1++;
  7389  0009C0  2A16               	incf	GLCDMotor@length1^0,f,c
  7390                           
  7391                           ;GLCDGestioLCD.c: 119:    }
  7392  0009C2  0012               	return	
  7393  0009C4                     l4471:
  7394  0009C4  0E05               	movlw	5
  7395  0009C6  6025               	cpfslt	_menuDalt^0,c
  7396  0009C8  0C05               	retlw	5
  7397  0009CA  D8A4               	call	PL2	;call to abstracted procedure
  7398  0009CC  5016               	movf	GLCDMotor@length1^0,w,c
  7399  0009CE  D8AD               	call	PL4	;call to abstracted procedure
  7400  0009D0  A4D8               	btfss	status,2,c
  7401  0009D2  0012               	return	
  7402                           
  7403                           ;GLCDGestioLCD.c: 121:     state = 13;
  7404  0009D4  0E0D               	movlw	13
  7405  0009D6  6E1C               	movwf	GLCDMotor@state^0,c
  7406  0009D8  0C0D               	retlw	13
  7407  0009DA                     l4477:
  7408                           
  7409                           ;GLCDGestioLCD.c: 125:    if (length2 < 17 && ferMenu == 1) {
  7410  0009DA  0E11               	movlw	17
  7411  0009DC  6015               	cpfslt	GLCDMotor@length2^0,c
  7412  0009DE  D010               	goto	l4487
  7413  0009E0  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7414  0009E2  D00E               	goto	l4487
  7415                           
  7416                           ;GLCDGestioLCD.c: 126:     LcGotoXY(0,1);
  7417  0009E4  EC55  F004         	call	PL32	;call to abstracted procedure
  7418  0009E8  ECD5  F009         	call	_LcGotoXY
  7419                           
  7420                           ;GLCDGestioLCD.c: 127:     LcNewString(menu[menuDalt+1]);
  7421  0009EC  5025               	movf	_menuDalt^0,w,c
  7422  0009EE  0D16               	mullw	22
  7423  0009F0  0E16               	movlw	22
  7424  0009F2  26F3               	addwf	243,f,c
  7425  0009F4  0E00               	movlw	0
  7426  0009F6  22F4               	addwfc	244,f,c
  7427  0009F8  D8A6               	call	PL36	;call to abstracted procedure
  7428  0009FA  EC76  F00D         	call	_LcNewString	;wreg free
  7429  0009FE  D778               	goto	u3630
  7430  000A00                     l4487:
  7431  000A00  0E10               	movlw	16
  7432  000A02  6415               	cpfsgt	GLCDMotor@length2^0,c
  7433  000A04  0C10               	retlw	16
  7434  000A06  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7435  000A08  0C10               	retlw	16
  7436                           
  7437                           ;GLCDGestioLCD.c: 131:     state = 9;
  7438  000A0A  0E09               	movlw	9
  7439  000A0C  6E1C               	movwf	GLCDMotor@state^0,c
  7440  000A0E  0C09               	retlw	9
  7441  000A10                     l4493:
  7442                           
  7443                           ;GLCDGestioLCD.c: 135:    if (j<16) {
  7444  000A10  0E10               	movlw	16
  7445  000A12  601B               	cpfslt	GLCDMotor@j^0,c
  7446  000A14  D014               	goto	l4507
  7447                           
  7448                           ;GLCDGestioLCD.c: 136:     LcGotoXY(j,1);
  7449  000A16  0E01               	movlw	1
  7450  000A18  6E68               	movwf	LcGotoXY@Row^0,c
  7451  000A1A  501B               	movf	GLCDMotor@j^0,w,c
  7452  000A1C  ECD5  F009         	call	_LcGotoXY
  7453                           
  7454                           ;GLCDGestioLCD.c: 137:     LcPutChar(menu[menuDalt+1][k2]);
  7455  000A20  D879               	call	PL2	;call to abstracted procedure
  7456  000A22  5017               	movf	GLCDMotor@k2^0,w,c
  7457  000A24  D88C               	call	PL6	;call to abstracted procedure
  7458  000A26  D881               	call	PL4	;call to abstracted procedure
  7459  000A28  EC30  F00B         	call	_LcPutChar
  7460                           
  7461                           ;GLCDGestioLCD.c: 138:     j++;
  7462  000A2C  2A1B               	incf	GLCDMotor@j^0,f,c
  7463                           
  7464                           ;GLCDGestioLCD.c: 139:     k2++;
  7465  000A2E  2A17               	incf	GLCDMotor@k2^0,f,c
  7466                           
  7467                           ;GLCDGestioLCD.c: 140:     if(menu[menuDalt+1][k2] == '\0') k2 = 0;
  7468  000A30  D871               	call	PL2	;call to abstracted procedure
  7469  000A32  5017               	movf	GLCDMotor@k2^0,w,c
  7470  000A34  D884               	call	PL6	;call to abstracted procedure
  7471  000A36  D879               	call	PL4	;call to abstracted procedure
  7472  000A38  B4D8               	btfsc	status,2,c
  7473  000A3A  6A17               	clrf	GLCDMotor@k2^0,c
  7474  000A3C  0012               	return	
  7475  000A3E                     l4507:
  7476  000A3E  0E0F               	movlw	15
  7477  000A40  641B               	cpfsgt	GLCDMotor@j^0,c
  7478  000A42  0C0F               	retlw	15
  7479                           
  7480                           ;GLCDGestioLCD.c: 143:     min2++;
  7481  000A44  2A19               	incf	GLCDMotor@min2^0,f,c
  7482                           
  7483                           ;GLCDGestioLCD.c: 144:     max2++;
  7484  000A46  2A47               	incf	GLCDMotor@max2^0,f,c
  7485                           
  7486                           ;GLCDGestioLCD.c: 145:     if (menu[menuDalt+1][max2] == '\0') max2=0;
  7487  000A48  D865               	call	PL2	;call to abstracted procedure
  7488  000A4A  5047               	movf	GLCDMotor@max2^0,w,c
  7489  000A4C  D878               	call	PL6	;call to abstracted procedure
  7490  000A4E  D86D               	call	PL4	;call to abstracted procedure
  7491  000A50  E101               	bnz	l4515
  7492  000A52  6A47               	clrf	GLCDMotor@max2^0,c
  7493  000A54                     l4515:
  7494                           
  7495                           ;GLCDGestioLCD.c: 146:     if (menu[menuDalt+1][min2] == '\0') min2=0;
  7496  000A54  D85F               	call	PL2	;call to abstracted procedure
  7497  000A56  5019               	movf	GLCDMotor@min2^0,w,c
  7498  000A58  D872               	call	PL6	;call to abstracted procedure
  7499  000A5A  D867               	call	PL4	;call to abstracted procedure
  7500  000A5C  E101               	bnz	l738
  7501  000A5E  6A19               	clrf	GLCDMotor@min2^0,c
  7502  000A60                     l738:
  7503                           
  7504                           ;GLCDGestioLCD.c: 147:     j=0;
  7505  000A60  6A1B               	clrf	GLCDMotor@j^0,c
  7506                           
  7507                           ;GLCDGestioLCD.c: 148:     k2=min2;
  7508  000A62  C019  F017         	movff	GLCDMotor@min2,GLCDMotor@k2
  7509  000A66  D744               	goto	u3630
  7510  000A68                     l4521:
  7511                           
  7512                           ;GLCDGestioLCD.c: 153:    if (TiGetTics(timerGLCD)>= 2000 && newString == 0 && ferMenu =
      +                          = 1) {
  7513  000A68  501D               	movf	_timerGLCD^0,w,c
  7514  000A6A  ECC5  F00C         	call	_TiGetTics
  7515  000A6E  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  7516  000A70  D00A               	goto	l740
  7517  000A72  D870               	call	PL64	;call to abstracted procedure
  7518  000A74  E308               	bnc	l740
  7519  000A76  A878               	btfss	(_newString/(0+8))^0,_newString& (0+7),c
  7520  000A78  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7521  000A7A  D005               	goto	l740
  7522                           
  7523                           ;GLCDGestioLCD.c: 154:     LcClear();
  7524  000A7C  EC05  F00D         	call	_LcClear	;wreg free
  7525  000A80                     l4529:
  7526                           
  7527                           ;GLCDGestioLCD.c: 155:     state = 2;
  7528  000A80  0E02               	movlw	2
  7529  000A82  6E1C               	movwf	GLCDMotor@state^0,c
  7530                           
  7531                           ;GLCDGestioLCD.c: 156:    }
  7532  000A84  0C02               	retlw	2
  7533  000A86                     l740:
  7534  000A86  B878               	btfsc	(_newString/(0+8))^0,_newString& (0+7),c
  7535  000A88  AA78               	btfss	(_ferMenu/(0+8))^0,_ferMenu& (0+7),c
  7536  000A8A  0012               	return	
  7537                           
  7538                           ;GLCDGestioLCD.c: 158:     LcClear();
  7539  000A8C  EC05  F00D         	call	_LcClear	;wreg free
  7540  000A90  D762               	goto	l4419
  7541  000A92                     l4537:
  7542                           
  7543                           ;GLCDGestioLCD.c: 163:    TiResetTics(timerGLCD);
  7544  000A92  501D               	movf	_timerGLCD^0,w,c
  7545  000A94  ECF7  F00C         	call	_TiResetTics
  7546  000A98  D72B               	goto	u3630
  7547  000A9A                     l4541:
  7548                           
  7549                           ;GLCDGestioLCD.c: 167:    if (LcLliure()) {
  7550  000A9A  EC7C  F00D         	call	_LcLliure	;wreg free
  7551  000A9E  A0D8               	btfss	status,0,c
  7552  000AA0  0012               	return	
  7553                           
  7554                           ;GLCDGestioLCD.c: 168:     TiResetTics(timerGLCD);
  7555  000AA2  501D               	movf	_timerGLCD^0,w,c
  7556  000AA4  ECF7  F00C         	call	_TiResetTics
  7557                           
  7558                           ;GLCDGestioLCD.c: 169:     state = 11;
  7559  000AA8  0E0B               	movlw	11
  7560  000AAA  6E1C               	movwf	GLCDMotor@state^0,c
  7561  000AAC  0C0B               	retlw	11
  7562  000AAE                     l4547:
  7563                           
  7564                           ;GLCDGestioLCD.c: 173:    if (menu[menuDalt+1][length2] != '\0') {
  7565  000AAE  D832               	call	PL2	;call to abstracted procedure
  7566  000AB0  5015               	movf	GLCDMotor@length2^0,w,c
  7567  000AB2  D845               	call	PL6	;call to abstracted procedure
  7568  000AB4  D83A               	call	PL4	;call to abstracted procedure
  7569  000AB6  E002               	bz	l4551
  7570                           
  7571                           ;GLCDGestioLCD.c: 174:     length2++;
  7572  000AB8  2A15               	incf	GLCDMotor@length2^0,f,c
  7573                           
  7574                           ;GLCDGestioLCD.c: 175:    }
  7575  000ABA  0012               	return	
  7576  000ABC                     l4551:
  7577  000ABC  D82B               	call	PL2	;call to abstracted procedure
  7578  000ABE  5015               	movf	GLCDMotor@length2^0,w,c
  7579  000AC0  D83E               	call	PL6	;call to abstracted procedure
  7580  000AC2  D833               	call	PL4	;call to abstracted procedure
  7581  000AC4  E0DD               	bz	l4529
  7582  000AC6  0012               	return	
  7583  000AC8                     l4557:
  7584  000AC8  501C               	movf	GLCDMotor@state^0,w,c
  7585  000ACA  6E71               	movwf	??_GLCDMotor^0,c
  7586  000ACC  6A72               	clrf	(??_GLCDMotor+1)^0,c
  7587                           
  7588                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7589                           ; Switch size 1, requested type "space"
  7590                           ; Number of cases is 1, Range of values is 0 to 0
  7591                           ; switch strategies available:
  7592                           ; Name         Instructions Cycles
  7593                           ; simple_byte            4     3 (average)
  7594                           ;	Chosen strategy is simple_byte
  7595  000ACE  5072               	movf	(??_GLCDMotor+1)^0,w,c
  7596  000AD0  A4D8               	btfss	status,2,c
  7597  000AD2  0012               	return	
  7598                           
  7599                           ; Switch size 1, requested type "space"
  7600                           ; Number of cases is 12, Range of values is 0 to 13
  7601                           ; switch strategies available:
  7602                           ; Name         Instructions Cycles
  7603                           ; simple_byte           37    19 (average)
  7604                           ;	Chosen strategy is simple_byte
  7605  000AD4  5071               	movf	??_GLCDMotor^0,w,c
  7606  000AD6  E101 D753          	bz	l720
  7607  000ADA  0A01               	xorlw	1	; case 1
  7608  000ADC  E101 D764          	bz	l4461
  7609  000AE0  0A03               	xorlw	3	; case 2
  7610  000AE2  E101 D6EF          	bz	l4365
  7611  000AE6  0A01               	xorlw	1	; case 3
  7612  000AE8  E101 D704          	bz	l4381
  7613  000AEC  0A06               	xorlw	6	; case 5
  7614  000AEE  E101 D734          	bz	l4421
  7615  000AF2  0A03               	xorlw	3	; case 6
  7616  000AF4  E101 D727          	bz	l4409
  7617  000AF8  0A01               	xorlw	1	; case 7
  7618  000AFA  E101 D76E          	bz	l4477
  7619  000AFE  0A0F               	xorlw	15	; case 8
  7620  000B00  E0CC               	bz	l4541
  7621  000B02  0A01               	xorlw	1	; case 9
  7622  000B04  E085               	bz	l4493
  7623  000B06  0A03               	xorlw	3	; case 10
  7624  000B08  E0C4               	bz	l4537
  7625  000B0A  0A01               	xorlw	1	; case 11
  7626  000B0C  E0AD               	bz	l4521
  7627  000B0E  0A06               	xorlw	6	; case 13
  7628  000B10  E0CE               	bz	l4547
  7629  000B12  0012               	return		;funcret
  7630  000B14                     __end_of_GLCDMotor:
  7631                           	callstack 0
  7632  000B14                     PL2:
  7633                           	callstack 22
  7634  000B14  5025               	movf	_menuDalt^0,w,c
  7635  000B16  0D16               	mullw	22
  7636  000B18  0E1B               	movlw	low _menu
  7637  000B1A  6E71               	movwf	??_GLCDMotor^0,c
  7638  000B1C  0E1F               	movlw	high _menu
  7639  000B1E  6E72               	movwf	(??_GLCDMotor+1)^0,c
  7640  000B20  50F3               	movf	243,w,c
  7641  000B22  2671               	addwf	??_GLCDMotor^0,f,c
  7642  000B24  50F4               	movf	244,w,c
  7643  000B26  2272               	addwfc	(??_GLCDMotor+1)^0,f,c
  7644  000B28  0012               	return	
  7645  000B2A                     __end_ofPL2:
  7646                           	callstack 0
  7647  000B2A                     PL4:
  7648                           	callstack 22
  7649  000B2A  2671               	addwf	??_GLCDMotor^0,f,c
  7650  000B2C  0E00               	movlw	0
  7651  000B2E  2272               	addwfc	(??_GLCDMotor+1)^0,f,c
  7652  000B30  C071  FFF6         	movff	??_GLCDMotor,tblptrl
  7653  000B34  C072  FFF7         	movff	??_GLCDMotor+1,tblptrh
  7654  000B38                     	if	0	;tblptru may be non-zero
  7655  000B38                     	endif
  7656  000B38                     	if	0	;tblptru may be non-zero
  7657  000B38                     	endif
  7658  000B38  0008               	tblrd		*
  7659  000B3A  50F5               	movf	tablat,w,c
  7660  000B3C  0012               	return	
  7661  000B3E                     __end_ofPL4:
  7662                           	callstack 0
  7663  000B3E                     PL6:
  7664                           	callstack 22
  7665  000B3E  2671               	addwf	??_GLCDMotor^0,f,c
  7666  000B40  0E00               	movlw	0
  7667  000B42  2272               	addwfc	(??_GLCDMotor+1)^0,f,c
  7668  000B44  0C16               	retlw	22
  7669  000B46                     __end_ofPL6:
  7670                           	callstack 0
  7671  000B46                     PL36:
  7672                           	callstack 22
  7673  000B46  0E1B               	movlw	low _menu
  7674  000B48  24F3               	addwf	243,w,c
  7675  000B4A  6E63               	movwf	LcNewString@new_s^0,c
  7676  000B4C  0E1F               	movlw	high _menu
  7677  000B4E  20F4               	addwfc	prodh,w,c
  7678  000B50  6E64               	movwf	(LcNewString@new_s+1)^0,c
  7679  000B52  0012               	return	
  7680  000B54                     __end_ofPL36:
  7681                           	callstack 0
  7682  000B54                     PL64:
  7683                           	callstack 27
  7684  000B54  0ED0               	movlw	208
  7685  000B56  5C60               	subwf	?_TiGetTics^0,w,c
  7686  000B58  0E07               	movlw	7
  7687  000B5A  5861               	subwfb	(?_TiGetTics+1)^0,w,c
  7688  000B5C  0012               	return	
  7689  000B5E                     __end_ofPL64:
  7690                           	callstack 0
  7691                           
  7692 ;; *************** function _LcPutFletxa *****************
  7693 ;; Defined at:
  7694 ;;		line 256 in file "LcTLCD.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;		None
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;		None
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  1    wreg      void 
  7701 ;; Registers used:
  7702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMRAM   BANK0   BANK1
  7708 ;;      Params:         0       0       0
  7709 ;;      Locals:         0       0       0
  7710 ;;      Temps:          0       0       0
  7711 ;;      Totals:         0       0       0
  7712 ;;Total ram usage:        0 bytes
  7713 ;; Hardware stack levels used: 1
  7714 ;; Hardware stack levels required when called: 7
  7715 ;; This function calls:
  7716 ;;		_LcGotoXY
  7717 ;;		_LcInsertFletxa
  7718 ;; This function is called by:
  7719 ;;		_MTMenu
  7720 ;;		_GLCDMotor
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text60
  7725  001AD4                     __ptext60:
  7726                           	callstack 0
  7727  001AD4                     _LcPutFletxa:
  7728                           	callstack 22
  7729                           
  7730                           ;LcTLCD.c: 257:     LcGotoXY(0,0);
  7731                           
  7732                           ;incstack = 0
  7733  001AD4  0E00               	movlw	0
  7734  001AD6  6A68               	clrf	LcGotoXY@Row^0,c
  7735  001AD8  ECD5  F009         	call	_LcGotoXY
  7736                           
  7737                           ;LcTLCD.c: 259:     LcInsertFletxa();
  7738  001ADC  EF70  F00D         	goto	_LcInsertFletxa	;wreg free
  7739  001AE0                     __end_of_LcPutFletxa:
  7740                           	callstack 0
  7741                           
  7742 ;; *************** function _LcInsertFletxa *****************
  7743 ;; Defined at:
  7744 ;;		line 252 in file "LcTLCD.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;		None
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      void 
  7751 ;; Registers used:
  7752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMRAM   BANK0   BANK1
  7758 ;;      Params:         0       0       0
  7759 ;;      Locals:         0       0       0
  7760 ;;      Temps:          0       0       0
  7761 ;;      Totals:         0       0       0
  7762 ;;Total ram usage:        0 bytes
  7763 ;; Hardware stack levels used: 1
  7764 ;; Hardware stack levels required when called: 6
  7765 ;; This function calls:
  7766 ;;		_LcPutChar
  7767 ;; This function is called by:
  7768 ;;		_LcPutFletxa
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text61
  7773  001AE0                     __ptext61:
  7774                           	callstack 0
  7775  001AE0                     _LcInsertFletxa:
  7776                           	callstack 22
  7777                           
  7778                           ;LcTLCD.c: 253:     LcPutChar('-');
  7779                           
  7780                           ;incstack = 0
  7781  001AE0  0E2D               	movlw	45
  7782  001AE2  EC30  F00B         	call	_LcPutChar
  7783                           
  7784                           ;LcTLCD.c: 254:     LcPutChar('>');
  7785  001AE6  0E3E               	movlw	62
  7786  001AE8  EF30  F00B         	goto	_LcPutChar
  7787  001AEC                     __end_of_LcInsertFletxa:
  7788                           	callstack 0
  7789                           
  7790 ;; *************** function _LcPutChar *****************
  7791 ;; Defined at:
  7792 ;;		line 135 in file "LcTLCD.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  c               1    wreg     unsigned char 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  c               1   21[COMRAM] unsigned char 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  1    wreg      void 
  7799 ;; Registers used:
  7800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1
  7806 ;;      Params:         0       0       0
  7807 ;;      Locals:         1       0       0
  7808 ;;      Temps:          0       0       0
  7809 ;;      Totals:         1       0       0
  7810 ;;Total ram usage:        1 bytes
  7811 ;; Hardware stack levels used: 1
  7812 ;; Hardware stack levels required when called: 5
  7813 ;; This function calls:
  7814 ;;		_CantaData
  7815 ;;		_LcGotoXY
  7816 ;;		_WaitForBusy
  7817 ;; This function is called by:
  7818 ;;		_LcInsertFletxa
  7819 ;;		_LcLCD
  7820 ;;		_MTMenu
  7821 ;;		_GLCDMotor
  7822 ;;		_SIOMotor
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text62
  7827  001660                     __ptext62:
  7828                           	callstack 0
  7829  001660                     _LcPutChar:
  7830                           	callstack 24
  7831                           
  7832                           ;incstack = 0
  7833                           ;LcPutChar@c stored from wreg
  7834  001660  6E70               	movwf	LcPutChar@c^0,c
  7835                           
  7836                           ;LcTLCD.c: 145:  WaitForBusy(); CantaData(c);
  7837  001662  ECEF  F00B         	call	_WaitForBusy	;wreg free
  7838  001666  5070               	movf	LcPutChar@c^0,w,c
  7839  001668  EC0E  F00C         	call	_CantaData
  7840                           
  7841                           ;LcTLCD.c: 147:  ++ColumnAct;
  7842  00166C  2A2C               	incf	_ColumnAct^0,f,c
  7843                           
  7844                           ;LcTLCD.c: 148:  if (Rows == 3) {
  7845  00166E  0E03               	movlw	3
  7846  001670  182F               	xorwf	_Rows^0,w,c
  7847  001672  E107               	bnz	l4007
  7848                           
  7849                           ;LcTLCD.c: 149:   if (ColumnAct >= 20) {
  7850  001674  0E13               	movlw	19
  7851  001676  642C               	cpfsgt	_ColumnAct^0,c
  7852  001678  0C13               	retlw	19
  7853                           
  7854                           ;LcTLCD.c: 150:    ColumnAct = 0;
  7855  00167A  6A2C               	clrf	_ColumnAct^0,c
  7856                           
  7857                           ;LcTLCD.c: 151:    if (++RowAct >= 4) RowAct = 0;
  7858  00167C  2A2D               	incf	_RowAct^0,f,c
  7859  00167E  0E03               	movlw	3
  7860  001680  D009               	goto	L3
  7861  001682                     l4007:
  7862                           
  7863                           ;LcTLCD.c: 155:  if (Rows == 2) {
  7864  001682  0E02               	movlw	2
  7865  001684  182F               	xorwf	_Rows^0,w,c
  7866  001686  E10A               	bnz	l4019
  7867                           
  7868                           ;LcTLCD.c: 156:   if (ColumnAct >= 40) {
  7869  001688  0E27               	movlw	39
  7870  00168A  642C               	cpfsgt	_ColumnAct^0,c
  7871  00168C  0C27               	retlw	39
  7872                           
  7873                           ;LcTLCD.c: 157:    ColumnAct = 0;
  7874  00168E  6A2C               	clrf	_ColumnAct^0,c
  7875                           
  7876                           ;LcTLCD.c: 158:    if (++RowAct >= 2) RowAct = 0;
  7877  001690  2A2D               	incf	_RowAct^0,f,c
  7878  001692  0E01               	movlw	1
  7879  001694                     L3:
  7880  001694  642D               	cpfsgt	_RowAct^0,c
  7881  001696  D009               	goto	l4025
  7882  001698  6A2D               	clrf	_RowAct^0,c
  7883  00169A  D007               	goto	l4025
  7884  00169C                     l4019:
  7885                           
  7886                           ;LcTLCD.c: 162:  if (RowAct == 1) {
  7887  00169C  042D               	decf	_RowAct^0,w,c
  7888  00169E  A4D8               	btfss	status,2,c
  7889  0016A0  0012               	return	
  7890                           
  7891                           ;LcTLCD.c: 163:   if (ColumnAct >= 40) ColumnAct = 0;
  7892  0016A2  0E27               	movlw	39
  7893  0016A4  642C               	cpfsgt	_ColumnAct^0,c
  7894  0016A6  D001               	goto	l4025
  7895  0016A8  6A2C               	clrf	_ColumnAct^0,c
  7896  0016AA                     l4025:
  7897                           
  7898                           ;LcTLCD.c: 164:   LcGotoXY(ColumnAct, RowAct);
  7899  0016AA  C02D  F068         	movff	_RowAct,LcGotoXY@Row
  7900  0016AE  502C               	movf	_ColumnAct^0,w,c
  7901  0016B0  EFD5  F009         	goto	_LcGotoXY
  7902  0016B4                     __end_of_LcPutChar:
  7903                           	callstack 0
  7904                           
  7905 ;; *************** function _LcGotoXY *****************
  7906 ;; Defined at:
  7907 ;;		line 108 in file "LcTLCD.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  Column          1    wreg     unsigned char 
  7910 ;;  Row             1   13[COMRAM] unsigned char 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  Column          1   20[COMRAM] unsigned char 
  7913 ;;  Fisics          2   18[COMRAM] int 
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  1    wreg      void 
  7916 ;; Registers used:
  7917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 0/0
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMRAM   BANK0   BANK1
  7923 ;;      Params:         1       0       0
  7924 ;;      Locals:         5       0       0
  7925 ;;      Temps:          2       0       0
  7926 ;;      Totals:         8       0       0
  7927 ;;Total ram usage:        8 bytes
  7928 ;; Hardware stack levels used: 1
  7929 ;; Hardware stack levels required when called: 4
  7930 ;; This function calls:
  7931 ;;		_CantaIR
  7932 ;;		_WaitForBusy
  7933 ;; This function is called by:
  7934 ;;		_LcPutChar
  7935 ;;		_LcPutFletxa
  7936 ;;		_MTMenu
  7937 ;;		_GLCDMotor
  7938 ;;		_JMotor
  7939 ;;		_SIOMotor
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text63
  7944  0013AA                     __ptext63:
  7945                           	callstack 0
  7946  0013AA                     _LcGotoXY:
  7947                           	callstack 24
  7948                           
  7949                           ;incstack = 0
  7950                           ;LcGotoXY@Column stored from wreg
  7951  0013AA  6E6F               	movwf	LcGotoXY@Column^0,c
  7952                           
  7953                           ;LcTLCD.c: 112:  int Fisics;;LcTLCD.c: 114:  switch (Rows) {
  7954  0013AC  D030               	goto	l3957
  7955  0013AE                     l3937:
  7956                           
  7957                           ;LcTLCD.c: 116:    Fisics = Column + (!Row ? 0 : 0x40); break;
  7958  0013AE  5068               	movf	LcGotoXY@Row^0,w,c
  7959  0013B0  E004               	bz	l152
  7960  0013B2  6A6C               	clrf	(_LcGotoXY$499+1)^0,c
  7961  0013B4  0E40               	movlw	64
  7962  0013B6  6E6B               	movwf	_LcGotoXY$499^0,c
  7963  0013B8  D002               	goto	l3941
  7964  0013BA                     l152:
  7965  0013BA  6A6B               	clrf	_LcGotoXY$499^0,c
  7966  0013BC  6A6C               	clrf	(_LcGotoXY$499+1)^0,c
  7967  0013BE                     l3941:
  7968  0013BE  506F               	movf	LcGotoXY@Column^0,w,c
  7969  0013C0  246B               	addwf	_LcGotoXY$499^0,w,c
  7970  0013C2  6E6D               	movwf	LcGotoXY@Fisics^0,c
  7971  0013C4  0E00               	movlw	0
  7972  0013C6  206C               	addwfc	(_LcGotoXY$499+1)^0,w,c
  7973  0013C8  6E6E               	movwf	(LcGotoXY@Fisics+1)^0,c
  7974  0013CA  D02E               	goto	l3959
  7975  0013CC                     l156:
  7976                           
  7977                           ;LcTLCD.c: 118:    Fisics = Column;
  7978  0013CC  C06F  F06D         	movff	LcGotoXY@Column,LcGotoXY@Fisics
  7979  0013D0  6A6E               	clrf	(LcGotoXY@Fisics+1)^0,c
  7980                           
  7981                           ;LcTLCD.c: 119:    if (Row == 1) Fisics += 0x40; else
  7982  0013D2  0468               	decf	LcGotoXY@Row^0,w,c
  7983  0013D4  E102               	bnz	l3947
  7984  0013D6  0E40               	movlw	64
  7985  0013D8  D004               	goto	L4
  7986  0013DA                     l3947:
  7987                           
  7988                           ;LcTLCD.c: 120:    if (Row == 2) Fisics += Columns; else
  7989  0013DA  0E02               	movlw	2
  7990  0013DC  1868               	xorwf	LcGotoXY@Row^0,w,c
  7991  0013DE  E104               	bnz	l3951
  7992  0013E0  502E               	movf	_Columns^0,w,c
  7993  0013E2                     L4:
  7994  0013E2  266D               	addwf	LcGotoXY@Fisics^0,f,c
  7995  0013E4  0E00               	movlw	0
  7996  0013E6  D00D               	goto	L5
  7997  0013E8                     l3951:
  7998                           
  7999                           ;LcTLCD.c: 121:    if (Row == 3) Fisics += 0x40+Columns;
  8000  0013E8  0E03               	movlw	3
  8001  0013EA  1868               	xorwf	LcGotoXY@Row^0,w,c
  8002  0013EC  E11D               	bnz	l3959
  8003  0013EE  502E               	movf	_Columns^0,w,c
  8004  0013F0  6E69               	movwf	??_LcGotoXY^0,c
  8005  0013F2  6A6A               	clrf	(??_LcGotoXY+1)^0,c
  8006  0013F4  0E40               	movlw	64
  8007  0013F6  2669               	addwf	??_LcGotoXY^0,f,c
  8008  0013F8  0E00               	movlw	0
  8009  0013FA  226A               	addwfc	(??_LcGotoXY+1)^0,f,c
  8010  0013FC  5069               	movf	??_LcGotoXY^0,w,c
  8011  0013FE  266D               	addwf	LcGotoXY@Fisics^0,f,c
  8012  001400  506A               	movf	(??_LcGotoXY+1)^0,w,c
  8013  001402                     L5:
  8014  001402  226E               	addwfc	(LcGotoXY@Fisics+1)^0,f,c
  8015                           
  8016                           ;LcTLCD.c: 122:    break;
  8017  001404  D011               	goto	l3959
  8018  001406                     l163:
  8019                           
  8020                           ;LcTLCD.c: 125:    Fisics = Column; break;
  8021  001406  C06F  F06D         	movff	LcGotoXY@Column,LcGotoXY@Fisics
  8022  00140A  6A6E               	clrf	(LcGotoXY@Fisics+1)^0,c
  8023  00140C  D00D               	goto	l3959
  8024  00140E                     l3957:
  8025  00140E  502F               	movf	_Rows^0,w,c
  8026  001410  6E69               	movwf	??_LcGotoXY^0,c
  8027  001412  6A6A               	clrf	(??_LcGotoXY+1)^0,c
  8028                           
  8029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8030                           ; Switch size 1, requested type "space"
  8031                           ; Number of cases is 1, Range of values is 0 to 0
  8032                           ; switch strategies available:
  8033                           ; Name         Instructions Cycles
  8034                           ; simple_byte            4     3 (average)
  8035                           ;	Chosen strategy is simple_byte
  8036  001414  506A               	movf	(??_LcGotoXY+1)^0,w,c
  8037  001416  E1F7               	bnz	l163
  8038                           
  8039                           ; Switch size 1, requested type "space"
  8040                           ; Number of cases is 3, Range of values is 1 to 4
  8041                           ; switch strategies available:
  8042                           ; Name         Instructions Cycles
  8043                           ; simple_byte           10     6 (average)
  8044                           ;	Chosen strategy is simple_byte
  8045  001418  5069               	movf	??_LcGotoXY^0,w,c
  8046  00141A  0A01               	xorlw	1	; case 1
  8047  00141C  E0F4               	bz	l163
  8048  00141E  0A03               	xorlw	3	; case 2
  8049  001420  E0C6               	bz	l3937
  8050  001422  0A06               	xorlw	6	; case 4
  8051  001424  E0D3               	bz	l156
  8052  001426  D7EF               	goto	l163
  8053  001428                     l3959:
  8054                           
  8055                           ;LcTLCD.c: 128:  WaitForBusy();
  8056  001428  ECEF  F00B         	call	_WaitForBusy	;wreg free
  8057                           
  8058                           ;LcTLCD.c: 129:  CantaIR(0x80 | Fisics);
  8059  00142C  506D               	movf	LcGotoXY@Fisics^0,w,c
  8060  00142E  0980               	iorlw	128
  8061  001430  ECE9  F00C         	call	_CantaIR
  8062                           
  8063                           ;LcTLCD.c: 131:  RowAct = Row;
  8064  001434  C068  F02D         	movff	LcGotoXY@Row,_RowAct
  8065                           
  8066                           ;LcTLCD.c: 132:  ColumnAct = Column;
  8067  001438  C06F  F02C         	movff	LcGotoXY@Column,_ColumnAct
  8068  00143C  0012               	return		;funcret
  8069  00143E                     __end_of_LcGotoXY:
  8070                           	callstack 0
  8071                           
  8072 ;; *************** function _CantaData *****************
  8073 ;; Defined at:
  8074 ;;		line 203 in file "LcTLCD.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  Data            1    wreg     unsigned char 
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;  Data            1    7[COMRAM] unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1
  8088 ;;      Params:         0       0       0
  8089 ;;      Locals:         1       0       0
  8090 ;;      Temps:          0       0       0
  8091 ;;      Totals:         1       0       0
  8092 ;;Total ram usage:        1 bytes
  8093 ;; Hardware stack levels used: 1
  8094 ;; Hardware stack levels required when called: 3
  8095 ;; This function calls:
  8096 ;;		_CantaPartAlta
  8097 ;;		_CantaPartBaixa
  8098 ;; This function is called by:
  8099 ;;		_LcPutChar
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text64
  8104  00181C                     __ptext64:
  8105                           	callstack 0
  8106  00181C                     _CantaData:
  8107                           	callstack 25
  8108                           
  8109                           ;incstack = 0
  8110                           ;CantaData@Data stored from wreg
  8111  00181C  6E62               	movwf	CantaData@Data^0,c
  8112                           
  8113                           ;LcTLCD.c: 204:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8114  00181E  9694               	bcf	148,3,c	;volatile
  8115  001820  9494               	bcf	148,2,c	;volatile
  8116  001822  9294               	bcf	148,1,c	;volatile
  8117  001824  9094               	bcf	148,0,c	;volatile
  8118                           
  8119                           ;LcTLCD.c: 205:  (LATCbits.LATC5 = 1);
  8120  001826  8A8B               	bsf	139,5,c	;volatile
  8121                           
  8122                           ;LcTLCD.c: 206:  (LATDbits.LATD7 = 0);
  8123  001828  9E8C               	bcf	140,7,c	;volatile
  8124                           
  8125                           ;LcTLCD.c: 207:  (LATCbits.LATC4 = 1);
  8126  00182A  888B               	bsf	139,4,c	;volatile
  8127                           
  8128                           ;LcTLCD.c: 208:  CantaPartAlta(Data);
  8129  00182C  5062               	movf	CantaData@Data^0,w,c
  8130  00182E  ECCB  F00A         	call	_CantaPartAlta
  8131                           
  8132                           ;LcTLCD.c: 209:  (LATCbits.LATC4 = 1);
  8133                           
  8134                           ;LcTLCD.c: 210:  (LATCbits.LATC4 = 0);
  8135                           
  8136                           ;LcTLCD.c: 211:  (LATCbits.LATC4 = 0);
  8137                           
  8138                           ;LcTLCD.c: 212:  (LATCbits.LATC4 = 1);
  8139  001832  D80B               	call	PL62	;call to abstracted procedure
  8140                           
  8141                           ;LcTLCD.c: 213:  CantaPartBaixa(Data);
  8142  001834  5062               	movf	CantaData@Data^0,w,c
  8143  001836  EC98  F00A         	call	_CantaPartBaixa
  8144                           
  8145                           ;LcTLCD.c: 214:  (LATCbits.LATC4 = 1);
  8146                           
  8147                           ;LcTLCD.c: 215:  (LATCbits.LATC4 = 0);
  8148                           
  8149                           ;LcTLCD.c: 216:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8150  00183A  D000               	goto	PL30	;call to abstracted procedure
  8151  00183C                     __end_of_CantaData:
  8152                           	callstack 0
  8153  00183C                     PL30:
  8154                           	callstack 24
  8155  00183C  888B               	bsf	139,4,c	;volatile
  8156  00183E  988B               	bcf	139,4,c	;volatile
  8157  001840  8694               	bsf	148,3,c	;volatile
  8158  001842  8494               	bsf	148,2,c	;volatile
  8159  001844  8294               	bsf	148,1,c	;volatile
  8160  001846  8094               	bsf	148,0,c	;volatile
  8161  001848  0012               	return		;funcret
  8162  00184A                     __end_ofPL30:
  8163                           	callstack 0
  8164  00184A                     PL62:
  8165                           	callstack 24
  8166  00184A  888B               	bsf	139,4,c	;volatile
  8167  00184C  988B               	bcf	139,4,c	;volatile
  8168  00184E  988B               	bcf	139,4,c	;volatile
  8169  001850  888B               	bsf	139,4,c	;volatile
  8170  001852  0012               	return	
  8171  001854                     __end_ofPL62:
  8172                           	callstack 0
  8173                           
  8174 ;; *************** function _LcNewString *****************
  8175 ;; Defined at:
  8176 ;;		line 248 in file "LcTLCD.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  new_s           2    8[COMRAM] PTR unsigned char 
  8179 ;;		 -> stringScore(4), stringText(16), usuaris.username(11), usuaris(240), 
  8180 ;;		 -> string(6), tempsJugant(6), menu(132), enterNewName(15), 
  8181 ;;		 -> deleteUser(12), highScore(12), Score(7), STR_6(12), 
  8182 ;;		 -> STR_5(12), STR_4(15), STR_3(10), STR_2(13), 
  8183 ;;		 -> STR_1(15), 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;		None
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  1    wreg      void 
  8188 ;; Registers used:
  8189 ;;		wreg, status,2, status,0
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMRAM   BANK0   BANK1
  8195 ;;      Params:         2       0       0
  8196 ;;      Locals:         0       0       0
  8197 ;;      Temps:          0       0       0
  8198 ;;      Totals:         2       0       0
  8199 ;;Total ram usage:        2 bytes
  8200 ;; Hardware stack levels used: 1
  8201 ;; Hardware stack levels required when called: 2
  8202 ;; This function calls:
  8203 ;;		Nothing
  8204 ;; This function is called by:
  8205 ;;		_MTMenu
  8206 ;;		_GLCDMotor
  8207 ;;		_JMotor
  8208 ;;		_SIOMotor
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           	psect	text65
  8213  001AEC                     __ptext65:
  8214                           	callstack 0
  8215  001AEC                     _LcNewString:
  8216                           	callstack 27
  8217                           
  8218                           ;LcTLCD.c: 249:     s_ptr = new_s;
  8219                           
  8220                           ;incstack = 0
  8221  001AEC  C063  F005         	movff	LcNewString@new_s,_s_ptr
  8222  001AF0  C064  F006         	movff	LcNewString@new_s+1,_s_ptr+1
  8223                           
  8224                           ;LcTLCD.c: 250:     nou_s = 1;
  8225  001AF4  8079               	bsf	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8226  001AF6  0012               	return		;funcret
  8227  001AF8                     __end_of_LcNewString:
  8228                           	callstack 0
  8229                           
  8230 ;; *************** function _LcLliure *****************
  8231 ;; Defined at:
  8232 ;;		line 283 in file "LcTLCD.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;		None
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;		None
  8237 ;; Return value:  Size  Location     Type
  8238 ;;		None               void
  8239 ;; Registers used:
  8240 ;;		status,0
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMRAM   BANK0   BANK1
  8246 ;;      Params:         0       0       0
  8247 ;;      Locals:         0       0       0
  8248 ;;      Temps:          0       0       0
  8249 ;;      Totals:         0       0       0
  8250 ;;Total ram usage:        0 bytes
  8251 ;; Hardware stack levels used: 1
  8252 ;; Hardware stack levels required when called: 2
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		_MTMenu
  8257 ;;		_GLCDMotor
  8258 ;;		_JMotor
  8259 ;;		_SIOMotor
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           	psect	text66
  8264  001AF8                     __ptext66:
  8265                           	callstack 0
  8266  001AF8                     _LcLliure:
  8267                           	callstack 27
  8268                           
  8269                           ;LcTLCD.c: 284:     return !nou_s;
  8270                           
  8271                           ;incstack = 0
  8272  001AF8  A079               	btfss	(_nou_s/(0+8))^0,_nou_s& (0+7),c
  8273  001AFA  D002               	goto	l4077
  8274  001AFC  90D8               	bcf	status,0,c
  8275  001AFE  0012               	return	
  8276  001B00                     l4077:
  8277  001B00  80D8               	bsf	status,0,c
  8278  001B02  0012               	return		;funcret
  8279  001B04                     __end_of_LcLliure:
  8280                           	callstack 0
  8281                           
  8282 ;; *************** function _LcClear *****************
  8283 ;; Defined at:
  8284 ;;		line 87 in file "LcTLCD.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;		None
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      void 
  8291 ;; Registers used:
  8292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1
  8298 ;;      Params:         0       0       0
  8299 ;;      Locals:         0       0       0
  8300 ;;      Temps:          0       0       0
  8301 ;;      Totals:         0       0       0
  8302 ;;Total ram usage:        0 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; Hardware stack levels required when called: 4
  8305 ;; This function calls:
  8306 ;;		_CantaIR
  8307 ;;		_Espera
  8308 ;;		_WaitForBusy
  8309 ;; This function is called by:
  8310 ;;		_MTMenu
  8311 ;;		_GLCDMotor
  8312 ;;		_SIOMotor
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text67
  8317  001A0A                     __ptext67:
  8318                           	callstack 0
  8319  001A0A                     _LcClear:
  8320                           	callstack 25
  8321                           
  8322                           ;LcTLCD.c: 90:  WaitForBusy(); CantaIR(0x01);
  8323                           
  8324                           ;incstack = 0
  8325  001A0A  ECEF  F00B         	call	_WaitForBusy	;wreg free
  8326  001A0E  0E01               	movlw	1
  8327  001A10  ECE9  F00C         	call	_CantaIR
  8328                           
  8329                           ;LcTLCD.c: 91:  Espera(Timer, 6);
  8330  001A14  D802               	call	PL60	;call to abstracted procedure
  8331  001A16  EFD8  F00C         	goto	_Espera
  8332  001A1A                     __end_of_LcClear:
  8333                           	callstack 0
  8334  001A1A                     PL60:
  8335                           	callstack 25
  8336  001A1A  6A68               	clrf	(Espera@ms+1)^0,c
  8337  001A1C  0E06               	movlw	6
  8338  001A1E  6E67               	movwf	Espera@ms^0,c
  8339  001A20  502B               	movf	_Timer^0,w,c
  8340  001A22  0012               	return	
  8341  001A24                     __end_ofPL60:
  8342                           	callstack 0
  8343                           
  8344 ;; *************** function _WaitForBusy *****************
  8345 ;; Defined at:
  8346 ;;		line 219 in file "LcTLCD.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;  Busy            1   12[COMRAM] unsigned char 
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1
  8360 ;;      Params:         0       0       0
  8361 ;;      Locals:         1       0       0
  8362 ;;      Temps:          0       0       0
  8363 ;;      Totals:         1       0       0
  8364 ;;Total ram usage:        1 bytes
  8365 ;; Hardware stack levels used: 1
  8366 ;; Hardware stack levels required when called: 3
  8367 ;; This function calls:
  8368 ;;		_TiGetTics
  8369 ;;		_TiResetTics
  8370 ;; This function is called by:
  8371 ;;		_LcInit
  8372 ;;		_LcClear
  8373 ;;		_LcCursorOn
  8374 ;;		_LcCursorOff
  8375 ;;		_LcGotoXY
  8376 ;;		_LcPutChar
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text68
  8381  0017DE                     __ptext68:
  8382                           	callstack 0
  8383  0017DE                     _WaitForBusy:
  8384                           	callstack 25
  8385                           
  8386                           ;LcTLCD.c: 220:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8387                           
  8388                           ;incstack = 0
  8389  0017DE  8694               	bsf	148,3,c	;volatile
  8390  0017E0  8494               	bsf	148,2,c	;volatile
  8391  0017E2  8294               	bsf	148,1,c	;volatile
  8392  0017E4  8094               	bsf	148,0,c	;volatile
  8393                           
  8394                           ;LcTLCD.c: 221:  (LATCbits.LATC5 = 0);
  8395  0017E6  9A8B               	bcf	139,5,c	;volatile
  8396                           
  8397                           ;LcTLCD.c: 222:  (LATDbits.LATD7 = 1);
  8398  0017E8  8E8C               	bsf	140,7,c	;volatile
  8399                           
  8400                           ;LcTLCD.c: 223:  TiResetTics(Timer);
  8401  0017EA  502B               	movf	_Timer^0,w,c
  8402  0017EC  ECF7  F00C         	call	_TiResetTics
  8403  0017F0                     l3911:
  8404                           
  8405                           ;LcTLCD.c: 225:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8406  0017F0  888B               	bsf	139,4,c	;volatile
  8407  0017F2  888B               	bsf	139,4,c	;volatile
  8408                           
  8409                           ;LcTLCD.c: 226:   Busy = (PORTCbits.RC3);
  8410  0017F4  0E00               	movlw	0
  8411  0017F6  B682               	btfsc	130,3,c	;volatile
  8412  0017F8  0E01               	movlw	1
  8413  0017FA  6E67               	movwf	WaitForBusy@Busy^0,c
  8414                           
  8415                           ;LcTLCD.c: 227:   (LATCbits.LATC4 = 0);
  8416  0017FC  988B               	bcf	139,4,c	;volatile
  8417                           
  8418                           ;LcTLCD.c: 228:   (LATCbits.LATC4 = 0);
  8419  0017FE  988B               	bcf	139,4,c	;volatile
  8420                           
  8421                           ;LcTLCD.c: 229:   (LATCbits.LATC4 = 1);(LATCbits.LATC4 = 1);
  8422  001800  888B               	bsf	139,4,c	;volatile
  8423  001802  888B               	bsf	139,4,c	;volatile
  8424                           
  8425                           ;LcTLCD.c: 231:   (LATCbits.LATC4 = 0);
  8426  001804  988B               	bcf	139,4,c	;volatile
  8427                           
  8428                           ;LcTLCD.c: 232:   (LATCbits.LATC4 = 0);
  8429  001806  988B               	bcf	139,4,c	;volatile
  8430                           
  8431                           ;LcTLCD.c: 233:   if (TiGetTics(Timer)) break;
  8432  001808  502B               	movf	_Timer^0,w,c
  8433  00180A  ECC5  F00C         	call	_TiGetTics
  8434  00180E  5060               	movf	?_TiGetTics^0,w,c
  8435  001810  1061               	iorwf	(?_TiGetTics+1)^0,w,c
  8436  001812  E001               	bz	l3933
  8437  001814  0012               	return	
  8438  001816                     l3933:
  8439                           
  8440                           ;LcTLCD.c: 234:  } while(Busy);
  8441  001816  5067               	movf	WaitForBusy@Busy^0,w,c
  8442  001818  E1EB               	bnz	l3911
  8443  00181A  0012               	return		;funcret
  8444  00181C                     __end_of_WaitForBusy:
  8445                           	callstack 0
  8446                           
  8447 ;; *************** function _Espera *****************
  8448 ;; Defined at:
  8449 ;;		line 168 in file "LcTLCD.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;  Timer           1    wreg     unsigned char 
  8452 ;;  ms              2   12[COMRAM] int 
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;  Timer           1   15[COMRAM] unsigned char 
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  1    wreg      void 
  8457 ;; Registers used:
  8458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1
  8464 ;;      Params:         2       0       0
  8465 ;;      Locals:         1       0       0
  8466 ;;      Temps:          1       0       0
  8467 ;;      Totals:         4       0       0
  8468 ;;Total ram usage:        4 bytes
  8469 ;; Hardware stack levels used: 1
  8470 ;; Hardware stack levels required when called: 3
  8471 ;; This function calls:
  8472 ;;		_TiGetTics
  8473 ;;		_TiResetTics
  8474 ;; This function is called by:
  8475 ;;		_LcInit
  8476 ;;		_LcClear
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           	psect	text69
  8481  0019B0                     __ptext69:
  8482                           	callstack 0
  8483  0019B0                     _Espera:
  8484                           	callstack 25
  8485                           
  8486                           ;incstack = 0
  8487                           ;Espera@Timer stored from wreg
  8488  0019B0  6E6A               	movwf	Espera@Timer^0,c
  8489                           
  8490                           ;LcTLCD.c: 169:  TiResetTics(Timer);
  8491  0019B2  506A               	movf	Espera@Timer^0,w,c
  8492  0019B4  ECF7  F00C         	call	_TiResetTics
  8493  0019B8                     l4029:
  8494  0019B8  506A               	movf	Espera@Timer^0,w,c
  8495  0019BA  ECC5  F00C         	call	_TiGetTics
  8496  0019BE  5067               	movf	Espera@ms^0,w,c
  8497  0019C0  5C60               	subwf	?_TiGetTics^0,w,c
  8498  0019C2  5061               	movf	(?_TiGetTics+1)^0,w,c
  8499  0019C4  0A80               	xorlw	128
  8500  0019C6  6E69               	movwf	??_Espera^0,c
  8501  0019C8  5068               	movf	(Espera@ms+1)^0,w,c
  8502  0019CA  0A80               	xorlw	128
  8503  0019CC  5869               	subwfb	??_Espera^0,w,c
  8504  0019CE  E3F4               	bnc	l4029
  8505  0019D0  0012               	return		;funcret
  8506  0019D2                     __end_of_Espera:
  8507                           	callstack 0
  8508                           
  8509 ;; *************** function _CantaIR *****************
  8510 ;; Defined at:
  8511 ;;		line 187 in file "LcTLCD.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;  IR              1    wreg     unsigned char 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  IR              1    7[COMRAM] unsigned char 
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      void 
  8518 ;; Registers used:
  8519 ;;		wreg, status,2, status,0, cstack
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 0/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMRAM   BANK0   BANK1
  8525 ;;      Params:         0       0       0
  8526 ;;      Locals:         1       0       0
  8527 ;;      Temps:          0       0       0
  8528 ;;      Totals:         1       0       0
  8529 ;;Total ram usage:        1 bytes
  8530 ;; Hardware stack levels used: 1
  8531 ;; Hardware stack levels required when called: 3
  8532 ;; This function calls:
  8533 ;;		_CantaPartAlta
  8534 ;;		_CantaPartBaixa
  8535 ;; This function is called by:
  8536 ;;		_LcScroll
  8537 ;;		_LcInit
  8538 ;;		_LcClear
  8539 ;;		_LcCursorOn
  8540 ;;		_LcCursorOff
  8541 ;;		_LcGotoXY
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           	psect	text70
  8546  0019D2                     __ptext70:
  8547                           	callstack 0
  8548  0019D2                     _CantaIR:
  8549                           	callstack 24
  8550                           
  8551                           ;incstack = 0
  8552                           ;CantaIR@IR stored from wreg
  8553  0019D2  6E62               	movwf	CantaIR@IR^0,c
  8554                           
  8555                           ;LcTLCD.c: 188:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 0);
  8556  0019D4  9694               	bcf	148,3,c	;volatile
  8557                           
  8558                           ;LcTLCD.c: 189:  (LATCbits.LATC5 = 0);
  8559                           
  8560                           ;LcTLCD.c: 190:  (LATDbits.LATD7 = 0);
  8561                           
  8562                           ;LcTLCD.c: 191:  (LATCbits.LATC4 = 1);
  8563  0019D6  EC51  F00A         	call	PL40	;call to abstracted procedure
  8564                           
  8565                           ;LcTLCD.c: 192:  CantaPartAlta(IR);
  8566  0019DA  5062               	movf	CantaIR@IR^0,w,c
  8567  0019DC  ECCB  F00A         	call	_CantaPartAlta
  8568                           
  8569                           ;LcTLCD.c: 193:  (LATCbits.LATC4 = 1);
  8570                           
  8571                           ;LcTLCD.c: 194:  (LATCbits.LATC4 = 0);
  8572                           
  8573                           ;LcTLCD.c: 195:  (LATCbits.LATC4 = 0);
  8574                           
  8575                           ;LcTLCD.c: 196:  (LATCbits.LATC4 = 1);
  8576  0019E0  EC25  F00C         	call	PL62	;call to abstracted procedure
  8577                           
  8578                           ;LcTLCD.c: 197:  CantaPartBaixa(IR);
  8579  0019E4  5062               	movf	CantaIR@IR^0,w,c
  8580  0019E6  EC98  F00A         	call	_CantaPartBaixa
  8581                           
  8582                           ;LcTLCD.c: 198:  (LATCbits.LATC4 = 1);
  8583                           
  8584                           ;LcTLCD.c: 199:  (LATCbits.LATC4 = 0);
  8585                           
  8586                           ;LcTLCD.c: 200:  (TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TRISC2 = TRISCbits.TRI
      +                          SC3 = 1);
  8587  0019EA  EF1E  F00C         	goto	PL30	;call to abstracted procedure
  8588  0019EE                     __end_of_CantaIR:
  8589                           	callstack 0
  8590                           
  8591 ;; *************** function _CantaPartBaixa *****************
  8592 ;; Defined at:
  8593 ;;		line 180 in file "LcTLCD.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  c               1    wreg     unsigned char 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  c               1    6[COMRAM] unsigned char 
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1    wreg      void 
  8600 ;; Registers used:
  8601 ;;		wreg, status,2, status,0
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1
  8607 ;;      Params:         0       0       0
  8608 ;;      Locals:         1       0       0
  8609 ;;      Temps:          1       0       0
  8610 ;;      Totals:         2       0       0
  8611 ;;Total ram usage:        2 bytes
  8612 ;; Hardware stack levels used: 1
  8613 ;; Hardware stack levels required when called: 2
  8614 ;; This function calls:
  8615 ;;		Nothing
  8616 ;; This function is called by:
  8617 ;;		_CantaIR
  8618 ;;		_CantaData
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           
  8622                           	psect	text71
  8623  001530                     __ptext71:
  8624                           	callstack 0
  8625  001530                     _CantaPartBaixa:
  8626                           	callstack 24
  8627                           
  8628                           ;incstack = 0
  8629                           ;CantaPartBaixa@c stored from wreg
  8630  001530  6E61               	movwf	CantaPartBaixa@c^0,c
  8631                           
  8632                           ;LcTLCD.c: 181:   (LATCbits.LATC3 = (c & 0x08 ? 1 : 0));
  8633  001532  A661               	btfss	CantaPartBaixa@c^0,3,c
  8634  001534  D003               	goto	u3190
  8635  001536  6A60               	clrf	??_CantaPartBaixa^0,c
  8636  001538  2A60               	incf	??_CantaPartBaixa^0,f,c
  8637  00153A  D001               	goto	u3208
  8638  00153C                     u3190:
  8639  00153C  6A60               	clrf	??_CantaPartBaixa^0,c
  8640  00153E                     u3208:
  8641  00153E  4660               	rlncf	??_CantaPartBaixa^0,f,c
  8642  001540  D825               	call	PL66	;call to abstracted procedure
  8643  001542  0BF7               	andlw	-9
  8644  001544  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8645  001546  6E8B               	movwf	139,c	;volatile
  8646                           
  8647                           ;LcTLCD.c: 182:   (LATCbits.LATC2 = (c & 0x04 ? 1 : 0));
  8648  001548  A461               	btfss	CantaPartBaixa@c^0,2,c
  8649  00154A  D003               	goto	u3210
  8650  00154C  6A60               	clrf	??_CantaPartBaixa^0,c
  8651  00154E  2A60               	incf	??_CantaPartBaixa^0,f,c
  8652  001550  D001               	goto	u3228
  8653  001552                     u3210:
  8654  001552  6A60               	clrf	??_CantaPartBaixa^0,c
  8655  001554                     u3228:
  8656  001554  D81B               	call	PL66	;call to abstracted procedure
  8657  001556  0BFB               	andlw	-5
  8658  001558  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8659  00155A  6E8B               	movwf	139,c	;volatile
  8660                           
  8661                           ;LcTLCD.c: 183:   (LATCbits.LATC1 = (c & 0x02 ? 1 : 0));
  8662  00155C  A261               	btfss	CantaPartBaixa@c^0,1,c
  8663  00155E  D003               	goto	u3230
  8664  001560  6A60               	clrf	??_CantaPartBaixa^0,c
  8665  001562  2A60               	incf	??_CantaPartBaixa^0,f,c
  8666  001564  D001               	goto	u3248
  8667  001566                     u3230:
  8668  001566  6A60               	clrf	??_CantaPartBaixa^0,c
  8669  001568                     u3248:
  8670  001568  4660               	rlncf	??_CantaPartBaixa^0,f,c
  8671  00156A  508B               	movf	139,w,c	;volatile
  8672  00156C  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8673  00156E  0BFD               	andlw	-3
  8674  001570  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8675  001572  6E8B               	movwf	139,c	;volatile
  8676                           
  8677                           ;LcTLCD.c: 184:   (LATCbits.LATC0 = (c & 0x01 ? 1 : 0));
  8678  001574  A061               	btfss	CantaPartBaixa@c^0,0,c
  8679  001576  D003               	goto	u3250
  8680  001578  6A60               	clrf	??_CantaPartBaixa^0,c
  8681  00157A  2A60               	incf	??_CantaPartBaixa^0,f,c
  8682  00157C  D001               	goto	u3268
  8683  00157E                     u3250:
  8684  00157E  6A60               	clrf	??_CantaPartBaixa^0,c
  8685  001580                     u3268:
  8686  001580  508B               	movf	139,w,c	;volatile
  8687  001582  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8688  001584  0BFE               	andlw	-2
  8689  001586  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8690  001588  6E8B               	movwf	139,c	;volatile
  8691  00158A  0012               	return		;funcret
  8692  00158C                     __end_of_CantaPartBaixa:
  8693                           	callstack 0
  8694  00158C                     PL66:
  8695                           	callstack 24
  8696  00158C  4660               	rlncf	??_CantaPartBaixa^0,f,c
  8697  00158E  4660               	rlncf	??_CantaPartBaixa^0,f,c
  8698  001590  508B               	movf	139,w,c	;volatile
  8699  001592  1860               	xorwf	??_CantaPartBaixa^0,w,c
  8700  001594  0012               	return	
  8701  001596                     __end_ofPL66:
  8702                           	callstack 0
  8703                           
  8704 ;; *************** function _CantaPartAlta *****************
  8705 ;; Defined at:
  8706 ;;		line 173 in file "LcTLCD.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  c               1    wreg     unsigned char 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  c               1    6[COMRAM] unsigned char 
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  1    wreg      void 
  8713 ;; Registers used:
  8714 ;;		wreg, status,2, status,0
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMRAM   BANK0   BANK1
  8720 ;;      Params:         0       0       0
  8721 ;;      Locals:         1       0       0
  8722 ;;      Temps:          1       0       0
  8723 ;;      Totals:         2       0       0
  8724 ;;Total ram usage:        2 bytes
  8725 ;; Hardware stack levels used: 1
  8726 ;; Hardware stack levels required when called: 2
  8727 ;; This function calls:
  8728 ;;		Nothing
  8729 ;; This function is called by:
  8730 ;;		_CantaIR
  8731 ;;		_CantaData
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text72
  8736  001596                     __ptext72:
  8737                           	callstack 0
  8738  001596                     _CantaPartAlta:
  8739                           	callstack 24
  8740                           
  8741                           ;incstack = 0
  8742                           ;CantaPartAlta@c stored from wreg
  8743  001596  6E61               	movwf	CantaPartAlta@c^0,c
  8744                           
  8745                           ;LcTLCD.c: 174:   (LATCbits.LATC3 = (c & 0x80 ? 1 : 0));
  8746  001598  AE61               	btfss	CantaPartAlta@c^0,7,c
  8747  00159A  D003               	goto	u3110
  8748  00159C  6A60               	clrf	??_CantaPartAlta^0,c
  8749  00159E  2A60               	incf	??_CantaPartAlta^0,f,c
  8750  0015A0  D001               	goto	u3128
  8751  0015A2                     u3110:
  8752  0015A2  6A60               	clrf	??_CantaPartAlta^0,c
  8753  0015A4                     u3128:
  8754  0015A4  4660               	rlncf	??_CantaPartAlta^0,f,c
  8755  0015A6  D825               	call	PL58	;call to abstracted procedure
  8756  0015A8  0BF7               	andlw	-9
  8757  0015AA  1860               	xorwf	??_CantaPartAlta^0,w,c
  8758  0015AC  6E8B               	movwf	139,c	;volatile
  8759                           
  8760                           ;LcTLCD.c: 175:   (LATCbits.LATC2 = (c & 0x40 ? 1 : 0));
  8761  0015AE  AC61               	btfss	CantaPartAlta@c^0,6,c
  8762  0015B0  D003               	goto	u3130
  8763  0015B2  6A60               	clrf	??_CantaPartAlta^0,c
  8764  0015B4  2A60               	incf	??_CantaPartAlta^0,f,c
  8765  0015B6  D001               	goto	u3148
  8766  0015B8                     u3130:
  8767  0015B8  6A60               	clrf	??_CantaPartAlta^0,c
  8768  0015BA                     u3148:
  8769  0015BA  D81B               	call	PL58	;call to abstracted procedure
  8770  0015BC  0BFB               	andlw	-5
  8771  0015BE  1860               	xorwf	??_CantaPartAlta^0,w,c
  8772  0015C0  6E8B               	movwf	139,c	;volatile
  8773                           
  8774                           ;LcTLCD.c: 176:   (LATCbits.LATC1 = (c & 0x20 ? 1 : 0));
  8775  0015C2  AA61               	btfss	CantaPartAlta@c^0,5,c
  8776  0015C4  D003               	goto	u3150
  8777  0015C6  6A60               	clrf	??_CantaPartAlta^0,c
  8778  0015C8  2A60               	incf	??_CantaPartAlta^0,f,c
  8779  0015CA  D001               	goto	u3168
  8780  0015CC                     u3150:
  8781  0015CC  6A60               	clrf	??_CantaPartAlta^0,c
  8782  0015CE                     u3168:
  8783  0015CE  4660               	rlncf	??_CantaPartAlta^0,f,c
  8784  0015D0  508B               	movf	139,w,c	;volatile
  8785  0015D2  1860               	xorwf	??_CantaPartAlta^0,w,c
  8786  0015D4  0BFD               	andlw	-3
  8787  0015D6  1860               	xorwf	??_CantaPartAlta^0,w,c
  8788  0015D8  6E8B               	movwf	139,c	;volatile
  8789                           
  8790                           ;LcTLCD.c: 177:   (LATCbits.LATC0 = (c & 0x10 ? 1 : 0));
  8791  0015DA  A861               	btfss	CantaPartAlta@c^0,4,c
  8792  0015DC  D003               	goto	u3170
  8793  0015DE  6A60               	clrf	??_CantaPartAlta^0,c
  8794  0015E0  2A60               	incf	??_CantaPartAlta^0,f,c
  8795  0015E2  D001               	goto	u3188
  8796  0015E4                     u3170:
  8797  0015E4  6A60               	clrf	??_CantaPartAlta^0,c
  8798  0015E6                     u3188:
  8799  0015E6  508B               	movf	139,w,c	;volatile
  8800  0015E8  1860               	xorwf	??_CantaPartAlta^0,w,c
  8801  0015EA  0BFE               	andlw	-2
  8802  0015EC  1860               	xorwf	??_CantaPartAlta^0,w,c
  8803  0015EE  6E8B               	movwf	139,c	;volatile
  8804  0015F0  0012               	return		;funcret
  8805  0015F2                     __end_of_CantaPartAlta:
  8806                           	callstack 0
  8807  0015F2                     PL58:
  8808                           	callstack 24
  8809  0015F2  4660               	rlncf	??_CantaPartAlta^0,f,c
  8810  0015F4  4660               	rlncf	??_CantaPartAlta^0,f,c
  8811  0015F6  508B               	movf	139,w,c	;volatile
  8812  0015F8  1860               	xorwf	??_CantaPartAlta^0,w,c
  8813  0015FA  0012               	return	
  8814  0015FC                     __end_ofPL58:
  8815                           	callstack 0
  8816                           
  8817 ;; *************** function _GLCDInit *****************
  8818 ;; Defined at:
  8819 ;;		line 26 in file "GLCDGestioLCD.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;		None
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;		None
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMRAM   BANK0   BANK1
  8833 ;;      Params:         0       0       0
  8834 ;;      Locals:         0       0       0
  8835 ;;      Temps:          0       0       0
  8836 ;;      Totals:         0       0       0
  8837 ;;Total ram usage:        0 bytes
  8838 ;; Hardware stack levels used: 1
  8839 ;; Hardware stack levels required when called: 3
  8840 ;; This function calls:
  8841 ;;		_TiGetTimer
  8842 ;; This function is called by:
  8843 ;;		_main
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text73
  8848  001B84                     __ptext73:
  8849                           	callstack 0
  8850  001B84                     _GLCDInit:
  8851                           	callstack 27
  8852                           
  8853                           ;GLCDGestioLCD.c: 27:     timerGLCD=TiGetTimer();
  8854                           
  8855                           ;incstack = 0
  8856  001B84  EC60  F00C         	call	_TiGetTimer	;wreg free
  8857  001B88  6E1D               	movwf	_timerGLCD^0,c
  8858  001B8A  0012               	return		;funcret
  8859  001B8C                     __end_of_GLCDInit:
  8860                           	callstack 0
  8861                           
  8862 ;; *************** function _CtoA *****************
  8863 ;; Defined at:
  8864 ;;		line 23 in file "CtoA.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;		None
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;		None
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  1    wreg      void 
  8871 ;; Registers used:
  8872 ;;		wreg, status,2, status,0
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMRAM   BANK0   BANK1
  8878 ;;      Params:         0       0       0
  8879 ;;      Locals:         0       0       0
  8880 ;;      Temps:          2       0       0
  8881 ;;      Totals:         2       0       0
  8882 ;;Total ram usage:        2 bytes
  8883 ;; Hardware stack levels used: 1
  8884 ;; Hardware stack levels required when called: 2
  8885 ;; This function calls:
  8886 ;;		Nothing
  8887 ;; This function is called by:
  8888 ;;		_main
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892                           	psect	text74
  8893  0016B4                     __ptext74:
  8894                           	callstack 0
  8895  0016B4                     _CtoA:
  8896                           	callstack 28
  8897                           
  8898                           ;CtoA.c: 24:  static char state = 0;;CtoA.c: 25:     switch(state){
  8899                           
  8900                           ;incstack = 0
  8901  0016B4  D01E               	goto	l3407
  8902  0016B6                     l3377:
  8903                           
  8904                           ;CtoA.c: 27:    if (convertir != 250) {
  8905  0016B6  0EFA               	movlw	250
  8906  0016B8  183E               	xorwf	_convertir^0,w,c
  8907  0016BA  B4D8               	btfsc	status,2,c
  8908  0016BC  0012               	return	
  8909                           
  8910                           ;CtoA.c: 28:     stringScore[2]++;
  8911  0016BE  2A59               	incf	(_stringScore+2)^0,f,c
  8912                           
  8913                           ;CtoA.c: 29:             if (stringScore[2] == 58) {
  8914  0016C0  0E3A               	movlw	58
  8915  0016C2  1859               	xorwf	(_stringScore+2)^0,w,c
  8916  0016C4  E103               	bnz	l3387
  8917                           
  8918                           ;CtoA.c: 30:                 stringScore[2] = '0';
  8919  0016C6  0E30               	movlw	48
  8920  0016C8  6E59               	movwf	(_stringScore+2)^0,c
  8921                           
  8922                           ;CtoA.c: 31:                 stringScore[1]++;
  8923  0016CA  2A58               	incf	(_stringScore+1)^0,f,c
  8924  0016CC                     l3387:
  8925                           
  8926                           ;CtoA.c: 33:             if (stringScore[1] == 58) {
  8927  0016CC  0E3A               	movlw	58
  8928  0016CE  1858               	xorwf	(_stringScore+1)^0,w,c
  8929  0016D0  E103               	bnz	l3393
  8930                           
  8931                           ;CtoA.c: 34:                 stringScore[1] = '0';
  8932  0016D2  0E30               	movlw	48
  8933  0016D4  6E58               	movwf	(_stringScore+1)^0,c
  8934                           
  8935                           ;CtoA.c: 35:                 stringScore[0]++;
  8936  0016D6  2A57               	incf	_stringScore^0,f,c
  8937  0016D8                     l3393:
  8938                           
  8939                           ;CtoA.c: 37:             convertir--;
  8940  0016D8  063E               	decf	_convertir^0,f,c
  8941                           
  8942                           ;CtoA.c: 38:     state = 1;
  8943  0016DA  0E01               	movlw	1
  8944  0016DC  6E07               	movwf	CtoA@state^0,c
  8945  0016DE  0C01               	retlw	1
  8946  0016E0                     l3395:
  8947                           
  8948                           ;CtoA.c: 42:    if (convertir == 0) {
  8949  0016E0  503E               	movf	_convertir^0,w,c
  8950  0016E2  E104               	bnz	l3401
  8951                           
  8952                           ;CtoA.c: 43:     convertir = 250;
  8953  0016E4  0EFA               	movlw	250
  8954  0016E6  6E3E               	movwf	_convertir^0,c
  8955  0016E8                     l3399:
  8956                           
  8957                           ;CtoA.c: 44:     state = 0;
  8958  0016E8  6A07               	clrf	CtoA@state^0,c
  8959                           
  8960                           ;CtoA.c: 45:    }
  8961  0016EA  0012               	return	
  8962  0016EC                     l3401:
  8963  0016EC  503E               	movf	_convertir^0,w,c
  8964  0016EE  E1FC               	bnz	l3399
  8965  0016F0  0012               	return	
  8966  0016F2                     l3407:
  8967  0016F2  5007               	movf	CtoA@state^0,w,c
  8968  0016F4  6E60               	movwf	??_CtoA^0,c
  8969  0016F6  6A61               	clrf	(??_CtoA+1)^0,c
  8970                           
  8971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8972                           ; Switch size 1, requested type "space"
  8973                           ; Number of cases is 1, Range of values is 0 to 0
  8974                           ; switch strategies available:
  8975                           ; Name         Instructions Cycles
  8976                           ; simple_byte            4     3 (average)
  8977                           ;	Chosen strategy is simple_byte
  8978  0016F8  5061               	movf	(??_CtoA+1)^0,w,c
  8979  0016FA  A4D8               	btfss	status,2,c
  8980  0016FC  0012               	return	
  8981                           
  8982                           ; Switch size 1, requested type "space"
  8983                           ; Number of cases is 2, Range of values is 0 to 1
  8984                           ; switch strategies available:
  8985                           ; Name         Instructions Cycles
  8986                           ; simple_byte            7     4 (average)
  8987                           ;	Chosen strategy is simple_byte
  8988  0016FE  5060               	movf	??_CtoA^0,w,c
  8989  001700  E0DA               	bz	l3377
  8990  001702  0A01               	xorlw	1	; case 1
  8991  001704  E0ED               	bz	l3395
  8992  001706  0012               	return		;funcret
  8993  001708                     __end_of_CtoA:
  8994                           	callstack 0
  8995                           
  8996 ;; *************** function _AlTAltaveu *****************
  8997 ;; Defined at:
  8998 ;;		line 24 in file "AlTAltaveu.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;		None
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;		None
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1
  9012 ;;      Params:         0       0       0
  9013 ;;      Locals:         0       0       0
  9014 ;;      Temps:          3       0       0
  9015 ;;      Totals:         3       0       0
  9016 ;;Total ram usage:        3 bytes
  9017 ;; Hardware stack levels used: 1
  9018 ;; Hardware stack levels required when called: 3
  9019 ;; This function calls:
  9020 ;;		_TiGetTics
  9021 ;;		_TiResetTics
  9022 ;; This function is called by:
  9023 ;;		_main
  9024 ;; This function uses a non-reentrant model
  9025 ;;
  9026                           
  9027                           	psect	text75
  9028  00110E                     __ptext75:
  9029                           	callstack 0
  9030  00110E                     _AlTAltaveu:
  9031                           	callstack 27
  9032                           
  9033                           ;AlTAltaveu.c: 25:  static char state = 0;;AlTAltaveu.c: 27:  switch(state) {
  9034                           
  9035                           ;incstack = 0
  9036  00110E  D03E               	goto	l4357
  9037  001110                     l302:
  9038                           
  9039                           ;AlTAltaveu.c: 29:    if (reproduir == 1) {
  9040  001110  AE78               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  9041  001112  0012               	return	
  9042                           
  9043                           ;AlTAltaveu.c: 30:     nota = 1;
  9044  001114  0E01               	movlw	1
  9045  001116  6E28               	movwf	_nota^0,c
  9046                           
  9047                           ;AlTAltaveu.c: 31:     TiResetTics(timer_nota);
  9048  001118  5029               	movf	_timer_nota^0,w,c
  9049  00111A  ECF7  F00C         	call	_TiResetTics
  9050                           
  9051                           ;AlTAltaveu.c: 32:     TiResetTics(timer_durada);
  9052  00111E  5027               	movf	_timer_durada^0,w,c
  9053  001120  ECF7  F00C         	call	_TiResetTics
  9054                           
  9055                           ;AlTAltaveu.c: 33:     state++;
  9056  001124  2A26               	incf	AlTAltaveu@state^0,f,c
  9057  001126  0012               	return	
  9058  001128                     l305:
  9059                           
  9060                           ;AlTAltaveu.c: 38:    if (reproduir == 0) {
  9061  001128  AE78               	btfss	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  9062                           
  9063                           ;AlTAltaveu.c: 39:     state--;
  9064  00112A  0626               	decf	AlTAltaveu@state^0,f,c
  9065                           
  9066                           ;AlTAltaveu.c: 41:    if (TiGetTics(timer_nota) > nota) {
  9067  00112C  5029               	movf	_timer_nota^0,w,c
  9068  00112E  ECC5  F00C         	call	_TiGetTics
  9069  001132  D83B               	call	PL18	;call to abstracted procedure
  9070  001134  E205               	bc	l4335
  9071                           
  9072                           ;AlTAltaveu.c: 42:     LATBbits.LB0 = 1;
  9073  001136  808A               	bsf	138,0,c	;volatile
  9074                           
  9075                           ;AlTAltaveu.c: 43:     TiResetTics(timer_nota);
  9076  001138  5029               	movf	_timer_nota^0,w,c
  9077  00113A  ECF7  F00C         	call	_TiResetTics
  9078                           
  9079                           ;AlTAltaveu.c: 44:     state++;
  9080  00113E  2A26               	incf	AlTAltaveu@state^0,f,c
  9081  001140                     l4335:
  9082                           
  9083                           ;AlTAltaveu.c: 46:    if (TiGetTics(timer_durada) > 1500) {
  9084  001140  5027               	movf	_timer_durada^0,w,c
  9085  001142  ECC5  F00C         	call	_TiGetTics
  9086  001146  BE61               	btfsc	(?_TiGetTics+1)^0,7,c
  9087  001148  0012               	return	
  9088  00114A  0EDD               	movlw	221
  9089  00114C  5C60               	subwf	?_TiGetTics^0,w,c
  9090  00114E  0E05               	movlw	5
  9091  001150  5861               	subwfb	(?_TiGetTics+1)^0,w,c
  9092  001152  A0D8               	btfss	status,0,c
  9093  001154  0012               	return	
  9094                           
  9095                           ;AlTAltaveu.c: 47:     state = 3;
  9096  001156  0E03               	movlw	3
  9097  001158  6E26               	movwf	AlTAltaveu@state^0,c
  9098  00115A  0C03               	retlw	3
  9099  00115C                     l4339:
  9100                           
  9101                           ;AlTAltaveu.c: 51:    if (TiGetTics(timer_nota) > nota) {
  9102  00115C  5029               	movf	_timer_nota^0,w,c
  9103  00115E  ECC5  F00C         	call	_TiGetTics
  9104  001162  D823               	call	PL18	;call to abstracted procedure
  9105  001164  B0D8               	btfsc	status,0,c
  9106  001166  0012               	return	
  9107                           
  9108                           ;AlTAltaveu.c: 52:     LATBbits.LB0 = 0;
  9109  001168  908A               	bcf	138,0,c	;volatile
  9110                           
  9111                           ;AlTAltaveu.c: 53:     TiResetTics(timer_nota);
  9112  00116A  5029               	movf	_timer_nota^0,w,c
  9113  00116C  ECF7  F00C         	call	_TiResetTics
  9114                           
  9115                           ;AlTAltaveu.c: 54:     state--;
  9116  001170  0626               	decf	AlTAltaveu@state^0,f,c
  9117  001172  0012               	return	
  9118  001174                     l4347:
  9119                           
  9120                           ;AlTAltaveu.c: 58:    TiResetTics(timer_durada);
  9121  001174  5027               	movf	_timer_durada^0,w,c
  9122  001176  ECF7  F00C         	call	_TiResetTics
  9123                           
  9124                           ;AlTAltaveu.c: 59:    nota++;
  9125  00117A  2A28               	incf	_nota^0,f,c
  9126                           
  9127                           ;AlTAltaveu.c: 60:    if(nota>10){
  9128  00117C  0E0A               	movlw	10
  9129  00117E  6428               	cpfsgt	_nota^0,c
  9130  001180  D002               	goto	l312
  9131                           
  9132                           ;AlTAltaveu.c: 61:                 nota=1;
  9133  001182  0E01               	movlw	1
  9134  001184  6E28               	movwf	_nota^0,c
  9135  001186                     l312:
  9136                           
  9137                           ;AlTAltaveu.c: 63:             state = 1;
  9138  001186  0E01               	movlw	1
  9139  001188  6E26               	movwf	AlTAltaveu@state^0,c
  9140                           
  9141                           ;AlTAltaveu.c: 64:   break;
  9142  00118A  0C01               	retlw	1
  9143  00118C                     l4357:
  9144  00118C  5026               	movf	AlTAltaveu@state^0,w,c
  9145  00118E  6E67               	movwf	??_AlTAltaveu^0,c
  9146  001190  6A68               	clrf	(??_AlTAltaveu+1)^0,c
  9147                           
  9148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9149                           ; Switch size 1, requested type "space"
  9150                           ; Number of cases is 1, Range of values is 0 to 0
  9151                           ; switch strategies available:
  9152                           ; Name         Instructions Cycles
  9153                           ; simple_byte            4     3 (average)
  9154                           ;	Chosen strategy is simple_byte
  9155  001192  5068               	movf	(??_AlTAltaveu+1)^0,w,c
  9156  001194  A4D8               	btfss	status,2,c
  9157  001196  0012               	return	
  9158                           
  9159                           ; Switch size 1, requested type "space"
  9160                           ; Number of cases is 4, Range of values is 0 to 3
  9161                           ; switch strategies available:
  9162                           ; Name         Instructions Cycles
  9163                           ; simple_byte           13     7 (average)
  9164                           ;	Chosen strategy is simple_byte
  9165  001198  5067               	movf	??_AlTAltaveu^0,w,c
  9166  00119A  E0BA               	bz	l302
  9167  00119C  0A01               	xorlw	1	; case 1
  9168  00119E  E0C4               	bz	l305
  9169  0011A0  0A03               	xorlw	3	; case 2
  9170  0011A2  E0DC               	bz	l4339
  9171  0011A4  0A01               	xorlw	1	; case 3
  9172  0011A6  E0E6               	bz	l4347
  9173  0011A8  0012               	return		;funcret
  9174  0011AA                     __end_of_AlTAltaveu:
  9175                           	callstack 0
  9176  0011AA                     PL18:
  9177                           	callstack 27
  9178  0011AA  5028               	movf	_nota^0,w,c
  9179  0011AC  6E67               	movwf	??_AlTAltaveu^0,c
  9180  0011AE  6A68               	clrf	(??_AlTAltaveu+1)^0,c
  9181  0011B0  5060               	movf	?_TiGetTics^0,w,c
  9182  0011B2  5C67               	subwf	??_AlTAltaveu^0,w,c
  9183  0011B4  5068               	movf	(??_AlTAltaveu+1)^0,w,c
  9184  0011B6  0A80               	xorlw	128
  9185  0011B8  6E69               	movwf	(??_AlTAltaveu+2)^0,c
  9186  0011BA  5061               	movf	(?_TiGetTics+1)^0,w,c
  9187  0011BC  0A80               	xorlw	128
  9188  0011BE  5869               	subwfb	(??_AlTAltaveu+2)^0,w,c
  9189  0011C0  0012               	return	
  9190  0011C2                     __end_ofPL18:
  9191                           	callstack 0
  9192                           
  9193 ;; *************** function _TiResetTics *****************
  9194 ;; Defined at:
  9195 ;;		line 55 in file "TiTTimer.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  Handle          1    wreg     unsigned char 
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  Handle          1    5[COMRAM] unsigned char 
  9200 ;; Return value:  Size  Location     Type
  9201 ;;                  1    wreg      void 
  9202 ;; Registers used:
  9203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMRAM   BANK0   BANK1
  9209 ;;      Params:         0       0       0
  9210 ;;      Locals:         1       0       0
  9211 ;;      Temps:          0       0       0
  9212 ;;      Totals:         1       0       0
  9213 ;;Total ram usage:        1 bytes
  9214 ;; Hardware stack levels used: 1
  9215 ;; Hardware stack levels required when called: 2
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		_Espera
  9220 ;;		_WaitForBusy
  9221 ;;		_AlTAltaveu
  9222 ;;		_MTMenu
  9223 ;;		_TeTeclat
  9224 ;;		_GLCDMotor
  9225 ;;		_HInit
  9226 ;;		_HHoraMotor
  9227 ;;		_SMotor
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text76
  9232  0019EE                     __ptext76:
  9233                           	callstack 0
  9234  0019EE                     _TiResetTics:
  9235                           	callstack 27
  9236                           
  9237                           ;incstack = 0
  9238                           ;TiResetTics@Handle stored from wreg
  9239  0019EE  6E60               	movwf	TiResetTics@Handle^0,c
  9240                           
  9241                           ;TiTTimer.c: 59:     s_Timers[Handle].h_initialTics=h_Tics;
  9242  0019F0  5060               	movf	TiResetTics@Handle^0,w,c
  9243  0019F2  D805               	call	PL24	;call to abstracted procedure
  9244  0019F4  C003  FFDE         	movff	_h_Tics,postinc2
  9245  0019F8  C004  FFDD         	movff	_h_Tics+1,postdec2
  9246  0019FC  0012               	return		;funcret
  9247  0019FE                     __end_of_TiResetTics:
  9248                           	callstack 0
  9249  0019FE                     PL24:
  9250                           	callstack 22
  9251  0019FE  0D03               	mullw	3
  9252  001A00  50F3               	movf	243,w,c
  9253  001A02  0FB7               	addlw	low _s_Timers
  9254  001A04  6ED9               	movwf	fsr2l,c
  9255  001A06  6ADA               	clrf	fsr2h,c
  9256  001A08  0012               	return	
  9257  001A0A                     __end_ofPL24:
  9258                           	callstack 0
  9259                           
  9260 ;; *************** function _TiGetTics *****************
  9261 ;; Defined at:
  9262 ;;		line 61 in file "TiTTimer.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;  Handle          1    wreg     unsigned char 
  9265 ;; Auto vars:     Size  Location     Type
  9266 ;;  Handle          1    9[COMRAM] unsigned char 
  9267 ;;  actual          2   10[COMRAM] volatile unsigned int 
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  2    5[COMRAM] int 
  9270 ;; Registers used:
  9271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1
  9277 ;;      Params:         2       0       0
  9278 ;;      Locals:         3       0       0
  9279 ;;      Temps:          2       0       0
  9280 ;;      Totals:         7       0       0
  9281 ;;Total ram usage:        7 bytes
  9282 ;; Hardware stack levels used: 1
  9283 ;; Hardware stack levels required when called: 2
  9284 ;; This function calls:
  9285 ;;		Nothing
  9286 ;; This function is called by:
  9287 ;;		_Espera
  9288 ;;		_WaitForBusy
  9289 ;;		_AlTAltaveu
  9290 ;;		_MTMenu
  9291 ;;		_TeTeclat
  9292 ;;		_GLCDMotor
  9293 ;;		_HHoraMotor
  9294 ;;		_SMotor
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text77
  9299  00198A                     __ptext77:
  9300                           	callstack 0
  9301  00198A                     _TiGetTics:
  9302                           	callstack 27
  9303                           
  9304                           ;incstack = 0
  9305                           ;TiGetTics@Handle stored from wreg
  9306  00198A  6E64               	movwf	TiGetTics@Handle^0,c
  9307                           
  9308                           ;TiTTimer.c: 65:     volatile unsigned int actual;;TiTTimer.c: 66:     actual=h_Tics;
  9309  00198C  C003  F065         	movff	_h_Tics,TiGetTics@actual	;volatile
  9310  001990  C004  F066         	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
  9311                           
  9312                           ;TiTTimer.c: 67:     return (actual-(s_Timers[Handle].h_initialTics));
  9313  001994  5064               	movf	TiGetTics@Handle^0,w,c
  9314  001996  ECFF  F00C         	call	PL24	;call to abstracted procedure
  9315  00199A  CFDE F062          	movff	postinc2,??_TiGetTics
  9316  00199E  CFDD F063          	movff	postdec2,??_TiGetTics+1
  9317  0019A2  5062               	movf	??_TiGetTics^0,w,c
  9318  0019A4  5C65               	subwf	TiGetTics@actual^0,w,c	;volatile
  9319  0019A6  6E60               	movwf	?_TiGetTics^0,c
  9320  0019A8  5063               	movf	(??_TiGetTics+1)^0,w,c
  9321  0019AA  5866               	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
  9322  0019AC  6E61               	movwf	(?_TiGetTics+1)^0,c
  9323  0019AE  0012               	return		;funcret
  9324  0019B0                     __end_of_TiGetTics:
  9325                           	callstack 0
  9326                           
  9327 ;; *************** function _AlInit *****************
  9328 ;; Defined at:
  9329 ;;		line 11 in file "AlTAltaveu.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;		None
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;		None
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  1    wreg      void 
  9336 ;; Registers used:
  9337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMRAM   BANK0   BANK1
  9343 ;;      Params:         0       0       0
  9344 ;;      Locals:         0       0       0
  9345 ;;      Temps:          0       0       0
  9346 ;;      Totals:         0       0       0
  9347 ;;Total ram usage:        0 bytes
  9348 ;; Hardware stack levels used: 1
  9349 ;; Hardware stack levels required when called: 3
  9350 ;; This function calls:
  9351 ;;		_TiGetTimer
  9352 ;; This function is called by:
  9353 ;;		_main
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           	psect	text78
  9358  001A88                     __ptext78:
  9359                           	callstack 0
  9360  001A88                     _AlInit:
  9361                           	callstack 27
  9362                           
  9363                           ;AlTAltaveu.c: 12:     timer_nota = TiGetTimer();
  9364                           
  9365                           ;incstack = 0
  9366  001A88  EC60  F00C         	call	_TiGetTimer	;wreg free
  9367  001A8C  6E29               	movwf	_timer_nota^0,c
  9368                           
  9369                           ;AlTAltaveu.c: 13:     timer_durada = TiGetTimer();
  9370  001A8E  EC60  F00C         	call	_TiGetTimer	;wreg free
  9371  001A92  6E27               	movwf	_timer_durada^0,c
  9372                           
  9373                           ;AlTAltaveu.c: 14:     reproduir=0;
  9374  001A94  9E78               	bcf	(_reproduir/(0+8))^0,_reproduir& (0+7),c
  9375  001A96  0012               	return		;funcret
  9376  001A98                     __end_of_AlInit:
  9377                           	callstack 0
  9378                           
  9379 ;; *************** function _TiGetTimer *****************
  9380 ;; Defined at:
  9381 ;;		line 70 in file "TiTTimer.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;		None
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      unsigned char 
  9388 ;; Registers used:
  9389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMRAM   BANK0   BANK1
  9395 ;;      Params:         0       0       0
  9396 ;;      Locals:         0       0       0
  9397 ;;      Temps:          1       0       0
  9398 ;;      Totals:         1       0       0
  9399 ;;Total ram usage:        1 bytes
  9400 ;; Hardware stack levels used: 1
  9401 ;; Hardware stack levels required when called: 2
  9402 ;; This function calls:
  9403 ;;		Nothing
  9404 ;; This function is called by:
  9405 ;;		_LcInit
  9406 ;;		_AlInit
  9407 ;;		_Minit
  9408 ;;		_TeInit
  9409 ;;		_GLCDInit
  9410 ;;		_HInit
  9411 ;;		_Sinit
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           	psect	text79
  9416  0018C0                     __ptext79:
  9417                           	callstack 0
  9418  0018C0                     _TiGetTimer:
  9419                           	callstack 27
  9420                           
  9421                           ;TiTTimer.c: 74:     counter=0;
  9422                           
  9423                           ;incstack = 0
  9424  0018C0  6A2A               	clrf	_counter^0,c
  9425                           
  9426                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9427  0018C2  D005               	goto	l4045
  9428  0018C4                     l4037:
  9429                           
  9430                           ;TiTTimer.c: 76:         counter++;
  9431  0018C4  2A2A               	incf	_counter^0,f,c
  9432                           
  9433                           ;TiTTimer.c: 77:  if (counter == 8) return -1;
  9434  0018C6  0E08               	movlw	8
  9435  0018C8  182A               	xorwf	_counter^0,w,c
  9436  0018CA  E101               	bnz	l4045
  9437  0018CC  0CFF               	retlw	255
  9438  0018CE                     l4045:
  9439                           
  9440                           ;TiTTimer.c: 75:     while (s_Timers[counter].b_busy==1) {
  9441  0018CE  D807               	call	PL16	;call to abstracted procedure
  9442  0018D0  04DE               	decf	postinc2,w,c
  9443  0018D2  E0F8               	bz	l4037
  9444                           
  9445                           ;TiTTimer.c: 79:     s_Timers[counter].b_busy=1;
  9446  0018D4  D804               	call	PL16	;call to abstracted procedure
  9447  0018D6  0E01               	movlw	1
  9448  0018D8  6EDF               	movwf	indf2,c
  9449                           
  9450                           ;TiTTimer.c: 80:     return (counter);
  9451  0018DA  502A               	movf	_counter^0,w,c
  9452  0018DC  0012               	return		;funcret
  9453  0018DE                     __end_of_TiGetTimer:
  9454                           	callstack 0
  9455  0018DE                     PL16:
  9456                           	callstack 28
  9457  0018DE  502A               	movf	_counter^0,w,c
  9458  0018E0  0D03               	mullw	3
  9459  0018E2  50F3               	movf	243,w,c
  9460  0018E4  0FB9               	addlw	low (_s_Timers+2)
  9461  0018E6  6ED9               	movwf	fsr2l,c
  9462  0018E8  6ADA               	clrf	fsr2h,c
  9463  0018EA  0012               	return	
  9464  0018EC                     __end_ofPL16:
  9465                           	callstack 0
  9466                           
  9467 ;; *************** function _AdMotor *****************
  9468 ;; Defined at:
  9469 ;;		line 12 in file "AdAdcon.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;		None
  9472 ;; Auto vars:     Size  Location     Type
  9473 ;;		None
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  1    wreg      void 
  9476 ;; Registers used:
  9477 ;;		wreg, status,2, status,0, cstack
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMRAM   BANK0   BANK1
  9483 ;;      Params:         0       0       0
  9484 ;;      Locals:         0       0       0
  9485 ;;      Temps:          2       0       0
  9486 ;;      Totals:         2       0       0
  9487 ;;Total ram usage:        2 bytes
  9488 ;; Hardware stack levels used: 1
  9489 ;; Hardware stack levels required when called: 3
  9490 ;; This function calls:
  9491 ;;		_JnovaTecla
  9492 ;; This function is called by:
  9493 ;;		_main
  9494 ;; This function uses a non-reentrant model
  9495 ;;
  9496                           
  9497                           	psect	text80
  9498  0011C2                     __ptext80:
  9499                           	callstack 0
  9500  0011C2                     _AdMotor:
  9501                           	callstack 27
  9502                           
  9503                           ;AdAdcon.c: 13:  static char state = 0;;AdAdcon.c: 14:     switch(state) {
  9504                           
  9505                           ;incstack = 0
  9506  0011C2  D04E               	goto	l5495
  9507  0011C4                     l922:
  9508                           
  9509                           ;AdAdcon.c: 16:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9510  0011C4  B2C2               	btfsc	194,1,c	;volatile
  9511  0011C6  D00A               	goto	l923
  9512  0011C8  0EC8               	movlw	200
  9513  0011CA  60C4               	cpfslt	196,c	;volatile
  9514  0011CC  D007               	goto	l923
  9515  0011CE  0E32               	movlw	50
  9516  0011D0  64C4               	cpfsgt	196,c	;volatile
  9517  0011D2  D004               	goto	l923
  9518  0011D4                     u5450:
  9519                           
  9520                           ;AdAdcon.c: 17:     ADCON0 = 0x07;
  9521  0011D4  0E07               	movlw	7
  9522  0011D6  6EC2               	movwf	194,c	;volatile
  9523                           
  9524                           ;AdAdcon.c: 18:     state++;
  9525  0011D8  2A0E               	incf	AdMotor@state^0,f,c
  9526                           
  9527                           ;AdAdcon.c: 19:    }
  9528  0011DA  0C07               	retlw	7
  9529  0011DC                     l923:
  9530  0011DC  B2C2               	btfsc	194,1,c	;volatile
  9531  0011DE  D00B               	goto	l925
  9532  0011E0  0EC7               	movlw	199
  9533  0011E2  64C4               	cpfsgt	196,c	;volatile
  9534  0011E4  D008               	goto	l925
  9535                           
  9536                           ;AdAdcon.c: 21:     if(ultimaTeclaAD != 2)JnovaTecla(2);
  9537  0011E6  0E02               	movlw	2
  9538  0011E8  180F               	xorwf	_ultimaTeclaAD^0,w,c
  9539  0011EA  E003               	bz	l5443
  9540  0011EC  0E02               	movlw	2
  9541  0011EE  ECC6  F00D         	call	_JnovaTecla
  9542  0011F2                     l5443:
  9543                           
  9544                           ;AdAdcon.c: 22:     ultimaTeclaAD = 2;
  9545  0011F2  0E02               	movlw	2
  9546  0011F4  D00C               	goto	L6
  9547  0011F6                     l925:
  9548  0011F6  B2C2               	btfsc	194,1,c	;volatile
  9549  0011F8  0012               	return	
  9550  0011FA  0E33               	movlw	51
  9551  0011FC  60C4               	cpfslt	196,c	;volatile
  9552  0011FE  0C33               	retlw	51
  9553                           
  9554                           ;AdAdcon.c: 27:     if(ultimaTeclaAD != 8)JnovaTecla(8);
  9555  001200  0E08               	movlw	8
  9556  001202  180F               	xorwf	_ultimaTeclaAD^0,w,c
  9557  001204  E003               	bz	l5455
  9558  001206  0E08               	movlw	8
  9559  001208  ECC6  F00D         	call	_JnovaTecla
  9560  00120C                     l5455:
  9561                           
  9562                           ;AdAdcon.c: 28:     ultimaTeclaAD = 8;
  9563  00120C  0E08               	movlw	8
  9564  00120E                     L6:
  9565  00120E  6E0F               	movwf	_ultimaTeclaAD^0,c
  9566  001210  D7E1               	goto	u5450
  9567  001212                     l931:
  9568                           
  9569                           ;AdAdcon.c: 34:    if (ADCON0bits.GODONE == 0 && ADRESH < 200 && ADRESH > 50) {
  9570  001212  B2C2               	btfsc	194,1,c	;volatile
  9571  001214  D00A               	goto	l932
  9572  001216  0EC8               	movlw	200
  9573  001218  60C4               	cpfslt	196,c	;volatile
  9574  00121A  D007               	goto	l932
  9575  00121C  0E32               	movlw	50
  9576  00121E  64C4               	cpfsgt	196,c	;volatile
  9577  001220  D004               	goto	l932
  9578  001222                     u5540:
  9579                           
  9580                           ;AdAdcon.c: 35:     ADCON0 = 0x03;
  9581  001222  0E03               	movlw	3
  9582  001224  6EC2               	movwf	194,c	;volatile
  9583                           
  9584                           ;AdAdcon.c: 36:     state--;
  9585  001226  060E               	decf	AdMotor@state^0,f,c
  9586                           
  9587                           ;AdAdcon.c: 37:    }
  9588  001228  0C03               	retlw	3
  9589  00122A                     l932:
  9590  00122A  B2C2               	btfsc	194,1,c	;volatile
  9591  00122C  D00B               	goto	l934
  9592  00122E  0EC7               	movlw	199
  9593  001230  64C4               	cpfsgt	196,c	;volatile
  9594  001232  D008               	goto	l934
  9595                           
  9596                           ;AdAdcon.c: 39:     if(ultimaTeclaAD != 6)JnovaTecla(6);
  9597  001234  0E06               	movlw	6
  9598  001236  180F               	xorwf	_ultimaTeclaAD^0,w,c
  9599  001238  E003               	bz	l5475
  9600  00123A  0E06               	movlw	6
  9601  00123C  ECC6  F00D         	call	_JnovaTecla
  9602  001240                     l5475:
  9603                           
  9604                           ;AdAdcon.c: 40:     ultimaTeclaAD = 6;
  9605  001240  0E06               	movlw	6
  9606  001242  D00C               	goto	L7
  9607  001244                     l934:
  9608  001244  B2C2               	btfsc	194,1,c	;volatile
  9609  001246  0012               	return	
  9610  001248  0E33               	movlw	51
  9611  00124A  60C4               	cpfslt	196,c	;volatile
  9612  00124C  0C33               	retlw	51
  9613                           
  9614                           ;AdAdcon.c: 45:     if(ultimaTeclaAD != 4)JnovaTecla(4);
  9615  00124E  0E04               	movlw	4
  9616  001250  180F               	xorwf	_ultimaTeclaAD^0,w,c
  9617  001252  E003               	bz	l5487
  9618  001254  0E04               	movlw	4
  9619  001256  ECC6  F00D         	call	_JnovaTecla
  9620  00125A                     l5487:
  9621                           
  9622                           ;AdAdcon.c: 46:     ultimaTeclaAD = 4;
  9623  00125A  0E04               	movlw	4
  9624  00125C                     L7:
  9625  00125C  6E0F               	movwf	_ultimaTeclaAD^0,c
  9626  00125E  D7E1               	goto	u5540
  9627  001260                     l5495:
  9628  001260  500E               	movf	AdMotor@state^0,w,c
  9629  001262  6E61               	movwf	??_AdMotor^0,c
  9630  001264  6A62               	clrf	(??_AdMotor+1)^0,c
  9631                           
  9632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9633                           ; Switch size 1, requested type "space"
  9634                           ; Number of cases is 1, Range of values is 0 to 0
  9635                           ; switch strategies available:
  9636                           ; Name         Instructions Cycles
  9637                           ; simple_byte            4     3 (average)
  9638                           ;	Chosen strategy is simple_byte
  9639  001266  5062               	movf	(??_AdMotor+1)^0,w,c
  9640  001268  A4D8               	btfss	status,2,c
  9641  00126A  0012               	return	
  9642                           
  9643                           ; Switch size 1, requested type "space"
  9644                           ; Number of cases is 2, Range of values is 0 to 1
  9645                           ; switch strategies available:
  9646                           ; Name         Instructions Cycles
  9647                           ; simple_byte            7     4 (average)
  9648                           ;	Chosen strategy is simple_byte
  9649  00126C  5061               	movf	??_AdMotor^0,w,c
  9650  00126E  E0AA               	bz	l922
  9651  001270  0A01               	xorlw	1	; case 1
  9652  001272  E0CF               	bz	l931
  9653  001274  0012               	return		;funcret
  9654  001276                     __end_of_AdMotor:
  9655                           	callstack 0
  9656                           
  9657 ;; *************** function _JnovaTecla *****************
  9658 ;; Defined at:
  9659 ;;		line 54 in file "JJoc.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;  direccio        1    wreg     unsigned char 
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;  direccio        1    5[COMRAM] unsigned char 
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  1    wreg      void 
  9666 ;; Registers used:
  9667 ;;		wreg
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMRAM   BANK0   BANK1
  9673 ;;      Params:         0       0       0
  9674 ;;      Locals:         1       0       0
  9675 ;;      Temps:          0       0       0
  9676 ;;      Totals:         1       0       0
  9677 ;;Total ram usage:        1 bytes
  9678 ;; Hardware stack levels used: 1
  9679 ;; Hardware stack levels required when called: 2
  9680 ;; This function calls:
  9681 ;;		Nothing
  9682 ;; This function is called by:
  9683 ;;		_TeTeclat
  9684 ;;		_AdMotor
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           	psect	text81
  9689  001B8C                     __ptext81:
  9690                           	callstack 0
  9691  001B8C                     _JnovaTecla:
  9692                           	callstack 27
  9693                           
  9694                           ;incstack = 0
  9695                           ;JnovaTecla@direccio stored from wreg
  9696  001B8C  6E60               	movwf	JnovaTecla@direccio^0,c
  9697                           
  9698                           ;JJoc.c: 55:     novaDireccio = direccio;
  9699  001B8E  C060  F00B         	movff	JnovaTecla@direccio,_novaDireccio
  9700  001B92  0012               	return		;funcret
  9701  001B94                     __end_of_JnovaTecla:
  9702                           	callstack 0
  9703                           
  9704 ;; *************** function _AdInit *****************
  9705 ;; Defined at:
  9706 ;;		line 6 in file "AdAdcon.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;		None
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;		None
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg, status,2
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1
  9720 ;;      Params:         0       0       0
  9721 ;;      Locals:         0       0       0
  9722 ;;      Temps:          0       0       0
  9723 ;;      Totals:         0       0       0
  9724 ;;Total ram usage:        0 bytes
  9725 ;; Hardware stack levels used: 1
  9726 ;; Hardware stack levels required when called: 2
  9727 ;; This function calls:
  9728 ;;		Nothing
  9729 ;; This function is called by:
  9730 ;;		_main
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           	psect	text82
  9735  001A66                     __ptext82:
  9736                           	callstack 0
  9737  001A66                     _AdInit:
  9738                           	callstack 28
  9739                           
  9740                           ;AdAdcon.c: 7:     ADCON0 = 0x01;
  9741                           
  9742                           ;incstack = 0
  9743  001A66  0E01               	movlw	1
  9744  001A68  6EC2               	movwf	194,c	;volatile
  9745                           
  9746                           ;AdAdcon.c: 8:     ADCON1 = 0x0D;
  9747  001A6A  0E0D               	movlw	13
  9748  001A6C  6EC1               	movwf	193,c	;volatile
  9749                           
  9750                           ;AdAdcon.c: 9:     ADCON2 = 0x09;
  9751  001A6E  0E09               	movlw	9
  9752  001A70  6EC0               	movwf	192,c	;volatile
  9753                           
  9754                           ;AdAdcon.c: 10:     ADRESH = 127;
  9755  001A72  0E7F               	movlw	127
  9756  001A74  6EC4               	movwf	196,c	;volatile
  9757  001A76  0C7F               	retlw	127	;funcret
  9758  001A78                     __end_of_AdInit:
  9759                           	callstack 0
  9760                           
  9761 ;; *************** function _high_rsi *****************
  9762 ;; Defined at:
  9763 ;;		line 22 in file "main.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;		None
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1
  9777 ;;      Params:         0       0       0
  9778 ;;      Locals:         0       0       0
  9779 ;;      Temps:          4       0       0
  9780 ;;      Totals:         4       0       0
  9781 ;;Total ram usage:        4 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; Hardware stack levels required when called: 1
  9784 ;; This function calls:
  9785 ;;		__TiRSITimer
  9786 ;; This function is called by:
  9787 ;;		Interrupt level 2
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	intcode
  9792  000008                     __pintcode:
  9793                           	callstack 0
  9794  000008                     _high_rsi:
  9795                           	callstack 22
  9796                           
  9797                           ;incstack = 0
  9798  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9799  00000A  CFD9 F05C          	movff	fsr2l,??_high_rsi
  9800  00000E  CFDA F05D          	movff	fsr2h,??_high_rsi+1
  9801  000012  CFF3 F05E          	movff	prodl,??_high_rsi+2
  9802  000016  CFF4 F05F          	movff	prodh,??_high_rsi+3
  9803  00001A  ECCE  F00B         	call	__TiRSITimer	;wreg free
  9804  00001E  C05F  FFF4         	movff	??_high_rsi+3,prodh
  9805  000022  C05E  FFF3         	movff	??_high_rsi+2,prodl
  9806  000026  C05D  FFDA         	movff	??_high_rsi+1,fsr2h
  9807  00002A  C05C  FFD9         	movff	??_high_rsi,fsr2l
  9808  00002E  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9809  000030  0011               	retfie		f
  9810  000032                     __end_of_high_rsi:
  9811                           	callstack 0
  9812                           
  9813 ;; *************** function __TiRSITimer *****************
  9814 ;; Defined at:
  9815 ;;		line 37 in file "TiTTimer.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;		None
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;		None
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      void 
  9822 ;; Registers used:
  9823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1
  9829 ;;      Params:         0       0       0
  9830 ;;      Locals:         0       0       0
  9831 ;;      Temps:          1       0       0
  9832 ;;      Totals:         1       0       0
  9833 ;;Total ram usage:        1 bytes
  9834 ;; Hardware stack levels used: 1
  9835 ;; This function calls:
  9836 ;;		Nothing
  9837 ;; This function is called by:
  9838 ;;		_high_rsi
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           	psect	text84
  9843  00179C                     __ptext84:
  9844                           	callstack 0
  9845  00179C                     __TiRSITimer:
  9846                           	callstack 22
  9847                           
  9848                           ;TiTTimer.c: 39:     TMR0H = 0;
  9849                           
  9850                           ;incstack = 0
  9851  00179C  6AD7               	clrf	215,c	;volatile
  9852                           
  9853                           ;TiTTimer.c: 40:     TMR0L = 236;
  9854  00179E  0EEC               	movlw	236
  9855  0017A0  6ED6               	movwf	214,c	;volatile
  9856                           
  9857                           ;TiTTimer.c: 41:     INTCONbits.TMR0IF = 0;
  9858  0017A2  94F2               	bcf	242,2,c	;volatile
  9859                           
  9860                           ;TiTTimer.c: 42:     h_Tics++;
  9861  0017A4  4A03               	infsnz	_h_Tics^0,f,c
  9862  0017A6  2A04               	incf	(_h_Tics+1)^0,f,c
  9863                           
  9864                           ;TiTTimer.c: 44:     if (h_Tics>=61000) {
  9865  0017A8  0E48               	movlw	72
  9866  0017AA  5C03               	subwf	_h_Tics^0,w,c
  9867  0017AC  0EEE               	movlw	238
  9868  0017AE  5804               	subwfb	(_h_Tics+1)^0,w,c
  9869  0017B0  A0D8               	btfss	status,0,c
  9870  0017B2  0012               	return	
  9871                           
  9872                           ;TiTTimer.c: 46:         for (counter=0;counter<8;counter++){
  9873  0017B4  6A2A               	clrf	_counter^0,c
  9874  0017B6                     i2l4217:
  9875  0017B6  0E07               	movlw	7
  9876  0017B8  642A               	cpfsgt	_counter^0,c
  9877  0017BA  D001               	goto	i2l4221
  9878  0017BC  D00D               	goto	i2l253
  9879  0017BE                     i2l4221:
  9880                           
  9881                           ;TiTTimer.c: 47:             if (s_Timers[counter].b_busy==1){
  9882  0017BE  EC6F  F00C         	call	PL16	;call to abstracted procedure
  9883  0017C2  04DE               	decf	postinc2,w,c
  9884  0017C4  E107               	bnz	i2l4225
  9885                           
  9886                           ;TiTTimer.c: 48:                 s_Timers[counter].h_initialTics -= h_Tics;
  9887  0017C6  502A               	movf	_counter^0,w,c
  9888  0017C8  ECFF  F00C         	call	PL24	;call to abstracted procedure
  9889  0017CC  5003               	movf	_h_Tics^0,w,c
  9890  0017CE  5EDE               	subwf	postinc2,f,c
  9891  0017D0  5004               	movf	(_h_Tics+1)^0,w,c
  9892  0017D2  5ADD               	subwfb	postdec2,f,c
  9893  0017D4                     i2l4225:
  9894                           
  9895                           ;TiTTimer.c: 50:         }
  9896  0017D4  2A2A               	incf	_counter^0,f,c
  9897  0017D6  D7EF               	goto	i2l4217
  9898  0017D8                     i2l253:
  9899                           
  9900                           ;TiTTimer.c: 51:         h_Tics=0;
  9901  0017D8  6A03               	clrf	_h_Tics^0,c
  9902  0017DA  6A04               	clrf	(_h_Tics+1)^0,c
  9903  0017DC  0012               	return		;funcret
  9904  0017DE                     __end_of__TiRSITimer:
  9905                           	callstack 0
  9906                           
  9907                           	psect	rparam
  9908  0000                     
  9909                           	psect	temp
  9910  00007A                     btemp:
  9911                           	callstack 0
  9912  00007A                     	ds	1
  9913  0000                     int$flags	set	btemp
  9914  0000                     wtemp8	set	btemp+1
  9915  0000                     ttemp5	set	btemp+1
  9916  0000                     ttemp6	set	btemp+4
  9917  0000                     ttemp7	set	btemp+8
  9918                           
  9919                           	psect	idloc
  9920                           
  9921                           ;Config register IDLOC0 @ 0x200000
  9922                           ;	unspecified, using default values
  9923  200000                     	org	2097152
  9924  200000  FF                 	db	255
  9925                           
  9926                           ;Config register IDLOC1 @ 0x200001
  9927                           ;	unspecified, using default values
  9928  200001                     	org	2097153
  9929  200001  FF                 	db	255
  9930                           
  9931                           ;Config register IDLOC2 @ 0x200002
  9932                           ;	unspecified, using default values
  9933  200002                     	org	2097154
  9934  200002  FF                 	db	255
  9935                           
  9936                           ;Config register IDLOC3 @ 0x200003
  9937                           ;	unspecified, using default values
  9938  200003                     	org	2097155
  9939  200003  FF                 	db	255
  9940                           
  9941                           ;Config register IDLOC4 @ 0x200004
  9942                           ;	unspecified, using default values
  9943  200004                     	org	2097156
  9944  200004  FF                 	db	255
  9945                           
  9946                           ;Config register IDLOC5 @ 0x200005
  9947                           ;	unspecified, using default values
  9948  200005                     	org	2097157
  9949  200005  FF                 	db	255
  9950                           
  9951                           ;Config register IDLOC6 @ 0x200006
  9952                           ;	unspecified, using default values
  9953  200006                     	org	2097158
  9954  200006  FF                 	db	255
  9955                           
  9956                           ;Config register IDLOC7 @ 0x200007
  9957                           ;	unspecified, using default values
  9958  200007                     	org	2097159
  9959  200007  FF                 	db	255
  9960                           
  9961                           	psect	config
  9962                           
  9963                           ; Padding undefined space
  9964  300000                     	org	3145728
  9965  300000  FF                 	db	255
  9966                           
  9967                           ;Config register CONFIG1H @ 0x300001
  9968                           ;	Oscillator
  9969                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  9970                           ;	Fail-Safe Clock Monitor Enable bit
  9971                           ;	FCMEN = 0x0, unprogrammed default
  9972                           ;	Internal/External Oscillator Switchover bit
  9973                           ;	IESO = 0x0, unprogrammed default
  9974  300001                     	org	3145729
  9975  300001  06                 	db	6
  9976                           
  9977                           ;Config register CONFIG2L @ 0x300002
  9978                           ;	unspecified, using default values
  9979                           ;	Power-up Timer Enable bit
  9980                           ;	PWRT = 0x1, unprogrammed default
  9981                           ;	Brown-out Reset Enable bits
  9982                           ;	BOR = 0x3, unprogrammed default
  9983                           ;	Brown-out Reset Voltage bits
  9984                           ;	BORV = 0x3, unprogrammed default
  9985  300002                     	org	3145730
  9986  300002  1F                 	db	31
  9987                           
  9988                           ;Config register CONFIG2H @ 0x300003
  9989                           ;	Watchdog Timer Enable bit
  9990                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9991                           ;	Watchdog Timer Postscale Select bits
  9992                           ;	WDTPS = 0xF, unprogrammed default
  9993  300003                     	org	3145731
  9994  300003  1E                 	db	30
  9995                           
  9996                           ; Padding undefined space
  9997  300004                     	org	3145732
  9998  300004  FF                 	db	255
  9999                           
 10000                           ;Config register CONFIG3H @ 0x300005
 10001                           ;	CCP2 MUX bit
 10002                           ;	CCP2MX = 0x1, unprogrammed default
 10003                           ;	PORTB A/D Enable bit
 10004                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10005                           ;	Low-Power Timer1 Oscillator Enable bit
 10006                           ;	LPT1OSC = 0x0, unprogrammed default
 10007                           ;	MCLR Pin Enable bit
 10008                           ;	MCLRE = 0x1, unprogrammed default
 10009  300005                     	org	3145733
 10010  300005  81                 	db	129
 10011                           
 10012                           ;Config register CONFIG4L @ 0x300006
 10013                           ;	Stack Full/Underflow Reset Enable bit
 10014                           ;	STVREN = 0x1, unprogrammed default
 10015                           ;	Single-Supply ICSP Enable bit
 10016                           ;	LVP = OFF, Single-Supply ICSP disabled
 10017                           ;	Boot Block Size Select bits
 10018                           ;	BBSIZ = 0x0, unprogrammed default
 10019                           ;	Extended Instruction Set Enable bit
 10020                           ;	XINST = 0x0, unprogrammed default
 10021                           ;	Background Debugger Enable bit
 10022                           ;	DEBUG = 0x1, unprogrammed default
 10023  300006                     	org	3145734
 10024  300006  81                 	db	129
 10025                           
 10026                           ; Padding undefined space
 10027  300007                     	org	3145735
 10028  300007  FF                 	db	255
 10029                           
 10030                           ;Config register CONFIG5L @ 0x300008
 10031                           ;	unspecified, using default values
 10032                           ;	Code Protection bit
 10033                           ;	CP0 = 0x1, unprogrammed default
 10034                           ;	Code Protection bit
 10035                           ;	CP1 = 0x1, unprogrammed default
 10036  300008                     	org	3145736
 10037  300008  03                 	db	3
 10038                           
 10039                           ;Config register CONFIG5H @ 0x300009
 10040                           ;	unspecified, using default values
 10041                           ;	Boot Block Code Protection bitProtect Boot
 10042                           ;	CPB = 0x1, unprogrammed default
 10043                           ;	Data EEPROM Code Protection bit
 10044                           ;	CPD = 0x1, unprogrammed default
 10045  300009                     	org	3145737
 10046  300009  C0                 	db	192
 10047                           
 10048                           ;Config register CONFIG6L @ 0x30000A
 10049                           ;	unspecified, using default values
 10050                           ;	Write Protection bit
 10051                           ;	WRT0 = 0x1, unprogrammed default
 10052                           ;	Write Protection bit
 10053                           ;	WRT1 = 0x1, unprogrammed default
 10054  30000A                     	org	3145738
 10055  30000A  03                 	db	3
 10056                           
 10057                           ;Config register CONFIG6H @ 0x30000B
 10058                           ;	unspecified, using default values
 10059                           ;	Configuration Register Write Protection bit
 10060                           ;	WRTC = 0x1, unprogrammed default
 10061                           ;	Boot Block Write Protection bit
 10062                           ;	WRTB = 0x1, unprogrammed default
 10063                           ;	Data EEPROM Write Protection bit
 10064                           ;	WRTD = 0x1, unprogrammed default
 10065  30000B                     	org	3145739
 10066  30000B  E0                 	db	224
 10067                           
 10068                           ;Config register CONFIG7L @ 0x30000C
 10069                           ;	unspecified, using default values
 10070                           ;	Table Read Protection bit
 10071                           ;	EBTR0 = 0x1, unprogrammed default
 10072                           ;	Table Read Protection bit
 10073                           ;	EBTR1 = 0x1, unprogrammed default
 10074  30000C                     	org	3145740
 10075  30000C  03                 	db	3
 10076                           
 10077                           ;Config register CONFIG7H @ 0x30000D
 10078                           ;	unspecified, using default values
 10079                           ;	Boot Block Table Read Protection bit
 10080                           ;	EBTRB = 0x1, unprogrammed default
 10081  30000D                     	org	3145741
 10082  30000D  40                 	db	64
 10083                           tosu	equ	0xFFF
 10084                           tosh	equ	0xFFE
 10085                           tosl	equ	0xFFD
 10086                           stkptr	equ	0xFFC
 10087                           pclatu	equ	0xFFB
 10088                           pclath	equ	0xFFA
 10089                           pcl	equ	0xFF9
 10090                           tblptru	equ	0xFF8
 10091                           tblptrh	equ	0xFF7
 10092                           tblptrl	equ	0xFF6
 10093                           tablat	equ	0xFF5
 10094                           prodh	equ	0xFF4
 10095                           prodl	equ	0xFF3
 10096                           indf0	equ	0xFEF
 10097                           postinc0	equ	0xFEE
 10098                           postdec0	equ	0xFED
 10099                           preinc0	equ	0xFEC
 10100                           plusw0	equ	0xFEB
 10101                           fsr0h	equ	0xFEA
 10102                           fsr0l	equ	0xFE9
 10103                           wreg	equ	0xFE8
 10104                           indf1	equ	0xFE7
 10105                           postinc1	equ	0xFE6
 10106                           postdec1	equ	0xFE5
 10107                           preinc1	equ	0xFE4
 10108                           plusw1	equ	0xFE3
 10109                           fsr1h	equ	0xFE2
 10110                           fsr1l	equ	0xFE1
 10111                           bsr	equ	0xFE0
 10112                           indf2	equ	0xFDF
 10113                           postinc2	equ	0xFDE
 10114                           postdec2	equ	0xFDD
 10115                           preinc2	equ	0xFDC
 10116                           plusw2	equ	0xFDB
 10117                           fsr2h	equ	0xFDA
 10118                           fsr2l	equ	0xFD9
 10119                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    151
    Data        93
    BSS         316
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     29     121
    BANK0           128      0      79
    BANK1           256      0     240

Pointer List with Targets:

    score_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__CToAobtenir	PTR unsigned char  size(1) Largest target is 4
		 -> stringScore(COMRAM[4]), 

    userPtr	PTR unsigned char  size(2) Largest target is 240
		 -> usuaris.username(BANK1[11]), usuaris(BANK1[240]), NULL(NULL[0]), 

    HActualitzarHora@nova	PTR unsigned char  size(1) Largest target is 5
		 -> horaTmp(COMRAM[5]), 

    sp__HTempsJocs	PTR unsigned char  size(1) Largest target is 6
		 -> tempsJugant(COMRAM[6]), 

    sp__UgetUserName	PTR unsigned char  size(2) Largest target is 240
		 -> usuaris.username(BANK1[11]), usuaris(BANK1[240]), 

    sp__HGetTime	PTR unsigned char  size(1) Largest target is 6
		 -> string(COMRAM[6]), 

    LcNewString@new_s	PTR unsigned char  size(2) Largest target is 240
		 -> stringScore(COMRAM[4]), stringText(BANK0[16]), usuaris.username(BANK1[11]), usuaris(BANK1[240]), 
		 -> string(COMRAM[6]), tempsJugant(COMRAM[6]), menu(CODE[132]), enterNewName(BANK0[15]), 
		 -> deleteUser(CODE[12]), highScore(BANK0[12]), Score(CODE[7]), STR_6(CODE[12]), 
		 -> STR_5(CODE[12]), STR_4(CODE[15]), STR_3(CODE[10]), STR_2(CODE[13]), 
		 -> STR_1(CODE[15]), 

    s_ptr	PTR unsigned char  size(2) Largest target is 240
		 -> stringScore(COMRAM[4]), stringText(BANK0[16]), usuaris.username(BANK1[11]), usuaris(BANK1[240]), 
		 -> string(COMRAM[6]), tempsJugant(COMRAM[6]), menu(CODE[132]), enterNewName(BANK0[15]), 
		 -> deleteUser(CODE[12]), highScore(BANK0[12]), Score(CODE[7]), STR_6(CODE[12]), 
		 -> STR_5(CODE[12]), STR_4(CODE[15]), STR_3(CODE[10]), STR_2(CODE[13]), 
		 -> STR_1(CODE[15]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_MTMenu
    _UMotorUsuaris->___wmul
    _TeTeclat->_TiGetTics
    _TeInit->_TiGetTimer
    _Sinit->_TiGetTimer
    _SMotor->_TiGetTics
    _SIOMotor->_LcPutChar
    _Minit->_TiGetTimer
    _MTMenu->_LcPutChar
    _LcScroll->_CantaIR
    _LcCursorOn->_WaitForBusy
    _LcLCD->_LcPutChar
    _LcInit->_Espera
    _LcCursorOff->_WaitForBusy
    _JMotor->_LcGotoXY
    _HInit->_TiGetTimer
    _HInit->_TiResetTics
    _HHoraMotor->_TiGetTics
    _GLCDMotor->_LcPutChar
    _LcInsertFletxa->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcNewString->_UgetUserName
    _LcClear->_Espera
    _WaitForBusy->_TiGetTics
    _Espera->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _GLCDInit->_TiGetTimer
    _AlTAltaveu->_TiGetTics
    _AlInit->_TiGetTimer
    _AdMotor->_JnovaTecla

Critical Paths under _high_rsi in COMRAM

    _high_rsi->__TiRSITimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_rsi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_rsi in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   57429
                             _AdInit
                            _AdMotor
                             _AlInit
                         _AlTAltaveu
                               _CtoA
                           _GLCDInit
                          _GLCDMotor
                         _HHoraMotor
                              _HInit
                             _JMotor
                             _LcInit
                              _LcLCD
                             _MTMenu
                              _Minit
                           _SIOMotor
                             _SMotor
                              _Sinit
                             _TeInit
                           _TeTeclat
                        _TiInitTimer
                      _UMotorUsuaris
                        _init_eusart
                         _init_ports
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UMotorUsuaris                                        2     2      0    1463
                                             11 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TiInitTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TeTeclat                                             3     3      0     133
                                             12 COMRAM     3     3      0
                         _JnovaTecla
                      _MsetNovaTecla
                      _SsetNovaTecla
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _SsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MsetNovaTecla                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TeInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _Sinit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _SMotor                                               2     2      0      82
                                             12 COMRAM     2     2      0
                        _MNovaLletra
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _MNovaLletra                                          1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SIOMotor                                             2     2      0   10040
                                             22 COMRAM     2     2      0
                     _CToAConverteix
                       _CToAHaAcabat
                          _CToAReset
                        _CToAobtenir
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                       _UchangeScore
                          _UgetScore
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _UgetScore                                            1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UchangeScore                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CToAobtenir                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CToAReset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAHaAcabat                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CToAConverteix                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Minit                                                0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _MTMenu                                               7     7      0   18168
                                             22 COMRAM     7     7      0
                     _GLCDMostraMenu
                   _HActualitzarHora
                     _HClearNouMinut
                           _HGetTime
                            _HJuguem
                          _HNoJuguem
                          _HNouMinut
                            _JJuguem
                            _JUsuari
                            _LcClear
                        _LcCursorOff
                         _LcCursorOn
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                        _LcPutFletxa
                           _LcScroll
                          _NoFerMenu
                             _SMSoff
                              _SMSon
                          _SiFerMenu
                          _TiGetTics
                        _TiResetTics
              _UAfegirLletraUsername
                    _UCancelaNouUser
                        _UcreateUser
                           _UdelUser
                      _UeditUsername
                     _UgetNumUsuaris
                       _UgetUserName
 ---------------------------------------------------------------------------------
 (2) _UgetUserName                                         3     1      2      22
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UgetNumUsuaris                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UeditUsername                                        5     3      2     220
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _UdelUser                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UcreateUser                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UCancelaNouUser                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UAfegirLletraUsername                                3     3      0      44
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SiFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSon                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMSoff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NoFerMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcScroll                                             0     0      0     220
                            _CantaIR
 ---------------------------------------------------------------------------------
 (2) _LcCursorOn                                           0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _JUsuari                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _JJuguem                                              1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HNouMinut                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HNoJuguem                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HJuguem                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HGetTime                                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HClearNouMinut                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HActualitzarHora                                     1     0      1     164
                                              5 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _GLCDMostraMenu                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LcLCD                                                0     0      0    3552
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    1511
                                             16 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _LcCursorOff
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _JMotor                                               2     2      0    5490
                                             21 COMRAM     2     2      0
                             _AlPlay
                             _AlStop
                     _HClearNouSegon
                          _HNouSegon
                         _HTempsJocs
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                    _SIONovaDireccio
                       _SIOStartGame
                    _SIOUsuariActual
 ---------------------------------------------------------------------------------
 (2) _SIOUsuariActual                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SIOStartGame                                         1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SIONovaDireccio                                      1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HTempsJocs                                           2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _HNouSegon                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HClearNouSegon                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AlStop                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AlPlay                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HInit                                                0     0      0      22
                         _TiGetTimer
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _HHoraMotor                                           2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _GLCDMotor                                            2     2      0   16812
                                             22 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                           _LcLliure
                        _LcNewString
                          _LcPutChar
                        _LcPutFletxa
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _LcPutFletxa                                          0     0      0    6772
                           _LcGotoXY
                     _LcInsertFletxa
 ---------------------------------------------------------------------------------
 (3) _LcInsertFletxa                                       0     0      0    3552
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _LcPutChar                                            1     1      0    3552
                                             21 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _LcGotoXY                                             8     7      1    3220
                                             13 COMRAM     8     7      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcNewString                                          2     0      2    2226
                                              8 COMRAM     2     0      2
                        _CToAobtenir (ARG)
                           _HGetTime (ARG)
                         _HTempsJocs (ARG)
                       _UgetUserName (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcLliure                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0     975
                            _CantaIR
                             _Espera
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (3) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (3) _Espera                                               4     2      2     665
                                             12 COMRAM     4     2      2
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (5) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GLCDInit                                             0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _CtoA                                                 2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _AlTAltaveu                                           3     3      0      67
                                             12 COMRAM     3     3      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _AlInit                                               0     0      0       0
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AdMotor                                              2     2      0      22
                                              6 COMRAM     2     2      0
                         _JnovaTecla
 ---------------------------------------------------------------------------------
 (2) _JnovaTecla                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AdInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_rsi                                             4     4      0       0
                                              1 COMRAM     4     4      0
                        __TiRSITimer
 ---------------------------------------------------------------------------------
 (9) __TiRSITimer                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AdInit
   _AdMotor
     _JnovaTecla
   _AlInit
     _TiGetTimer
   _AlTAltaveu
     _TiGetTics
     _TiResetTics
   _CtoA
   _GLCDInit
     _TiGetTimer
   _GLCDMotor
     _LcClear
       _CantaIR
         _CantaPartAlta
         _CantaPartBaixa
       _Espera
         _TiGetTics
         _TiResetTics
       _WaitForBusy
         _TiGetTics
         _TiResetTics
     _LcGotoXY
       _CantaIR
       _WaitForBusy
     _LcLliure
     _LcNewString
       _CToAobtenir (ARG)
       _HGetTime (ARG)
       _HTempsJocs (ARG)
       _UgetUserName (ARG)
     _LcPutChar
       _CantaData
         _CantaPartAlta
         _CantaPartBaixa
       _LcGotoXY
       _WaitForBusy
     _LcPutFletxa
       _LcGotoXY
       _LcInsertFletxa
         _LcPutChar
     _TiGetTics
     _TiResetTics
   _HHoraMotor
     _TiGetTics
     _TiResetTics
   _HInit
     _TiGetTimer
     _TiResetTics
   _JMotor
     _AlPlay
     _AlStop
     _HClearNouSegon
     _HNouSegon
     _HTempsJocs
     _LcGotoXY
     _LcLliure
     _LcNewString
     _SIONovaDireccio
     _SIOStartGame
     _SIOUsuariActual
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
     _LcCursorOff
       _CantaIR
       _WaitForBusy
     _TiGetTimer
     _WaitForBusy
   _LcLCD
     _LcPutChar
   _MTMenu
     _GLCDMostraMenu
     _HActualitzarHora
     _HClearNouMinut
     _HGetTime
     _HJuguem
     _HNoJuguem
     _HNouMinut
     _JJuguem
     _JUsuari
     _LcClear
     _LcCursorOff
     _LcCursorOn
       _CantaIR
       _WaitForBusy
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _LcPutFletxa
     _LcScroll
       _CantaIR
     _NoFerMenu
     _SMSoff
     _SMSon
     _SiFerMenu
     _TiGetTics
     _TiResetTics
     _UAfegirLletraUsername
     _UCancelaNouUser
     _UcreateUser
     _UdelUser
     _UeditUsername
     _UgetNumUsuaris
     _UgetUserName
   _Minit
     _TiGetTimer
   _SIOMotor
     _CToAConverteix
     _CToAHaAcabat
     _CToAReset
     _CToAobtenir
     _LcClear
     _LcGotoXY
     _LcLliure
     _LcNewString
     _LcPutChar
     _UchangeScore
     _UgetScore
     _UgetUserName
   _SMotor
     _MNovaLletra
     _TiGetTics
     _TiResetTics
   _Sinit
     _TiGetTimer
   _TeInit
     _TiGetTimer
   _TeTeclat
     _JnovaTecla
     _MsetNovaTecla
     _SsetNovaTecla
     _TiGetTics
     _TiResetTics
   _TiInitTimer
   _UMotorUsuaris
     ___wmul
   _init_eusart
   _init_ports

 _high_rsi (ROOT)
   __TiRSITimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F0       6       93.8%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      4F       4       61.7%
BITCOMRAM           7E      0       2       0        1.6%
COMRAM              7E     1D      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B8       7        0.0%
DATA                 0      0     1B8       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 29 18:34:13 2021

             TiResetTics@Handle 0060                   _UMotorUsuaris 0F7C                              PL2 0B14  
                            PL4 0B2A                              PL6 0B3E                              PL8 0856  
           ___wmul@multiplicand 0062                      _HTempsJocs 1BD0                UgetUserName@quin 0062  
                           PL10 0860                             PL20 0884                             PL12 177A  
                           PL30 183C                             PL22 101A                             PL14 0F6A  
                           PL40 14A2                             PL32 08AA                             PL24 19FE  
                           PL16 18DE                             PL50 0CC8                             PL42 1104  
                           PL34 173E                             PL26 102C                             PL18 11AA  
                           PL60 1A1A                             PL52 104A                             PL44 0CBC  
                           PL36 0B46                             PL28 089A                             PL70 08B6  
                           PL62 184A                             PL54 14B0                             PL46 174C  
                           PL38 103C                             PL72 08BC                             PL64 0B54  
                           PL56 0E44                             PL48 0E38                             PL74 0CD2  
                           PL66 158C                             PL58 15F2                             PL68 08B0  
                           l302 1110                             l312 1186                             l152 13BA  
                           l305 1128                             l163 1406                             l156 13CC  
                           l720 0980                             l740 0A86                             l708 0912  
                           l922 11C4                             l738 0A60                             l931 1212  
                           l923 11DC                             l932 122A                             l925 11F6  
                           l934 1244                             l990 0FB6                             l983 0F7E  
                           l984 0F8C                             u400 1492                             u340 1450  
                           u360 1466                             u418 1494                             u380 147A  
                           u358 1452                             u378 1468                             u398 147C  
           __end_of_LcPutFletxa 1AE0                             _pos 0024                ??_CantaPartBaixa 0060  
     __size_of_HActualitzarHora 0034                             prod 000FF3                             wreg 000FE8  
                   _ultimaTecla 0043                   SIOMotor@state 0008              __size_of_GLCDMotor 0252  
                          l1130 0BB4                            l1122 0B76                            l1132 0BD0  
                          l1134 0BE8                            l1135 0BF8                            l1127 0B9E  
                          l4007 1682                            l3401 16EC                            l4025 16AA  
                          l4105 1AAC                            l4019 169C                            l5003 04EA  
                          l4037 18C4                            l4045 18CE                            l4029 19B8  
                          l4133 176C                            l5021 0514                            l5013 0500  
                          l3407 16F2                            l5103 05EA                            l4129 1764  
                          l5113 060C                            l5041 0548                            l5203 0736  
                          l5123 0638                            l5115 0612                            l5051 055A  
                          l5035 053E                            l4243 190C                            l4077 1B00  
                          l4421 095A                            l4181 1AD0                            l5221 1316  
                          l5125 063E                            l5029 0534                            l5213 0752  
                          l4335 1140                            l5063 057A                            l4239 1904  
                          l3393 16D8                            l3377 16B6                            l4521 0A68  
                          l4409 0946                            l5137 0668                            l5073 0592  
                          l4347 1174                            l4339 115C                            l3395 16E0  
                          l3387 16CC                            l4515 0A54                            l4507 0A3E  
                          l4419 0956                            l5411 12EC                            l5243 1356  
                          l5235 1344                            l5171 06DA                            l5163 06C4  
                          l5147 0696                            l5075 0598                            l4603 0038  
                          l5315 0C12                            l4357 118C                            l4541 0A9A  
                          l4461 09A8                            l4429 0970                            l4381 08F4  
                          l4365 08C4                            l5421 1302                            l4269 1072  
                          l5093 05C6                            l4701 013C                            l5333 0C54  
                          l5325 0C3C                            l3399 16E8                            l3911 17F0  
                          l4551 0ABC                            l4471 09C4                            l4375 08E6  
                          l5255 1386                            l5263 1394                            l5175 06F4  
                          l5159 06BA                            l5271 0B60                            l5351 0C84  
                          l5503 0E86                            l4537 0A92                            l4529 0A80  
                          l5417 12FE                            l5169 06D4                            l4713 0158  
                          l4625 006A                            l5337 0C5E                            l5513 0EA2  
               ?_LcInsertFletxa 005B                            l5443 11F2                            l4547 0AAE  
                          l4467 09B8                            l4395 091E                            l5195 0722  
                          l5179 06FE                            l4635 007E                            l4627 006E  
                          l4619 005E                            l5283 0B84                            l5275 0B72  
                          l5523 0EB8                            l5515 0EA8                            l5507 0E92  
                          l3933 1816                            l3941 13BE                            l4493 0A10  
                          l4477 09DA                            l4389 0908                            l4557 0AC8  
                          l5189 0712                            l4901 039C                            l5509 0E96  
                          l4581 0FBC                            l4573 0F9A                            l5455 120C  
                          l3951 13E8                            l4487 0A00                            l5375 12A2  
                          l5359 1278                            l4911 03B2                            l4823 0290  
                          l4807 0262                            l4719 0168                            l5287 0B8E  
                          l5631 0D5A                            l5615 0D36                            l5607 0D18  
                          l5551 0EFC                            l5543 0EE6                            l5535 0ED4  
                          l3937 13AE                            l4809 0268                            l4753 01C8  
                          l4729 018C                            l4681 00F8                            l4649 00A6  
                          l5713 0E0A                            l5537 0ED8                            l5529 0EC6  
                          l5475 1240                            l3947 13DA                            l5387 12B8  
                          l4931 03E4                            l4851 02F6                            l4763 01E0  
                          l4739 01A4                            l4667 00D2                            l4659 00BE  
                          l5643 0D80                            l5571 0F36                            l5563 0F24  
                          l5547 0EF2                            l4595 1000                            l3957 140E  
                          l4861 0316                            l4853 02FC                            l4773 01F8  
                          l4749 01BC                            l4693 011C                            l4669 00D8  
                          l5637 0D6C                            l5557 0F16                            l4589 0FF0  
                          l5487 125A                            l5495 1260                            l3959 1428  
                          l5399 12D2                            l4927 03DA                            l4919 03CA  
                          l4839 02C8                            l4791 0234                            l4783 0210  
                          l4695 0122                            l4679 00F2                            l5655 0DAA  
                          l5567 0F2C                            l4945 0416                            l4937 03F2  
                          l4865 031A                            l5657 0DAC                            l5649 0D96  
                          l5593 0CEE                            l5585 0CDA                            l5577 0F3C  
                          l4947 041C                            l4891 037A                            l4875 0346  
                          l5683 0DE4                            l5675 0DD6                            l5659 0DB0  
                          l4797 024E                            l5693 0DFA                            l5669 0DCC  
                          l5749 162E                            l4991 04C6                            l4983 04A2  
                          l4975 047E                            l4959 044C                            l4879 0354  
                          l4993 04CC                            l4969 046C                            l5689 0DF2  
                          STR_1 1FB2                            STR_2 1FD0                            STR_3 1FF5  
                          STR_4 1FC1                            STR_5 1FDD                            STR_6 1FE9  
                          u3110 15A2                            _LATD 000F8C                            u3130 15B8  
                          u3210 1552                            u3150 15CC                            u3230 1566  
                          u3128 15A4                            u3208 153E                            u3170 15E4  
                          u3250 157E                            u3148 15BA                            u3228 1554  
                          u3190 153C                            u4071 0FE4                            u3168 15CE  
                          u3248 1568                            u3188 15E6                            u3268 1580  
                          u3700 0952                            u4500 030E                            u3630 08F0  
                          u4520 034E                            u3730 0978                            u6050 171A  
                          u6060 1730                            u6057 1718                            u5450 11D4  
                          u5610 0E58                            u6067 172E                            u5540 1222  
                          u4680 047C                            u5618 0E5A                            u4780 050E  
                          u5910 0D7A                            u5850 0D2C                            u5980 0DDC  
                          u5990 0DEA                            _CtoA 16B4                 ??_SsetNovaTecla 0060  
                          _Rows 002F                 __end_of_AdMotor 1276                            _main 15FC  
                          _menu 1F1B                            _nota 0028           __end_of_UeditUsername 193E  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
                    _LcCursorOn 1B18                            btemp 007A                 __end_of_HJuguem 1ABC  
               __end_of_JJuguem 1B74                            prodh 000FF4                            prodl 000FF3  
               __end_of_LcClear 1A1A                            start 0032                 __end_of_CantaIR 19EE  
               __end_of_JUsuari 1BC4                   LcInit@columns 006B                    ___param_bank 000000  
                   _stringScore 0057                __end_of_GLCDInit 1B8C                  ?_UMotorUsuaris 005B  
      __size_of_SIONovaDireccio 0008                  _HClearNouMinut 1BC8                  _HClearNouSegon 1BD4  
                         ?_CtoA 005B              __size_of_CToAReset 000A                     Espera@Timer 006A  
                         ?_main 005B                   ??_TiInitTimer 0060                           _T0CON 000FD5  
                         i2l253 17D8                           _RCREG 000FAE                           _RCSTA 000FAB  
                         _TMR0H 000FD7                           _TMR0L 000FD6                           _SPBRG 000FAF  
                         _HInit 1A78                           _LcLCD 1708                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                  ?_init_eusart 005B                ?_SIOUsuariActual 005B                           _TXREG 000FAD  
                         _SMSon 1B94                           _TXSTA 000FAC                     _MNovaLletra 1B4C  
                         _Minit 1B64                __end_of_HGetTime 1BC8                           _Score 1FAB  
                         _Sinit 1B44                           _Timer 002B                __end_of_SIOMotor 0CBC  
                         _rebut 0009                           _s_ptr 0005              __size_of_HNoJuguem 0002  
                         _nou_s 03C8                     _LcCursorOff 1B22                     ?_AlTAltaveu 005B  
                   ?_HHoraMotor 005B                  __pbitbssCOMRAM 03C0                           tablat 000FF5  
                   _LcNewString 1AEC                   ??_TiResetTics 0060                           plusw1 000FE3  
                         plusw2 000FDB                           ttemp5 007B                           ttemp6 007E  
                         ttemp7 0082                           status 000FD8                           wtemp8 007B  
            __size_of_HNouMinut 000C              __size_of_HNouSegon 000C                __end_of_LcGotoXY 143E  
         _UAfegirLletraUsername 1758            CToAConverteix@numero 0060                __end_of_LcLliure 1B04  
                 ??__TiRSITimer 005B                __end_of_LcScroll 1BA0                      _TiGetTimer 18C0  
       EscriuPrimeraOrdre@ordre 0061                    __end_of_CtoA 1708                 __initialization 14BA  
            __size_of_CantaData 0020                    __end_of_main 1660          __end_of_HClearNouMinut 1BCC  
        __end_of_HClearNouSegon 1BD8                    __end_of_menu 1F9F              UMotorUsuaris@state 000C  
             __end_of_GLCDMotor 0B14                     _LcPutFletxa 1AD4                __end_of_TeTeclat 0F6A  
                        ??_CtoA 0060                     ?_HTempsJocs 0060                          ??_main 0078  
            __size_of_LcPutChar 0054                __end_of_UdelUser 1B18                   __activetblptr 000002  
                 _ultimaTeclaAD 000F                GLCDMotor@length1 0016                GLCDMotor@length2 0015  
                 UdelUser@index 0060                          ?_HInit 005B                      _JnovaTecla 1B8C  
                        ?_LcLCD 005B                          ?_SMSon 005B                    ?_CToAobtenir 0060  
                        ?_Minit 005B                          ?_Sinit 005B              __size_of_NoFerMenu 0004  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                     ??_AdMotor 0061             __end_of_TiInitTimer 1916                          _ADRESH 000FC4  
                     ??_HJuguem 0060                       ??_JJuguem 0060              __size_of_SiFerMenu 0004  
                     ??_LcClear 006B                       ??_CantaIR 0062                          i2l4221 17BE  
                        i2l4225 17D4                          i2l4217 17B6                  LcGotoXY@Fisics 006D  
                LcGotoXY@Column 006F                       ??_JUsuari 0060                    _usuariActual 0041  
                 ??_WaitForBusy 0067              __size_of_TiGetTics 0026                          _SPBRGH 000FB0  
                        _AdInit 1A66                  _sumaPulsacions 0011               __end_of_CToAReset 1B0E  
                        _AlInit 1A88                          _MTMenu 0036                     ?_LcCursorOn 005B  
                        _AlPlay 1BDC                          _AlStop 1BD8                          _JMotor 1314  
                        _SMSoff 1BB8              SIONovaDireccio@num 0060                          _LcInit 1054  
                _UgetNumUsuaris 1BA8                          _SMotor 0CD8                          _TeInit 1B3C  
                        _Espera 19B0                 ??_UMotorUsuaris 0066                    _LcGotoXY$499 006B  
                        _RowAct 002D             __end_of_TiResetTics 19FE                __end_of_high_rsi 0032  
                 ??_UcreateUser 0060                          _h_Tics 0003                 ?_HClearNouMinut 005B  
               ?_HClearNouSegon 005B                          ___wmul 1964               __end_of_HNoJuguem 1BE2  
                 ?_CToAHaAcabat 005B             __end_of__TiRSITimer 17DE                          clear_0 1500  
                        clear_1 150C                          clear_2 151C             __size_of_AlTAltaveu 009C  
                        _segons 0014             __size_of_HHoraMotor 009E                          isa$std 000001  
            __size_of_UgetScore 000C     __size_of_EscriuPrimeraOrdre 0064                          _string 0051  
             __end_of_HNouMinut 1AB0               __end_of_HNouSegon 1AD4                    __pdataCOMRAM 0035  
        __size_of_CantaPartAlta 005C                _HActualitzarHora 188C               ??_SIONovaDireccio 0060  
                  __mediumconst 1F1A                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ??_CToAConverteix 0060                 _UCancelaNouUser 1BB0  
             __end_of_CantaData 183C                    TeTeclat@cols 001F                       ?_GLCDInit 005B  
                    __accesstop 0080         __end_of__initialization 1522          __end_of_UgetNumUsuaris 1BAC  
        ?_UAfegirLletraUsername 005B                   ?_UchangeScore 005B             __size_of_HTempsJocs 0004  
             __end_of_LcPutChar 16B4                   ___rparam_used 000001                   __end_of_HInit 1A88  
                 __end_of_LcLCD 173E                     ?_TiGetTimer 005B                   __end_of_SMSon 1B9A  
                __pcstackCOMRAM 005B                   __end_of_Minit 1B6C             __end_of_WaitForBusy 181C  
                 __end_of_Score 1FB2                   __end_of_Sinit 1B4C               __end_of_NoFerMenu 1BC0  
                     ?_HGetTime 0060                    __pidataBANK0 1854                  ??_CToAHaAcabat 0060  
             __end_of_SiFerMenu 1BB8                       ?_SIOMotor 005B                      __end_ofPL2 0B2A  
                    __end_ofPL4 0B3E                      __end_ofPL6 0B46                      __end_ofPL8 0860  
             __end_of_TiGetTics 19B0             __end_of_UcreateUser 1BB0                     _TiInitTimer 18EC  
           __size_of_LcCursorOn 000A                     ?_JnovaTecla 005B                         ??_HInit 0061  
                       ??_LcLCD 0071                         ??_SMSon 0060                ??_LcInsertFletxa 0071  
                     ?_LcGotoXY 0068                       ?_LcLliure 005B                         ??_Minit 0061  
                     ?_LcScroll 005B                         ??_Sinit 0061            __size_of_init_eusart 0016  
                    ??_GLCDInit 0061         __size_of_GLCDMostraMenu 000C                      __pbssBANK0 00B7  
                    __pbssBANK1 0100                  ??_UchangeScore 0060                       ?_TeTeclat 005B  
                   _TiResetTics 19EE                         ?_AdInit 005B                 ?_UgetNumUsuaris 005B  
             __end_of_UgetScore 1AA4                         ?_AlInit 005B                         ?_MTMenu 005B  
                       ?_AlPlay 005B                         ?_AlStop 005B                         ?_JMotor 005B  
                       ?_SMSoff 005B                         ?_LcInit 006B                   _CantaPartAlta 1596  
                       ?_SMotor 005B                       ?_UdelUser 005B                         ?_TeInit 005B  
                       ?_Espera 0067                     __TiRSITimer 179C                      _deleteUser 1F9F  
                    ??_HGetTime 0062                         ?___wmul 0060                   ?_UgetUserName 0060  
                    ??_SIOMotor 0071                         _BAUDCON 000FB8         __end_of_UCancelaNouUser 1BB4  
        __size_of_MsetNovaTecla 0008                      _createUser 03C0                         LcInit@i 006D  
                    ??_LcGotoXY 0069                    ?_MNovaLletra 005B                      ??_LcLliure 0060  
                    ??_LcScroll 0063             __size_of_TiGetTimer 001E            __size_of_CToAobtenir 0004  
                       _AdMotor 11C2                    ?_LcCursorOff 005B                         _HJuguem 1AB0  
                     ?_high_rsi 005B                    ??_AlTAltaveu 0067                    ??_HHoraMotor 0067  
                       _JJuguem 1B6C                         _LcClear 1A0A                         _CantaIR 19D2  
                  ?_LcNewString 0063              JnovaTecla@direccio 0060                         _JUsuari 1BC0  
                    ??_TeTeclat 0067                     _WaitForBusy 17DE                 __size_of_AdInit 0012  
                ?_CantaPartAlta 005B                         _Columns 002E           __end_of_SsetNovaTecla 1B34  
               __size_of_AlInit 0010                 __size_of_MTMenu 0820                 __size_of_AlPlay 0004  
               __size_of_AlStop 0004                 __size_of_JMotor 0096                 __size_of_SMSoff 0004  
               __size_of_LcInit 00B0                      ??_UdelUser 0060                         __Hparam 0000  
               __size_of_SMotor 0160             __size_of_JnovaTecla 0008                 __size_of_TeInit 0008  
               __size_of_Espera 0022                         __Lparam 0000                  ??_UgetUserName 0062  
                   _UcreateUser 1BAC                 __size_of___wmul 0026                    ?_LcPutFletxa 005B  
                  ??_HTempsJocs 0062                         _delUser 0042                         __pcinit 14BA  
                       _ferMenu 03C5                      _init_ports 1A24                         __ramtop 0200  
       UeditUsername@novaLletra 0061              __end_of_AlTAltaveu 11AA                         __ptext0 15FC  
                       __ptext1 1A24                         __ptext2 1A3C                         __ptext3 0F7C  
                       __ptext4 1964                         __ptext5 18EC                         __ptext6 0E4E  
                       __ptext7 1B2C                         __ptext8 1B34                         __ptext9 1B3C  
            __end_of_HHoraMotor 1314                       _T0CONbits 000FD5                       _GLCDMotor 08C2  
                     CantaIR@IR 0062                         _counter 002A                         _horaTmp 0030  
        __size_of_UeditUsername 0028                LcNewString@new_s 0063                 WaitForBusy@Busy 0067  
                       _userPtr 0001               GLCDMostraMenu@num 0060                      ??_high_rsi 005C  
          __end_of_CToAHaAcabat 1BA8            end_of_initialization 1522                         _usuaris 0100  
                 UgetScore@quin 0060        __size_of_SIOUsuariActual 0004         __size_of_CantaPartBaixa 005C  
                 __Lmediumconst 1F1A                 TiGetTics@Handle 0064                    ??_LcCursorOn 0068  
                 _MsetNovaTecla 1B34                       CtoA@state 0007              __end_of_HTempsJocs 1BD4  
              ??_HClearNouMinut 0060                ??_HClearNouSegon 0060                      _novaLletra 0049  
      __end_of_HActualitzarHora 18C0                 _usuariActualSIO 0040                       _CToAReset 1B04  
               TiGetTics@actual 0065                      GLCDMotor@j 001B                         postdec1 000FE5  
                       postdec2 000FDD                 _SIONovaDireccio 1B7C                         postinc0 000FEE  
                       postinc2 000FDE                      _numUsuaris 000D               UchangeScore@score 0060  
                 TeTeclat@files 001E              SIOStartGame@usuari 0060                   TeTeclat@state 0020  
                     _PORTCbits 000F82            __end_of_UchangeScore 1B5C                      _timer_nota 0029  
                     _PORTDbits 000F83                      ?_GLCDMotor 005B                ?_UCancelaNouUser 005B  
                     _HNoJuguem 1BE0                   ?_SIOStartGame 005B              __end_of_LcCursorOn 1B22  
                     _TRISCbits 000F94                       _TRISDbits 000F95                       _HNouMinut 1AA4  
                     _HNouSegon 1AC8         ??_UAfegirLletraUsername 0060                  _GLCDMostraMenu 1ABC  
               ??_CantaPartAlta 0060                  ?_MsetNovaTecla 005B                       _CantaData 181C  
             __size_of_GLCDInit 0008                       _TXSTAbits 000FAC                   _UeditUsername 1916  
                __end_of_AdInit 1A78                  __end_of_AlInit 1A98                  __end_of_MTMenu 0856  
                __end_of_AlPlay 1BE0                  __end_of_AlStop 1BDC                  __end_of_JMotor 13AA  
                __end_of_SMSoff 1BBC                    ??_TiGetTimer 0060                  __end_of_LcInit 1104  
                    ?_CToAReset 005B                  __end_of_SMotor 0E38                       _LcPutChar 1660  
                    _stringText 0080                  __end_of_TeInit 1B44                  __end_of_Espera 19D2  
         __end_of_UMotorUsuaris 101A                  GLCDMotor@state 001C      __end_of_EscriuPrimeraOrdre 14A2  
                __end_of___wmul 198A               __size_of_HGetTime 0004                   __pidataCOMRAM 193E  
                   ?_init_ports 005B                       _NoFerMenu 1BBC                       _ColumnAct 002C  
                ??_SIOStartGame 0060                    _enterNewName 0090                      ?_HNoJuguem 005B  
             __size_of_SIOMotor 015E                    ?_TiInitTimer 005B                     MTMenu@state 0022  
              UeditUsername@pos 0060                    ??_JnovaTecla 0060                       _SiFerMenu 1BB4  
                   __end_ofPL10 0884                     __end_ofPL20 089A                     __end_ofPL12 179C  
                   __end_ofPL30 184A                     __end_ofPL22 102C                     __end_ofPL14 0F7C  
                   __end_ofPL40 14B0                     __end_ofPL32 08B0                     __end_ofPL24 1A0A  
                   __end_ofPL16 18EC                     __end_ofPL50 0CD2                     __end_ofPL42 110E  
                   __end_ofPL34 174C                     __end_ofPL26 103C                     __end_ofPL18 11C2  
                   __end_ofPL60 1A24                     __end_ofPL52 1054                     __end_ofPL44 0CC8  
                   __end_ofPL36 0B54                     __end_ofPL28 08AA                     __end_ofPL70 08BC  
                   __end_ofPL62 1854                     __end_ofPL54 14BA                     __end_ofPL46 1758  
                   __end_ofPL38 104A                     __end_ofPL72 08C2                     __end_ofPL64 0B5E  
                   __end_ofPL56 0E4E                     __end_ofPL48 0E44                     __end_ofPL74 0CD8  
                   __end_ofPL66 1596                     __end_ofPL58 15FC                     __end_ofPL68 08B6  
           start_initialization 14BA                       _TiGetTics 198A          __end_of_GLCDMostraMenu 1AC8  
                    ?_HNouMinut 005B                      ?_HNouSegon 005B                ??_UgetNumUsuaris 0060  
             __size_of_LcGotoXY 0094            __end_of_UgetUserName 1A66              __end_of_TiGetTimer 18DE  
                 JJuguem@usuari 0060            __size_of_MNovaLletra 0008               __size_of_LcLliure 000C  
             __size_of_LcScroll 0006                    ?_TiResetTics 005B            __size_of_LcCursorOff 000A  
                    ?_CantaData 005B                        ??_AdInit 0060                        ??_AlInit 0061  
                      ??_MTMenu 0071                        ??_AlPlay 0060                  ?_UeditUsername 0060  
       __end_of_SIONovaDireccio 1B84                        ??_AlStop 0060            __size_of_LcNewString 000C  
                      ??_JMotor 0070                        ??_SMSoff 0060                        ??_LcInit 006C  
                     _NovaTecla 004A               __size_of_TeTeclat 011C                        ??_SMotor 0067  
                      ??_TeInit 0061                    ?__TiRSITimer 005B                        ??_Espera 0069  
             ??_SIOUsuariActual 0060                       _UgetScore 1A98              __end_of_JnovaTecla 1B94  
                    ?_LcPutChar 005B               __size_of_UdelUser 000A                        ??___wmul 0064  
               AlTAltaveu@state 0026                     __pdataBANK0 0080                      ?_NoFerMenu 005B  
          __size_of_LcPutFletxa 000C                     ??_GLCDMotor 0071                   ??_init_eusart 0060  
                    ?_SiFerMenu 005B                     __pbssCOMRAM 0001           __size_of_CToAHaAcabat 0004  
                    ?_TiGetTics 0060                 ?_GLCDMostraMenu 005B                        ?_AdMotor 005B  
                      ?_HJuguem 005B                 ??_MsetNovaTecla 0060                        ?_JJuguem 005B  
                      ?_LcClear 005B                        ?_CantaIR 005B                  _CantaPartBaixa 1530  
                      ?_JUsuari 005B               __size_of_high_rsi 002A                    ?_WaitForBusy 005B  
           __size_of_init_ports 0018              MsetNovaTecla@tecla 0060              SsetNovaTecla@tecla 0060  
       __size_of_CToAConverteix 0008                      ?_UgetScore 005B                     ??_CToAReset 0060  
                     __pintcode 0008                    ?_UcreateUser 005B                   __pmediumconst 1F1A  
         __size_of_UchangeScore 0008                 CantaPartBaixa@c 0061                    _CToAHaAcabat 1BA4  
                     _highScore 00AB                     JMotor@state 000A                     ??_HNoJuguem 0060  
                     _convertir 003E                   ??_CToAobtenir 0062                  __size_of_HInit 0010  
                __size_of_LcLCD 0036                  __size_of_SMSon 0006                  __size_of_Minit 0008  
                   ??_HNouMinut 0060                  __size_of_Sinit 0008                     ??_HNouSegon 0060  
        __end_of_CantaPartBaixa 158C                        _GLCDInit 1B84             __end_of_init_eusart 1A52  
                     _newString 03C4                 ??_UeditUsername 0062                     ??_CantaData 0062  
               HHoraMotor@state 0012         __size_of_LcInsertFletxa 000C                  ___wmul@product 0064  
                      _LATBbits 000F8A                        _LATCbits 000F8B                        _LATDbits 000F8C  
                  _UchangeScore 1B54                ?_SIONovaDireccio 005B            __end_of_SIOStartGame 1B7C  
                     _posFletxa 03C6                       _novaTecla 0045               ?_HActualitzarHora 0060  
                      _PIR1bits 000F9E                     ??_LcPutChar 0070                       _timerGLCD 001D  
                      _RCONbits 000FD0                       _reproduir 03C7                        _HGetTime 1BC4  
            ??_HActualitzarHora 0061                       _timerHora 0013                       _timerMenu 0023  
                      _SIOMotor 0B5E                     ??_NoFerMenu 0060                      _ADCON0bits 000FC2  
             ___wmul@multiplier 0060                     ??_SiFerMenu 0060           __size_of_UgetUserName 0014  
        __size_of_SsetNovaTecla 0008     UAfegirLletraUsername@lletra 0062                        Espera@ms 0067  
                      _LcGotoXY 13AA                        _LcLliure 1AF8                     ??_TiGetTics 0062  
          __size_of_TiInitTimer 002A                        _LcScroll 1B9A                   GLCDMotor@max1 0048  
                 GLCDMotor@max2 0047                   GLCDMotor@min1 001A                   GLCDMotor@min2 0019  
                  _teclaPremuda 009F              __end_of_deleteUser 1FAB                     LcGotoXY@Row 0068  
                     copy_data0 14CE                       copy_data1 14EE                 ?_CantaPartBaixa 005B  
              __size_of_AdMotor 00B4             __end_of_CToAobtenir 1BA4  __size_of_UAfegirLletraUsername 0022  
              __size_of_HJuguem 000C   __end_of_UAfegirLletraUsername 177A                __size_of_JJuguem 0008  
              __size_of_LcClear 0010                __size_of_CantaIR 001C                        _TeTeclat 0E4E  
              __size_of_JUsuari 0004            __size_of_TiResetTics 0010                        _UdelUser 1B0E  
                      __Hrparam 0000                     ??_UgetScore 0060                        __Lrparam 0000  
          __size_of__TiRSITimer 0042                    _UgetUserName 1A52                    _novaDireccio 000B  
                  ??_init_ports 0060                     _init_eusart 1A3C                        __ptext10 1B44  
                      __ptext11 0CD8              _EscriuPrimeraOrdre 143E                        __ptext20 1B64  
                      __ptext12 1B4C                        __ptext21 0036                        __ptext13 0B5E  
                      __ptext30 1B94                        __ptext22 1A52                        __ptext14 1A98  
                      __ptext31 1BB8                        __ptext23 1BA8                        __ptext15 1B54  
                      __ptext40 1BC4                        __ptext32 1BBC                        __ptext24 1916  
                      __ptext16 1BA0                        __ptext41 1BC8                        __ptext33 1B9A  
                      __ptext25 1B0E                        __ptext17 1B04                        __ptext50 1B74  
                      __ptext42 188C                        __ptext34 1B18                        __ptext26 1BAC  
                      __ptext18 1BA4                        __ptext51 1B7C                        __ptext43 1ABC  
                      __ptext35 1BC0                        __ptext27 1BB0                        __ptext19 1B5C  
                      __ptext60 1AD4                        __ptext52 1BD0                        __ptext44 1708  
                      __ptext36 1B6C                        __ptext28 1758                        __ptext61 1AE0  
                      __ptext53 1AC8                        __ptext45 1054                        __ptext37 1AA4  
                      __ptext29 1BB4                        __ptext70 19D2                        __ptext62 1660  
                      __ptext54 1BD4                        __ptext46 1B22                        __ptext38 1BE0  
                      __ptext71 1530                        __ptext63 13AA                        __ptext55 1BD8  
                      __ptext47 143E                        __ptext39 1AB0                        __ptext80 11C2  
                      __ptext72 1596                        __ptext64 181C                        __ptext56 1BDC  
                      __ptext48 1314                        __ptext81 1B8C                        __ptext73 1B84  
                      __ptext65 1AEC                        __ptext57 1A78                        __ptext49 1BCC  
                      __ptext82 1A66                        __ptext74 16B4                        __ptext66 1AF8  
                      __ptext58 1276                        __ptext75 110E                        __ptext67 1A0A  
                      __ptext59 08C2                        __ptext84 179C                        __ptext76 19EE  
                      __ptext68 17DE                        __ptext77 198A                        __ptext69 19B0  
                      __ptext78 1A88                        __ptext79 18C0                        _direccio 003F  
                CantaPartAlta@c 0061                     _lletraASCII 0046           UeditUsername@menuDalt 0064  
               _SIOUsuariActual 1BCC                        _high_rsi 0008        __size_of_UCancelaNouUser 0004  
                      _s_Timers 00B7                   __size_of_CtoA 0054                     _lletraInici 0035  
                      _menuDalt 0025             ?_EscriuPrimeraOrdre 005B                   __size_of_main 0064  
         __end_of_CantaPartAlta 15F2            HActualitzarHora@nova 0060                  _CToAConverteix 1B5C  
                 CantaData@Data 0062                        _tiTeclat 0021              __end_of_init_ports 1A3C  
                      _setSMSon 03C1                   _SsetNovaTecla 1B2C            __size_of_WaitForBusy 003E  
                      _nouMinut 03C3                        _nouSegon 03C2                        _timerSMS 0044  
                      isa$xinst 000000                        int$flags 007A            __size_of_UcreateUser 0004  
       __size_of_HClearNouMinut 0004         __size_of_HClearNouSegon 0004            ??_EscriuPrimeraOrdre 0060  
                    LcInit@rows 006C                ??_GLCDMostraMenu 0060                      _INTCONbits 000FF2  
                 ??_MNovaLletra 0060                     _CToAobtenir 1BA0                   ??_LcCursorOff 0068  
        __size_of_UMotorUsuaris 009E           __size_of_SIOStartGame 0008                   ??_LcNewString 0065  
                      intlevel2 0000          __end_of_CToAConverteix 1B64                  _LcInsertFletxa 1AE0  
                    LcPutChar@c 0070                  ?_SsetNovaTecla 005B               MNovaLletra@lletra 0060  
                 ??_LcPutFletxa 0071                    _timer_durada 0027                     GLCDMotor@k1 0018  
                   GLCDMotor@k2 0017                     _tempsJugant 004B         __end_of_SIOUsuariActual 1BD0  
                  _SIOStartGame 1B74                    AdMotor@state 000E          __end_of_LcInsertFletxa 1AEC  
                    _AlTAltaveu 110E                      _HHoraMotor 1276             __end_of_MNovaLletra 1B54  
               ?_CToAConverteix 005B           __end_of_MsetNovaTecla 1B3C             __end_of_LcCursorOff 1B2C  
                   SMotor@state 0010               ??_UCancelaNouUser 0060         __size_of_UgetNumUsuaris 0004  
           __end_of_LcNewString 1AF8  
